<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>O₂</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://oxy.pub/"/>
  <updated>2017-09-07T04:30:22.000Z</updated>
  <id>http://oxy.pub/</id>
  
  <author>
    <name>nina</name>
    <email>enamor.en@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基于七牛播放器PLPlayer的二次封装(全屏) 以及七牛iOS播放器各个版本的问题</title>
    <link href="http://oxy.pub/2017/09/07/PLPlayerPackaging/"/>
    <id>http://oxy.pub/2017/09/07/PLPlayerPackaging/</id>
    <published>2017-09-07T04:24:25.000Z</published>
    <updated>2017-09-07T04:30:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>源码地址：<a href="https://github.com/enamor/PLPlayerPackaging" target="_blank" rel="external">https://github.com/enamor/PLPlayerPackaging</a></strong><br><strong>效果展示:</strong><br><img src="https://raw.githubusercontent.com/enamor/ScreenImage/master/PLPlayerPackaging/show.gif" alt=""></p>
<p><em>基于PLPlayer封装的视频播放器  目前用的是2.4.3版本、一句话即可实现视频的播放 支持横屏、竖屏，监听屏幕旋转</em></p>
<p><strong>蛋疼的问题：</strong></p>
<ul>
<li>2.3 频繁切换播放有崩溃问题 频繁切换无法播放同2.4.3解决方式</li>
<li>2.4.3  pause回调状态不对  频繁切换播放无法播放需要以下处理(</li>
</ul>
<p>if([[UIDevice currentDevice] systemVersion].intValue&gt;=10){</p>
<p>​        // 增加下面这行可以解决iOS10兼容性问题了</p>
<p>​        self.player.avplayer.automaticallyWaitsToMinimizeStalling = NO;</p>
<p>​    }</p>
<ul>
<li><p>3.0.0 frame设置无效 首次播放之后 修改frame无效 部分视频无法播放声音</p>
</li>
<li><p>3.0.1  1.部分视频无法播放声音 pause 后  2.播放器 stop 再play 播放器重新绘制layer 从头播放</p>
<p><strong>————————我也是醉了反正是没有完善的的版本，建议用ijkplayer替换 (如果不是老项目中用到的！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！)————————————</strong></p>
</li>
</ul>
<p><strong>使用说明：</strong></p>
<p><em>播放器需要传入一view 自动适应view的尺寸 为了简化全屏模式统一使用屏幕旋转的方式进行适配全屏、目前控制层UI未做详细拆分，后期将逐步优化、只为做最简单的视频播放器</em></p>
<ul>
<li>单利模式</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">//自动创建单例 此次一句话即可实现播放 同时适配横竖屏</div><div class="line">[PackPlayer playWithUrl:url onView:_playView];</div><div class="line"></div><div class="line">//单例需要手动释放</div><div class="line">[NIPlayer releasePlayer];</div></pre></td></tr></table></figure>
<p><em>状态栏旋转需要控制器中重写方法 (目前UIViewController分类中已经重写)且需要在info.Plist 添加 View controller-based status bar appearance 设置成No，默认为Yes</em></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">- (BOOL)shouldAutorotate &#123;</div><div class="line">    return NO;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>温馨提示:</strong></p>
<p>1、为了处理视频全屏模式后台进入前台可以平滑的进入（无启动页）对AppDelegate 添加了分类处理 重写了以下方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">//一般状态此处用户无需处理</div><div class="line">- (UIInterfaceOrientationMask)application:(UIApplication *)application supportedInterfaceOrientationsForWindow:(UIWindow *)window &#123;</div><div class="line">    </div><div class="line">    if (self.allowRotationType == AllowRotationMaskPortrait) &#123;</div><div class="line">        return UIInterfaceOrientationMaskPortrait;</div><div class="line">    &#125;else if (self.allowRotationType == AllowRotationMaskAllButUpsideDown) &#123;</div><div class="line">        return  UIInterfaceOrientationMaskAllButUpsideDown;</div><div class="line">    &#125;else &#123;</div><div class="line">        return UIInterfaceOrientationMaskLandscapeLeft | UIInterfaceOrientationMaskLandscapeRight;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>2、APP支持方向设置为竖屏即可</p>
]]></content>
    
    <summary type="html">
    
      简单一句话实现播放功能。
    
    </summary>
    
      <category term="iOS" scheme="http://oxy.pub/categories/iOS/"/>
    
    
      <category term="Objective-C" scheme="http://oxy.pub/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>一句话实现AVPlayer视频播放</title>
    <link href="http://oxy.pub/2017/05/01/niplayer/"/>
    <id>http://oxy.pub/2017/05/01/niplayer/</id>
    <published>2017-05-01T10:28:57.000Z</published>
    <updated>2017-06-17T07:06:45.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>源码地址：</strong>Github    <a href="https://github.com/enamor/NIPlayer" target="_blank" rel="external">https://github.com/enamor/NIPlayer</a></p>
<p><em>基于AVPlayer封装的视频播放器 、一句话即可实现视频的播放 支持横屏、竖屏，监听屏幕旋转，上下滑动调节音量、屏幕亮度，左右滑动调节播放进度，快进画面预览等</em></p>
<p><strong>使用说明：</strong></p>
<p><em>播放器需要传入一view 自动适应view的尺寸 为了简化全屏模式统一使用屏幕旋转的方式进行适配全屏、目前控制层UI未做详细拆分，后期将逐步优化、只为做最简单的视频播放器</em></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//此次一句话即可实现播放 同时适配横竖屏、竖立的视频</div><div class="line">[[NIPlayer sharedPlayer] playWithUrl:_url onView:playView];</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">//对播放器内部对以下状态做了监听，可以更好的自己处理各种情况</div><div class="line">typedef NS_ENUM(NSInteger, NIAVPlayerStatus) &#123;</div><div class="line">    NIAVPlayerStatusLoading = 0,     // 加载视频</div><div class="line">    NIAVPlayerStatusReadyToPlay,     // 准备好播放</div><div class="line">    NIAVPlayerStatusIsPlaying,       // 正在播放</div><div class="line">    NIAVPlayerStatusIsPaused,        // 已经暂停</div><div class="line">    NIAVPlayerStatusPlayEnd,         // 播放结束</div><div class="line">    NIAVPlayerStatusCacheData,       // 缓冲视频</div><div class="line">    NIAVPlayerStatusCacheEnd,        // 缓冲结束</div><div class="line">    NIAVPlayerStatusPlayStop,        // 播放中断 （多是没网）</div><div class="line">    NIAVPlayerStatusItemFailed,      // 视频资源问题</div><div class="line">    NIAVPlayerStatusEnterBack,       // 进入后台</div><div class="line">    NIAVPlayerStatusBecomeActive,    // 从后台返回</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p><strong>预览：</strong></p>
<p><img src="/2017/05/01/niplayer/showhow1.png" alt=""></p>
<p><img src="/2017/05/01/niplayer/showhow3.png" alt=""></p>
<p><img src="/2017/05/01/niplayer/showhow4.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      由于近期项目和视频相关的比较多，而项目中别人封装的不甚满意，所以自己进行了封装，希望有更好的扩展性，同时希望大家多多提取意见，以便于更好的封装。
    
    </summary>
    
      <category term="iOS" scheme="http://oxy.pub/categories/iOS/"/>
    
    
      <category term="Objective-C" scheme="http://oxy.pub/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>Alamofire4.4 网络请求的封装</title>
    <link href="http://oxy.pub/2017/03/11/Alamofire/"/>
    <id>http://oxy.pub/2017/03/11/Alamofire/</id>
    <published>2017-03-10T16:00:00.000Z</published>
    <updated>2017-04-22T09:34:06.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>github：</strong> <a href="https://github.com/enamor/Alamofire/" target="_blank" rel="external">https://github.com/enamor/Alamofire/</a></p>
<p><strong>Usage</strong></p>
<hr>
<p><strong>Making a  GET Request</strong>     <em>it’s just requests for JSON</em></p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="type">NIRequest</span>.getRequest(<span class="string">"https://xxx.com"</span>, </div><div class="line">success: &#123; (dictResponse) <span class="keyword">in</span></div><div class="line"><span class="built_in">print</span>(dictResponse)</div><div class="line">&#125;) &#123; (error) <span class="keyword">in</span></div><div class="line"><span class="built_in">print</span>(error)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="type">NIRequest</span>.getRequest(<span class="string">"https://xxx.com"</span>, </div><div class="line">params: [<span class="string">"title"</span>:<span class="string">"xxx"</span>], </div><div class="line">success: &#123; (dictResponse) <span class="keyword">in</span></div><div class="line"><span class="built_in">print</span>(dictResponse)</div><div class="line">&#125;) &#123; (error) <span class="keyword">in</span></div><div class="line"><span class="built_in">print</span>(error)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>Making a  POST Request</strong>  <em>it’s just requests for JSON</em></p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="type">NIRequest</span>.postRequest(<span class="string">"https://xxx.com"</span>, </div><div class="line">params: [<span class="string">"title"</span>:<span class="string">"xxx"</span>], </div><div class="line">success: &#123; (dictResponse) <span class="keyword">in</span></div><div class="line"><span class="built_in">print</span>(dictResponse)</div><div class="line">&#125;) &#123; (error) <span class="keyword">in</span></div><div class="line"><span class="built_in">print</span>(error)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>Making an Image Upload</strong></p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> image = <span class="type">UIImage</span>(named: <span class="string">"mbase.jpg"</span>)</div><div class="line"><span class="keyword">let</span> data = <span class="type">UIImagePNGRepresentation</span>(image!);</div><div class="line"></div><div class="line"><span class="type">NIRequest</span>.upLoadImage(url, data: data!, </div><div class="line">success: &#123; (dictResponse) <span class="keyword">in</span></div><div class="line"></div><div class="line">&#125;) &#123; (error) <span class="keyword">in</span></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>Multi file upload</strong></p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> image = <span class="type">UIImage</span>(named: <span class="string">"mbase.jpg"</span>)</div><div class="line"><span class="keyword">let</span> data = <span class="type">UIImagePNGRepresentation</span>(image!);</div><div class="line"><span class="type">NIRequest</span>.upLoadFiles(urlString, data: [data!,data!], </div><div class="line">success: &#123; dictResponse <span class="keyword">in</span></div><div class="line"></div><div class="line">&#125;) &#123; error <span class="keyword">in</span></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>Source code</strong></p>
<hr>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> UIKit</div><div class="line"><span class="keyword">import</span> Alamofire</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">typealias</span> <span class="type">Success</span> = (<span class="number">_</span> response : [<span class="type">String</span> : <span class="type">Any</span>])-&gt;()</div><div class="line"><span class="keyword">public</span> <span class="keyword">typealias</span> <span class="type">Failure</span> = (<span class="number">_</span> error : <span class="type">Error</span>)-&gt;()</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">NIRequest</span>: <span class="title">NSObject</span> </span>&#123;</div><div class="line"></div><div class="line"><span class="comment">///单例写法（此处无需单例 直接用类方法）</span></div><div class="line"><span class="keyword">static</span> <span class="keyword">let</span> shared = <span class="type">NIRequest</span>()</div><div class="line"><span class="keyword">private</span> <span class="keyword">override</span> <span class="keyword">init</span>() &#123;</div><div class="line"><span class="comment">// 初始化一些内容</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">// MARK: -------- GET POST</span></div><div class="line"><span class="class"><span class="keyword">extension</span> <span class="title">NIRequest</span> </span>&#123;</div><div class="line"><span class="comment">/// GET请求</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">getRequest</span>(</span></div><div class="line"><span class="title">_</span> <span class="title">urlString</span>: <span class="title">String</span>,</div><div class="line"><span class="title">params</span>: <span class="title">Parameters</span>? = <span class="title">nil</span>,</div><div class="line"><span class="title">success</span>: @<span class="title">escaping</span> <span class="title">Success</span>,</div><div class="line"><span class="title">failure</span>: @<span class="title">escaping</span> <span class="title">Failure</span>)</div><div class="line">&#123;</div><div class="line">request(urlString, params: params, method: .<span class="keyword">get</span>, success, failure)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/// POST请求</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">postRequest</span>(</span></div><div class="line"><span class="title">_</span> <span class="title">urlString</span>: <span class="title">String</span>,</div><div class="line"><span class="title">params</span>: <span class="title">Parameters</span>? = <span class="title">nil</span>,</div><div class="line"><span class="title">success</span>: @<span class="title">escaping</span> <span class="title">Success</span>,</div><div class="line"><span class="title">failure</span>: @<span class="title">escaping</span> <span class="title">Failure</span>)</div><div class="line">&#123;</div><div class="line"></div><div class="line">request(urlString, params: params, method: .post, success, failure)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">request</span>(</span></div><div class="line"><span class="title">_</span> <span class="title">urlString</span>: <span class="title">String</span>,</div><div class="line"><span class="title">params</span>: <span class="title">Parameters</span>? = <span class="title">nil</span>,</div><div class="line"><span class="title">method</span>: <span class="title">HTTPMethod</span>,</div><div class="line"><span class="title">_</span> <span class="title">success</span>: @<span class="title">escaping</span> <span class="title">Success</span>,</div><div class="line"><span class="title">_</span> <span class="title">failure</span>: @<span class="title">escaping</span> <span class="title">Failure</span>)</div><div class="line">&#123;</div><div class="line"></div><div class="line"><span class="type">Alamofire</span>.request(urlString, method: method, parameters: params)</div><div class="line">.validate(statusCode: <span class="number">200</span>..&lt;<span class="number">300</span>)</div><div class="line">.responseJSON &#123; response <span class="keyword">in</span></div><div class="line"></div><div class="line"><span class="keyword">switch</span> response.result &#123;</div><div class="line"><span class="keyword">case</span> .success:</div><div class="line"><span class="keyword">if</span> <span class="keyword">let</span> value = response.result.value <span class="keyword">as</span>? [<span class="type">String</span>: <span class="type">AnyObject</span>] &#123;</div><div class="line">success(value)</div><div class="line">&#125;</div><div class="line"><span class="keyword">case</span> .failure(<span class="keyword">let</span> error):</div><div class="line">failure(error)</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// MARK: -------- 上传(可多文件上传)</span></div><div class="line"><span class="class"><span class="keyword">extension</span> <span class="title">NIRequest</span> </span>&#123;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/// 单文件上传</span></div><div class="line"><span class="comment">///</span></div><div class="line"><span class="comment">/// - Parameters:</span></div><div class="line"><span class="comment">///   - urlString:</span></div><div class="line"><span class="comment">///   - data: 二进制文件</span></div><div class="line"><span class="comment">///   - name: 和后台约定字段名称</span></div><div class="line"><span class="comment">///   - fileName: xx.png xx.jpg xx.zip...</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">upLoadImage</span>(</span></div><div class="line"><span class="title">_</span> <span class="title">urlString</span>: <span class="title">String</span>,</div><div class="line"><span class="title">data</span>: <span class="title">Data</span>,</div><div class="line"><span class="title">name</span>: <span class="title">String</span> = "<span class="title">image</span>",</div><div class="line"><span class="title">fileName</span>: <span class="title">String</span> = "<span class="title">image</span>.<span class="title">png</span>",</div><div class="line"><span class="title">params</span>: <span class="title">Parameters</span>? = <span class="title">nil</span>,</div><div class="line"><span class="title">success</span>: @<span class="title">escaping</span> <span class="title">Success</span>,</div><div class="line"><span class="title">failure</span>: @<span class="title">escaping</span> <span class="title">Failure</span>)</div><div class="line">&#123;</div><div class="line">upLoadFiles(urlString, data: [data], names: [name], fileNames: [fileName], params: params, success: success, failure: failure)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/// 上传多文件</span></div><div class="line"><span class="comment">///</span></div><div class="line"><span class="comment">/// - Parameters:</span></div><div class="line"><span class="comment">///   - urlString: url</span></div><div class="line"><span class="comment">/// - parameter data:     The data to encode into the multipart form data.</span></div><div class="line"><span class="comment">/// - parameter name:     The name to associate with the data in the `Content-Disposition` HTTP header.</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">upLoadFiles</span>(</span></div><div class="line"><span class="title">_</span> <span class="title">urlString</span>: <span class="title">String</span>,</div><div class="line"><span class="title">data</span>: [<span class="title">Data</span>],</div><div class="line"><span class="title">names</span>: [<span class="title">String</span>]? = <span class="title">nil</span>,</div><div class="line"><span class="title">fileNames</span>: [<span class="title">String</span>]? = <span class="title">nil</span>,</div><div class="line"><span class="title">params</span>: <span class="title">Parameters</span>? = <span class="title">nil</span>,</div><div class="line"><span class="title">success</span>: @<span class="title">escaping</span> <span class="title">Success</span>,</div><div class="line"><span class="title">failure</span>: @<span class="title">escaping</span> <span class="title">Failure</span>)</div><div class="line">&#123;</div><div class="line"><span class="type">Alamofire</span>.upload(</div><div class="line">multipartFormData: &#123; multipartFormData <span class="keyword">in</span></div><div class="line"></div><div class="line"><span class="built_in">assert</span>(names?.<span class="built_in">count</span> == fileNames?.<span class="built_in">count</span>, <span class="string">"names.count != fileNames.count There may be problems"</span>)</div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;data.<span class="built_in">count</span> &#123;</div><div class="line"><span class="keyword">let</span> data_name = names?[i] ?? <span class="string">"image<span class="subst">\(i)</span>"</span></div><div class="line"><span class="keyword">let</span> file_name = fileNames?[i] ?? <span class="string">"image<span class="subst">\(i)</span>.png"</span></div><div class="line"></div><div class="line"><span class="comment">//"image/png"</span></div><div class="line">multipartFormData.append(data[i], withName: data_name ,fileName: file_name, mimeType: <span class="string">"multipart/form-data"</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//参数添加</span></div><div class="line"><span class="keyword">if</span> <span class="keyword">let</span> params = params &#123;</div><div class="line"><span class="keyword">for</span> (key, value) <span class="keyword">in</span> params &#123;</div><div class="line">multipartFormData.append(((value <span class="keyword">as</span> <span class="type">AnyObject</span>).data(using: <span class="type">String</span>.<span class="type">Encoding</span>.utf8.rawValue)!), withName: key)</div><div class="line"></div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;,</div><div class="line">to: urlString,</div><div class="line">encodingCompletion: &#123; encodingResult <span class="keyword">in</span></div><div class="line"><span class="keyword">switch</span> encodingResult &#123;</div><div class="line"><span class="keyword">case</span> .success(<span class="keyword">let</span> upload, <span class="number">_</span>, <span class="number">_</span>):</div><div class="line">upload.responseJSON &#123; response <span class="keyword">in</span></div><div class="line"><span class="keyword">if</span> <span class="keyword">let</span> value = response.result.value <span class="keyword">as</span>? [<span class="type">String</span>: <span class="type">Any</span>]&#123;</div><div class="line">success(value)</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">case</span> .failure(<span class="keyword">let</span> encodingError):</div><div class="line">failure(encodingError)</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">)</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
]]></content>
    
    <summary type="html">
    
      基于Alamofire4.4 GET、POST 文件上传的封装
    
    </summary>
    
      <category term="iOS" scheme="http://oxy.pub/categories/iOS/"/>
    
    
      <category term="Swift" scheme="http://oxy.pub/tags/Swift/"/>
    
  </entry>
  
  <entry>
    <title>github优秀资源(iOS/Android/Java)</title>
    <link href="http://oxy.pub/2016/12/11/GithubCode/"/>
    <id>http://oxy.pub/2016/12/11/GithubCode/</id>
    <published>2016-12-10T16:00:00.000Z</published>
    <updated>2017-05-23T13:14:57.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="IOS"><a href="#IOS" class="headerlink" title="IOS"></a>IOS</h2><h3 id="OC"><a href="#OC" class="headerlink" title="OC"></a>OC</h3><h4 id="动画"><a href="#动画" class="headerlink" title="动画"></a><em>动画</em></h4><ul>
<li><a href="https://github.com/facebook/pop" target="_blank" rel="external">pop动画框架</a> FaceBook出品的动画框架，绝对牛逼！</li>
<li><a href="https://github.com/jhurray/JHChainableAnimations" target="_blank" rel="external">JHChainableAnimations</a> oc的链式代码来操作动画，非常不错，省事简单</li>
<li><a href="https://github.com/daltoniam/DCAnimationKit" target="_blank" rel="external">DCAnimationKit</a> 一些简单的动画封装，一行代码就可用了</li>
<li><a href="https://github.com/CanvasPod/Canvas" target="_blank" rel="external">Canvas</a> 可以通过在 Storyboard 中指定 User Defined Runtime Attributes 来实现一些 Canvas 中预设的动画</li>
<li><a href="https://github.com/ColinEberhardt/VCTransitionsLibrary" target="_blank" rel="external">VCTransitionsLibrary</a> VC转场动画库，好多哦！！！！</li>
<li><a href="https://github.com/YouXianMing/Animations" target="_blank" rel="external">Animations</a> 很多酷炫动画的集合，可以以后用来借鉴参考</li>
<li><a href="https://github.com/YouXianMing/YoCelsius" target="_blank" rel="external">YoCelsius</a> 一堆堆的动画效果，借鉴，借鉴！！！</li>
</ul>
<h4 id="视频-图像"><a href="#视频-图像" class="headerlink" title="视频/图像"></a><em>视频/图像</em></h4><ul>
<li><a href="https://github.com/mwaterfall/MWPhotoBrowser" target="_blank" rel="external">MWPhotoBrowser</a> 相册选择/浏览器，还有好多吊炸天的功能</li>
<li><a href="https://github.com/gang544043963/LGPhotoBrowser" target="_blank" rel="external">LGPhotoBrowser</a> 相册选择/浏览器，界面模仿微信。支持本地照片选择、本地相册浏览、网络图片浏览、自定义照相机单拍、连拍 我就基于这上面进行再次封装，形成了自己公司的一个控件来使用</li>
<li><a href="https://github.com/banchichen/TZImagePickerController" target="_blank" rel="external">TZImagePickerController</a> 一个支持多选、选原图和视频的图片选择器，同时有预览功能，适配了iOS6789系统。 A clone of UIImagePickerController, support picking multiple photos、original photo、video, also allow preview photo and video, fitting iOS6789 system.</li>
<li><a href="https://github.com/liuzhiyi1992/ZYCornerRadius" target="_blank" rel="external">ZYCornerRadius</a> 一句代码，圆角风雨无阻。A Category to make cornerRadius for UIImageView have no Offscreen-Rendered, be more efficiency. <a href="http://zyden.vicp.cc/zycornerradius/" target="_blank" rel="external">http://zyden.vicp.cc/zycornerradius/</a></li>
<li><a href="https://github.com/Nyx0uf/NYXImagesKit" target="_blank" rel="external">NYXImagesKit</a> 一个对UIImage扩展的扩展库。A set of efficient categories for UIImage class. It allows filtering, resizing, masking, rotating, enhancing… and more.</li>
<li><a href="https://github.com/gsdios/SDCycleScrollView" target="_blank" rel="external">SDCycleScrollView</a> 一个很好用的图片轮播控件，作者号称： “iOS第一图片轮播器” 无限循环图片轮播器。</li>
<li><a href="https://github.com/BradLarson/GPUImage" target="_blank" rel="external">GPUImage</a> 一个图像处理框架，功能绝对强大，可以做出自己的美图秀秀或者修图App。</li>
<li><a href="https://github.com/panicinc/ColorArt" target="_blank" rel="external">ColorArt</a> 通过选取的背景图片自动算出最合适的3个标题的颜色。</li>
<li><a href="https://github.com/daniulive/SmarterStreaming" target="_blank" rel="external">SmarterStreaming</a> SmarterStreaming系列产品，系daniulive（大牛直播）出品的跨平台视频采集、直播SDK（支持私有协议和RTMP推流，如Windows推流/android推流/iOS推流/Windows播放/android播放/iOS播放），公网毫秒级延迟，也许是国内最靠谱的视频直播推流、播放SDK之一，助您轻松实现类似于花椒、映客、斗鱼手机直播推送与播放</li>
<li><a href="https://github.com/CharlinFeng/CorePhotoBroswerVC" target="_blank" rel="external">CorePhotoBroswerVC</a> 快速集成高性能照片浏览器，支持本地及网络相册</li>
<li><a href="https://github.com/renzifeng/ZFPlayer" target="_blank" rel="external">ZFPlayer</a> 基于AVPlayer，支持横屏、竖屏（全屏播放还可锁定屏幕方向），上下滑动调节音量、屏幕亮度，左右滑动调节播放进度。Based on AVPlayer, support for the horizontal screen, vertical screen (full screen playback can also lock the screen direction), the upper and lower slide to adjust the volume, the screen brightness, or so slide to adjust the playback progress</li>
<li><a href="https://github.com/pili-engineering/PLCameraStreamingKit" target="_blank" rel="external">PLCameraStreamingKit</a> 一个适用于 iOS 的 RTMP 直播推流 SDK，可高度定制化和二次开发(有空我要好好研究下这玩意)</li>
<li><a href="https://github.com/casatwy/CTVideoPlayerView" target="_blank" rel="external">CTVideoPlayerView</a> 视频播放，支持在线播放，下载，自定义按钮，可以学习下</li>
<li><a href="https://github.com/ShelinShelin/XLVideoPlayer" target="_blank" rel="external">XLVideoPlayer</a> 一款视频播放器，可以学习一下</li>
<li><a href="https://github.com/zhengwenming/WMPlayer" target="_blank" rel="external">WMPlayer</a> WMPlayer视频播放器，AVPlayer的封装，继承UIView，想怎么玩就怎么玩。支持播放mp4、m3u8、3gp、mov，网络和本地视频同时支持。全屏和小屏播放同时支持。 cell中播放视频，全屏小屏切换自如。</li>
<li><a href="https://github.com/GrayJIAXU/520Linkee" target="_blank" rel="external">520Linkee</a> 本项目实现了作为一个直播App的基本功能，比如本地视频流采集、播放、美颜、礼物、点赞出心等。</li>
<li><a href="https://github.com/pepsikirk/PKShortVideo" target="_blank" rel="external">PKShortVideo</a> 是一个类似微信小视频功能的框架</li>
<li><a href="https://github.com/Flipboard/FLAnimatedImage" target="_blank" rel="external">FLAnimatedImage</a> 强大的gif动态图引擎</li>
</ul>
<h4 id="UI"><a href="#UI" class="headerlink" title="UI"></a><em>UI</em></h4><ul>
<li><a href="https://github.com/carantes/CircularProgressControl" target="_blank" rel="external">CircularProgressControl</a> 一个会随着时间而填充进度的圆环，自己在多个项目中用到此项目来扩展，写的还可以哦</li>
<li><a href="https://github.com/ChenYilong/CYLTabBarController" target="_blank" rel="external">CYLTabBarController</a> 最低只需传两个数组即可完成主流App框架搭建，低耦合集成TabBarController</li>
<li><a href="https://github.com/clusterinc/ClusterPrePermissions" target="_blank" rel="external">ClusterPrePermissions</a> oc的权限请求框架，这个用在自己的项目上来请求相应的权限还不错</li>
<li><a href="https://github.com/nicklockwood/FXBlurView" target="_blank" rel="external">FXBlurView</a> 模糊UIView的超级控件</li>
<li><a href="https://github.com/fpt-software/Material-Controls-For-iOS" target="_blank" rel="external">Material-Controls-For-iOS</a> IOS的 material 控件扩展类，很多很不错，有机会试试</li>
<li><a href="https://github.com/MortimerGoro/MGSwipeTableCell" target="_blank" rel="external">MGSwipeTableCell</a> 一个支持侧滑出按钮的tableCell，非常不错，支持swift。 An easy to use UITableViewCell subclass that allows to display swippable buttons with a variety of transitions.</li>
<li><a href="https://github.com/max2oi/MXPullDownMenu" target="_blank" rel="external">MXPullDownMenu</a> 公司现在用的下拉菜单控件，简单，可以自己任意改造，但是功能太简单，经常无法满足需求，得自己改，但是很好改</li>
<li><a href="https://github.com/iltercengiz/ICViewPager" target="_blank" rel="external">ICViewPager</a> 公司现在用的页面切换控件，一直在用，比较容易改造，能满足日常使用，功能比较简单</li>
<li><a href="https://github.com/xmartlabs/XLPagerTabStrip" target="_blank" rel="external">XLPagerTabStrip</a> 页面切换控件，功能好多，先收藏，说不定日后有用</li>
<li><a href="https://github.com/mutualmobile/MMDrawerController" target="_blank" rel="external">MMDrawerController</a> 侧面菜单控制器（可左右都有）</li>
<li><a href="https://github.com/yate1996/Y_KLine" target="_blank" rel="external">Y_KLine</a> iOS-K线</li>
<li><a href="https://github.com/romaonthego/RESideMenu" target="_blank" rel="external">RESideMenu</a> QQ侧滑菜单。 iOS 7/8 style side menu with parallax effect.</li>
<li><a href="https://github.com/slackhq/SlackTextViewController" target="_blank" rel="external">SlackTextViewController</a> 聊天输入框，很不错</li>
<li><a href="https://github.com/lcddhr/QRWeiXinDemo" target="_blank" rel="external">QRWeiXinDemo</a> 仿微信二维码扫描，中间透明区域</li>
<li><a href="https://github.com/antiguab/BATabBarController" target="_blank" rel="external">BATabBarController</a> 挺炫的效果，TabBarController的tabBarItem点击效果，说不定以后一些特殊项目用的着</li>
<li><a href="https://github.com/jverdi/JVFloatLabeledTextField" target="_blank" rel="external">JVFloatLabeledTextField</a> 5500+star 浮动的UITextField，当你点击输入框后，提示将浮动起来，实用！！！ UITextField subclass with floating labels</li>
<li><a href="https://github.com/kevinzhow/PNChart" target="_blank" rel="external">PNChart</a> 简单漂亮的图表展示库，简洁漂亮易用 A simple and beautiful chart lib used in Piner and CoinsMan for iOS</li>
<li><a href="https://github.com/layerhq/Atlas-iOS" target="_blank" rel="external">Atlas-iOS</a> 聊天和消息组件，可以拿来研究下 Chat and Messaging UI components for iOS, built to work with Layer <a href="https://layer.com/" target="_blank" rel="external">https://layer.com</a></li>
<li><a href="https://github.com/ZhipingYang/UUChatTableView" target="_blank" rel="external">UUChatTableView</a> 类似qq的聊天界面，支持文字、语音、头像、图片等等</li>
<li><a href="https://github.com/gskbyte/GSKStretchyHeaderView" target="_blank" rel="external">GSKStretchyHeaderView</a> 一个可拉伸的头部，适用于UITableView以及UICollectionView （A generic stretchy header for UITableView and UICollectionView）</li>
<li><a href="https://github.com/nicklockwood/iCarousel" target="_blank" rel="external">iCarousel</a> 一个轮播效果的鼻祖，很多项目都是从这里改的</li>
<li><a href="https://github.com/nicklockwood/CountryPicker" target="_blank" rel="external">CountryPicker</a> 一款国家选择器</li>
<li><a href="https://github.com/tianzhuo112/VTMagic" target="_blank" rel="external">VTMagic</a> 一个viewpage功能，可以参考学习，可用作新闻客户端订阅类的app</li>
<li><a href="https://github.com/DeveloperLx/LxGridView" target="_blank" rel="external">LxGridView</a> 一个仿照ios桌面长按抖动删除效果的UICollectionView Imitation iOS system desktop icon arrangement and interaction by UICollectionView!</li>
<li><a href="https://github.com/Yalantis/FoldingTabBar.iOS" target="_blank" rel="external">FoldingTabBar.iOS</a> 效果非常棒的tabbar，支持swift、oc，漂亮！！！</li>
<li><a href="https://github.com/zipme/RQShineLabel" target="_blank" rel="external">RQShineLabel</a> 字体逐渐出现和逐渐消失效果的label，非常不错，值得研究和学习，不错，不错，不错！！！</li>
<li><a href="https://github.com/Raizlabs/BonMot" target="_blank" rel="external">BonMot</a> 漂亮简单的使用 attributed strings</li>
<li><a href="https://github.com/atljeremy/JFMinimalNotifications" target="_blank" rel="external">JFMinimalNotifications</a>漂亮的顶部底部通知视图</li>
<li><a href="https://github.com/m1entus/MZFormSheetPresentationController" target="_blank" rel="external">MZFormSheetPresentationController</a> 中间弹出框其实可以做很多事情，这个项目可以得到灵感！！</li>
</ul>
<h4 id="HUD-弹出层"><a href="#HUD-弹出层" class="headerlink" title="HUD/弹出层"></a><em>HUD/弹出层</em></h4><ul>
<li><a href="https://github.com/gontovnik/DGActivityIndicatorView" target="_blank" rel="external">DGActivityIndicatorView</a> 非常漂亮的loading动画集合</li>
<li><a href="https://github.com/NghiaTranUIT/FeSpinner" target="_blank" rel="external">FeSpinner</a> 又一个非常漂亮的loading动画集合</li>
<li><a href="https://github.com/andreamazz/AMPopTip" target="_blank" rel="external">AMPopTip</a> 一款简单的弹出提示控件</li>
<li><a href="https://github.com/SVProgressHUD/SVProgressHUD" target="_blank" rel="external">SVProgressHUD</a> 一款使用起来很简单，很广的HUD框架</li>
<li><a href="https://github.com/jdg/MBProgressHUD" target="_blank" rel="external">MBProgressHUD</a> 一款非常出名，关注度很高的HUD框架</li>
</ul>
<h4 id="框架"><a href="#框架" class="headerlink" title="框架"></a><em>框架</em></h4><ul>
<li><a href="https://github.com/AFNetworking/AFNetworking" target="_blank" rel="external">AFNetworking</a> oc最屌最多人用的网络框架</li>
<li><a href="https://github.com/SnapKit/Masonry" target="_blank" rel="external">Masonry</a> oc最出名的代码写自动布局框架</li>
<li><a href="https://github.com/forkingdog/UITableView-FDTemplateLayoutCell" target="_blank" rel="external">UITableView-FDTemplateLayoutCell</a> forkingdog出品的oc自动算/缓存UITableViewCell行高框架</li>
<li><a href="https://github.com/forkingdog/FDStackView" target="_blank" rel="external">FDStackView</a>forkingdog出品的让IOS6以上的项目可以使用 UIStackView，只需要将框架放入项目即可</li>
<li><a href="https://github.com/forkingdog/FDFullscreenPopGesture" target="_blank" rel="external">FDFullscreenPopGesture</a> forkingdog出品的 全屏侧滑返回 A UINavigationController’s category to enable fullscreen pop gesture with iOS7+ system style.</li>
<li><a href="https://github.com/bang590/JSPatch" target="_blank" rel="external">JSPatch</a> 热修复，bang大大的杰作，JSPatch bridge Objective-C and Javascript using the Objective-C runtime. You can call any Objective-C class and method in JavaScript by just including a small engine. JSPatch is generally use for hotfix iOS App.</li>
<li><a href="https://github.com/ccgus/fmdb" target="_blank" rel="external">fmdb</a> 数据库操作框架，如果觉得realm太重了，可以考虑这个，也有1W+的star了</li>
<li><a href="https://github.com/Haley-Wong/JKDBModel" target="_blank" rel="external">JKDBModel</a> FMDB的封装，极大简化你的数据库操作，对于自己的扩展也非常简单</li>
<li><a href="https://github.com/zwaldowski/BlocksKit" target="_blank" rel="external">BlocksKit</a> 让你更好的使用block，绝对好用，让delegate的臃肿远离懒得写代码的你，推荐！！！！！！！！</li>
<li><a href="https://github.com/gsdios/SDAutoLayout" target="_blank" rel="external">SDAutoLayout</a> GSD出品的一款自动布局框架，可算自动算行高，我没用过，纯收藏，因为看上去还不错，说不定有机会会用的</li>
<li><a href="https://github.com/marcuswestin/WebViewJavascriptBridge" target="_blank" rel="external">WebViewJavascriptBridge</a> OC和JavaScript之间交互必不可少的东西</li>
<li><a href="https://github.com/ibireme/YYKit" target="_blank" rel="external">YYKit</a> YY大神出品的一系列框架，真TM牛B</li>
<li><a href="https://github.com/magicalpanda/MagicalRecord" target="_blank" rel="external">MagicalRecord</a> 原来oc上操作sqllite数据库可以这么简单，屌！！！！！</li>
<li><a href="https://github.com/shaojiankui/iOS-Categories" target="_blank" rel="external">iOS-Categories</a> oc的扩展类库，很多，很多，很好用，很好用！</li>
<li><a href="https://github.com/nnhubbard/ZSSRichTextEditor" target="_blank" rel="external">ZSSRichTextEditor</a> 富文本控件，在项目中用过，还不错</li>
<li><a href="https://github.com/rs/SDWebImage" target="_blank" rel="external">SDWebImage</a> 一行代码搞定图片异步加载，屌炸天!</li>
<li><a href="https://github.com/CoderMJLee/MJRefresh" target="_blank" rel="external">MJRefresh</a> MJ出品上下拉刷新控件</li>
<li><a href="https://github.com/CoderMJLee/MJExtension" target="_blank" rel="external">MJExtension</a> MJ出品json操作控件</li>
<li><a href="https://github.com/TheAmazingAudioEngine/TheAmazingAudioEngine" target="_blank" rel="external">TheAmazingAudioEngine</a> 一个ios声效框架 Core Audio, Cordially: A sophisticated framework for iOS audio applications, built so you don’t have to.</li>
<li><a href="https://github.com/youngsoft/MyLinearLayout" target="_blank" rel="external">MyLinearLayout</a> 国人写的，将安卓上的那些布局类型封装成了ios版的，好像不错，值得关注，说不定哪天可以发展起来，现在有 850+ star 了！</li>
<li><a href="https://github.com/MatthewYork/DateTools" target="_blank" rel="external">DateTools</a> 让我们更愉快的与日期打交道，吐槽下，oc的日期操作是在太麻烦了</li>
<li><a href="https://github.com/lingochamp/Diplomat" target="_blank" rel="external">Diplomat</a> 整合第三方 SDK 微信、微博、 QQ 等为统一的 Diplomat 接口。</li>
<li><a href="https://github.com/coolnameismy/BabyBluetooth" target="_blank" rel="external">BabyBluetooth</a> 一个非常容易使用的蓝牙库,适用于ios和os The easiest way to use Bluetooth (BLE )in ios/os ,even bady can use .</li>
<li><a href="https://github.com/rsanchezsaez/CardboardSDK-iOS" target="_blank" rel="external">CardboardSDK-iOS</a> 开发iOSvr应用的的CardboardSDK iOS port of Google’s CardboardSDK (mobile VR toolkit)</li>
<li><a href="https://github.com/TransitApp/SVWebViewController" target="_blank" rel="external">SVWebViewController</a> 一个非常便捷实用的浏览器控制器，可以看下别人怎么写的 A drop-in inline browser for your iOS app.</li>
<li><a href="https://github.com/steipete/Aspects" target="_blank" rel="external">Aspects</a> 一款面向切面编程的解决方案框架</li>
<li><a href="https://github.com/chenliming777/LMLiveStreaming" target="_blank" rel="external">LMLiveStreaming</a> 又一套视频直播相关的解决方案，可以参考下</li>
<li><a href="https://github.com/cocbin/CBTableViewDataSource" target="_blank" rel="external">CBTableViewDataSource</a> 一个仿照masonry语法写的tableview代理框架，思路不错，值得学习 Just one line to create DataSource and Delegate for UITableView</li>
<li><a href="https://github.com/100apps/openshare" target="_blank" rel="external">openshare</a> 不用官方SDK，利用社交软件移动客户端(微信/QQ/微博/人人/支付宝)分享/登录/支付 （这个必须给star）</li>
<li><a href="https://github.com/facebook/FBMemoryProfiler" target="_blank" rel="external">FBMemoryProfiler</a> FB出品的内存使用情况监控窗口</li>
<li><a href="https://github.com/facebook/AsyncDisplayKit" target="_blank" rel="external">AsyncDisplayKit</a> FB出品的这个库能让你通过将图像解码、布局以及渲染操作放在后台线程，从而带来超级响应的用户界面，也就是说不再会因界面卡顿而阻断用户交互</li>
<li><a href="https://github.com/BoltsFramework/Bolts-ObjC" target="_blank" rel="external">Bolts-ObjC</a> 面向iOS底层库的编程方案,支持OC和Swift (Bolts is a collection of low-level libraries designed to make developing mobile apps easier)</li>
<li><a href="https://github.com/cocbin/CBTableViewDataSource" target="_blank" rel="external">CBTableViewDataSource</a> 用一行代码给tableview创建数据源和代理</li>
<li><a href="https://github.com/kimziv/PinYin4Objc" target="_blank" rel="external">PinYin4Objc</a> 高效的中文转拼音库</li>
<li><a href="https://github.com/johnil/VVeboTableViewDemo" target="_blank" rel="external">VVeboTableViewDemo</a> 希望你能通过这个demo看到如何进行TableView流畅度优化的</li>
<li><a href="https://github.com/nicklockwood/FXForms" target="_blank" rel="external">FXForms</a>一个tableview表单提交框架 2800+ star</li>
<li><a href="https://github.com/xmartlabs/XLForm" target="_blank" rel="external">XLForm</a>又一个tableview表单提交框架 4000 star</li>
</ul>
<h4 id="开源项目"><a href="#开源项目" class="headerlink" title="开源项目"></a><em>开源项目</em></h4><ul>
<li><a href="https://github.com/xhzengAIB/MessageDisplayKit" target="_blank" rel="external">MessageDisplayKit</a> 高仿微信（好多功能哦，可以参考下有些功能怎么写的 3000多star了）</li>
<li><a href="https://github.com/gsdios/GSD_WeiXin" target="_blank" rel="external">GSD_WeiXin</a> 高仿微信</li>
<li><a href="https://github.com/ChatSecure/ChatSecure-iOS" target="_blank" rel="external">ChatSecure-iO</a> 一个聊天项目，不错，不错，值得学习 ChatSecure is a free and open source encrypted chat client for iPhone and Android that supports OTR encryption over XMPP. <a href="https://chatsecure.org/" target="_blank" rel="external">https://chatsecure.org</a></li>
<li><a href="https://github.com/dsxNiubility/SXNews" target="_blank" rel="external">SXNews</a> 模仿网易新闻做的新闻软件，做的真不错！！</li>
<li><a href="https://github.com/GGGHub/Reader" target="_blank" rel="external">Reader</a> 之前没接触过这块，可以了解下 iOS基于CoreText实现的电子书阅读器，支持txt，epub格式</li>
<li><a href="https://github.com/wujunyang/MobileProject" target="_blank" rel="external">MobileProject</a> 一个基于MVC的项目框架，并集成一些常用的功能(不断更新中)</li>
<li><a href="https://github.com/artsy/eigen" target="_blank" rel="external">eigen</a> 一款艺术效果的app，漂亮，值得借鉴学习</li>
<li><a href="https://github.com/shadowsocks/Potatso" target="_blank" rel="external">Potatso</a> 旨在打造 iOS 平台最好的广告屏蔽软件</li>
<li><a href="https://github.com/taweili/hijack" target="_blank" rel="external">hijack</a> 音频接口通信开发值得参考的项目，很老了！！！！</li>
</ul>
<hr>
<h3 id="Swift"><a href="#Swift" class="headerlink" title="Swift"></a>Swift</h3><h4 id="动画-1"><a href="#动画-1" class="headerlink" title="动画"></a><em>动画</em></h4><ul>
<li><a href="https://github.com/MengTo/Spring" target="_blank" rel="external">Spring动画框架</a> Spring动画框架 A library to simplify iOS animations in Swift</li>
<li><a href="https://github.com/Draveness/DKChainableAnimationKit" target="_blank" rel="external">DKChainableAnimationKit(链式动画框架)</a> 可以支持链式代码写出动画</li>
<li><a href="https://github.com/icanzilb/EasyAnimation" target="_blank" rel="external">EasyAnimation</a> 又一款很不错的动画框架，让你更方便的使用动画 A Swift library to take the power of UIView.animateWithDuration(_:, animations:…) to a whole new level – layers, springs, chain-able animations and mixing view and layer animations together!</li>
<li><a href="https://github.com/larrynatalicio/15DaysofAnimationsinSwift" target="_blank" rel="external">15DaysofAnimationsinSwift</a> 一个用swift学习动画的项目 A project to learn animations.</li>
<li><a href="https://github.com/BalestraPatrick/ParticlesLoadingView" target="_blank" rel="external">ParticlesLoadingView</a> 一个为粒子动画加上边界的框架 A customizable SpriteKit particles animation on the border of a view.</li>
<li><a href="https://github.com/marmelroy/Interpolate" target="_blank" rel="external">Interpolate</a> 为手势操作添加动画效果，让应用拥有更好的交互</li>
<li><a href="https://github.com/AugustRush/Stellar" target="_blank" rel="external">Stellar</a> 一个比较出色的物理动画库</li>
<li><a href="https://github.com/JakeLin/IBAnimatable" target="_blank" rel="external">IBAnimatable</a> 是一个帮助我们在 Interface Builder 和 Swift Playground 里面设计 UI, 交互, 导航模式, 换场和动画的开源库</li>
<li><a href="https://github.com/AntonTheDev/FlightAnimator" target="_blank" rel="external">FlightAnimator</a> 又一款让动画写起来更方便的框架</li>
<li><a href="https://github.com/Fnoz/FNPaperShredder" target="_blank" rel="external">FNPaperShredder</a> 一款不错的碎纸机效果，有空的时候可以参看学习下怎么实现的</li>
<li><a href="https://github.com/mcmatan/ImageOpenTransition" target="_blank" rel="external">ImageOpenTransition</a> 让图片在ViewControllers之间切换更加优雅自然 Beautiful and precise transitions between ViewControllers images written in Swift.</li>
</ul>
<h4 id="UI-1"><a href="#UI-1" class="headerlink" title="UI"></a><em>UI</em></h4><ul>
<li><a href="https://github.com/CosmicMind/Material" target="_blank" rel="external">Material</a> Material Design风格的空间集合。 An animation and graphics framework for Material Design in Swift. <a href="http://materialswift.io/" target="_blank" rel="external">http://materialswift.io</a></li>
<li><a href="https://github.com/nickoneill/PermissionScope" target="_blank" rel="external">PermissionScope</a> swift请求权限工具</li>
<li><a href="https://github.com/HighBay/PageMenu" target="_blank" rel="external">PageMenu</a> tab切换，viewPager控件，OC版本也有，不错哦</li>
<li><a href="https://github.com/jiecao-fm/SwiftTheme" target="_blank" rel="external">SwiftTheme</a> iOS 7+ 主题/换肤, 夜间模式（实现思路不错，可以参考学习一下）</li>
<li><a href="https://github.com/sima-11/SMSegmentView" target="_blank" rel="external">SMSegmentView</a> 一个可很容易实现的订制化的segmentedControl，很漂亮，可以加图片等等。 Custom segmentedControl for iOS written in Swift. Supports vertical layout. Support both image and text. Highly customisable.</li>
<li><a href="https://github.com/MakeBetterMe/YPDropMenuViewDemo" target="_blank" rel="external">YPDropMenuViewDemo</a> swift实现的一款DropMenu,menuView,类似之前美团的下拉菜单，支持swift2.2，因为用到iOS8.的毛玻璃。所以想支持到iOS8.0,支持自定义，支持等宽排列，支持从左向右排列</li>
<li><a href="https://github.com/MxABC/swiftScan" target="_blank" rel="external">swiftScan</a> A barcode and qr code scanner( 二维码 各种码识别，生成，界面效果)</li>
<li><a href="https://github.com/FlexMonkey/Blurable" target="_blank" rel="external">Blurable</a> 对任意UIView实现高斯模糊 Apply a Gaussian Blur to any UIView with Swift Protocol Extensions</li>
<li><a href="https://github.com/startry/SwViewCapture" target="_blank" rel="external">SwViewCapture</a> 一个用起来还不错的iOS截图库.(支持截取所有内容, 适用于所有ScrollView组成的视图, 包括WKWebView)</li>
<li><a href="https://github.com/andreamazz/AMScrollingNavbar" target="_blank" rel="external">AMScrollingNavbar</a> 非常漂亮简洁的滚动隐藏navBar，oc和swift都可以用</li>
<li><a href="https://github.com/PhamBaTho/BTNavigationDropdownMenu" target="_blank" rel="external">BTNavigationDropdownMenu</a> 导航栏下拉菜单选择控件，很不错，值得学习</li>
<li><a href="https://github.com/Ramotion/expanding-collection" target="_blank" rel="external">expanding-collection</a> 可展开的卡片式的控制器视图，效果真做的好</li>
<li><a href="https://github.com/Ramotion/folding-cell" target="_blank" rel="external">folding-cell</a> 效果非常惊艳的翻牌UITableViewCell</li>
<li><a href="https://github.com/philackm/Scrollable-GraphView" target="_blank" rel="external">Scrollable-GraphView</a> 滚动带动画效果的表格视图效果很不错 An adaptive scrollable graph view for iOS to visualise simple discrete datasets. Written in Swift.</li>
<li><a href="https://github.com/Fnoz/FNBlingBlingLabel" target="_blank" rel="external">FNBlingBlingLabel</a> Swift实现的UILabel文字随机渐隐渐现, Swift版RQShineLabel.</li>
<li><a href="https://github.com/AssistoLab/DropDown" target="_blank" rel="external">DropDown</a> 一个Material Design风格的下拉菜单功能 A Material Design drop down for iOS</li>
<li><a href="https://github.com/Guzlan/BackgroundVideoiOS" target="_blank" rel="external">BackgroundVideoiOS</a> 底部在跑个视频，适合做引导页的背景视频，oc和swift都可以参考！！</li>
<li><a href="https://github.com/dzenbot/Iconic" target="_blank" rel="external">Iconic</a> iOS上使用字体图标，好爽哦！！！</li>
<li><a href="https://github.com/gmarm/BetterSegmentedControl" target="_blank" rel="external">BetterSegmentedControl</a> 简单易用，并且可定制化UISegmentedControl &amp; UISwitch的功能 An easy to use, customizable replacement for UISegmentedControl &amp; UISwitch.</li>
<li><a href="https://github.com/dogo/SCLAlertView" target="_blank" rel="external">SCLAlertView</a> 一款漂亮的alert弹窗</li>
<li><a href="https://github.com/patchthecode/JTAppleCalendar" target="_blank" rel="external">JTAppleCalendar</a> 一款不错的日历库</li>
<li><a href="https://github.com/xmartlabs/Eureka" target="_blank" rel="external">Eureka</a> 优雅的创建form表单 快4000star了</li>
<li><a href="https://github.com/EndouMari/TabPageViewController" target="_blank" rel="external">TabPageViewController</a> 滑动的TabPageViewController。 Paging view controller and scroll tab view</li>
<li><a href="https://github.com/zhxnlai/ZLSwipeableViewSwift" target="_blank" rel="external">ZLSwipeableViewSwift</a> 翻拍效果，做的真好！！！！！！！！</li>
<li><a href="https://github.com/joedaniels29/10Clock" target="_blank" rel="external">10Clock</a> iOS10 就寝UI效果</li>
<li><a href="https://github.com/shu223/iOS-10-Sampler" target="_blank" rel="external">iOS-10-Sampler</a> iOS10 新api的demo</li>
<li><a href="https://github.com/andresinaka/SnapTimer" target="_blank" rel="external">SnapTimer</a> 一个环形和饼图效果的demo</li>
<li><a href="https://github.com/mariohahn/StatusProvider" target="_blank" rel="external">StatusProvider</a> 一个状态界面的实现方式，自己项目实现默认界面时可参考此实现方式</li>
</ul>
<h4 id="视频-图像-1"><a href="#视频-图像-1" class="headerlink" title="视频/图像"></a><em>视频/图像</em></h4><ul>
<li><a href="https://github.com/BradLarson/GPUImage2" target="_blank" rel="external">GPUImage2</a> GPUImage2图形处理框架，名气非常大</li>
<li><a href="https://github.com/onevcat/Kingfisher" target="_blank" rel="external">Kingfisher</a> 喵神王巍写的图片请求框架 swift版的SDWebImage 非常好用</li>
<li><a href="https://github.com/ytakzk/Fusuma" target="_blank" rel="external">Fusuma</a> 简单几行代码可以实现图片浏览和照相功能 Instagram-like photo browser and a camera feature with a few line of code in Swift.</li>
<li><a href="https://github.com/AlexLittlejohn/ALCameraViewController" target="_blank" rel="external">ALCameraViewController</a> 实现拍照，选择照片，以及按比例裁图功能 A camera view controller with custom image picker and image cropping. Written in Swift.</li>
<li><a href="https://github.com/CharlinFeng/PhotoBrowser" target="_blank" rel="external">PhotoBrowser</a> 快速集成高性能照片浏览器，支持本地及网络相册</li>
<li><a href="https://github.com/hyperoslo/ImagePicker" target="_blank" rel="external">ImagePicker</a> 又一款拍照图片选择器，效果正不错，Reinventing the way ImagePicker works. <a href="http://hyper.no/" target="_blank" rel="external">http://hyper.no</a></li>
<li><a href="https://github.com/kirualex/SwiftyGif" target="_blank" rel="external">SwiftyGif</a> 高性能gif图片查看引擎 High performance GIF engine</li>
<li><a href="https://github.com/jathu/UIImageColors" target="_blank" rel="external">UIImageColors</a> 根据图片获取三级标题颜色，非常不错 iTunes style color fetcher for UIImage.</li>
<li><a href="https://github.com/BrikerMan/BMPlayer" target="_blank" rel="external">BMPlayer</a> video player based on AVPlayer, support the horizontal, vertical screen. support adjust volume, brigtness and seek by slide. Swift 2. 基于AVPlayer，支持横屏、竖屏，上下滑动调节音量、屏幕亮度，左右滑动调节播放进度</li>
<li><a href="https://github.com/ltebean/Live" target="_blank" rel="external">Live</a> 教你如何构建直播，服务端和app端都有</li>
<li><a href="https://github.com/gkye/ComplimentaryGradientView" target="_blank" rel="external">ComplimentaryGradientView</a> 根据给出的图片生成一张颜色背景图片</li>
</ul>
<h4 id="HUD-弹出层-1"><a href="#HUD-弹出层-1" class="headerlink" title="HUD/弹出层"></a><em>HUD/弹出层</em></h4><ul>
<li><a href="https://github.com/ninjaprox/NVActivityIndicatorView" target="_blank" rel="external">NVActivityIndicatorView</a> 非常漂亮的loading动画集合</li>
<li><a href="https://github.com/pkluz/PKHUD" target="_blank" rel="external">PKHUD</a> 非常简约的hud框架，很不错</li>
</ul>
<h4 id="Swift框架"><a href="#Swift框架" class="headerlink" title="Swift框架"></a><em>Swift框架</em></h4><ul>
<li><a href="https://github.com/Alamofire/Alamofire" target="_blank" rel="external">Alamofire</a> 网络框架，swift版的AFNetwork</li>
<li><a href="https://github.com/SwiftyJSON/SwiftyJSON" target="_blank" rel="external">SwiftyJSON</a> swift上使用和关注度最高的json操作库</li>
<li><a href="https://github.com/delba/JASON" target="_blank" rel="external">JASON</a> json快速转换 。Fast JSON parsing for Swift</li>
<li><a href="https://github.com/SnapKit/SnapKit" target="_blank" rel="external">SnapKit</a> swift上代码写自动布局 swift版的Masonry</li>
<li><a href="https://github.com/FabrizioBrancati/BFKit-Swift" target="_blank" rel="external">BFKit-Swift</a> swift上的扩展类，可以做很多事情哦</li>
<li><a href="https://github.com/goktugyil/EZSwiftExtensions" target="_blank" rel="external">EZSwiftExtensions</a> swift上的扩展类。How Swift standard types and classes were supposed to work.</li>
<li><a href="https://github.com/malcommac/SwiftDate" target="_blank" rel="external">SwiftDate</a> 更方便的去操控日期 Powerful NSDate &amp; Time Zones Management, made in Swift 2</li>
<li><a href="https://github.com/delba/TextAttributes" target="_blank" rel="external">TextAttributes</a> 简单便捷的方式去使用attributed strings。An easier way to compose attributed strings</li>
<li><a href="https://github.com/danielgindi/Charts" target="_blank" rel="external">Charts</a> 图表框架，漂亮，也有安卓版 Beautiful charts for iOS/tvOS/OSX! The Apple side of the crossplatform MPAndroidChart.</li>
<li><a href="https://github.com/TTTAttributedLabel/TTTAttributedLabel" target="_blank" rel="external">TTTAttributedLabel</a> 一个吊炸天的label，有空要好好试试</li>
<li><a href="https://github.com/garnele007/SwiftOCR" target="_blank" rel="external">SwiftOCR</a> 字符串识别框架，识别验证码等等！！！！</li>
<li><a href="https://github.com/radex/SwiftyTimer" target="_blank" rel="external">SwiftyTimer</a> 让你更好的操作定时器！！！！ Swifty API for NSTimer <a href="http://radex.io/swift/nstimer" target="_blank" rel="external">http://radex.io/swift/nstimer</a></li>
<li><a href="https://github.com/mac-cain13/R.swift" target="_blank" rel="external">R.swift</a> R.swift:以一种优雅安全的方式使用资源文件。Get strong typed, autocompleted resources like images, fonts and segues in Swift projects</li>
<li><a href="https://github.com/delba/Permission" target="_blank" rel="external">Permission</a> 权限请求库</li>
<li><a href="https://github.com/nixzhu/Proposer" target="_blank" rel="external">Proposer</a> 权限请求库</li>
<li><a href="https://github.com/pascalbros/PAPermissions" target="_blank" rel="external">PAPermissions</a>权限请求库,跳转到对应的设置选项中</li>
<li><a href="https://github.com/krzyzanowskim/CryptoSwift" target="_blank" rel="external">CryptoSwift</a> swift加密库, 支持md5,sha1,sha224,sha256…</li>
<li><a href="https://github.com/Ekhoo/Translucid" target="_blank" rel="external">Translucid</a> 让图片作为文字的背景 （Lightweight library to set an Image as text background. Written in swift.）</li>
<li><a href="https://github.com/BoltsFramework/Bolts-Swift" target="_blank" rel="external">Bolts-Swift</a> 面向iOS底层库的编程方案,支持OC和Swift (Bolts is a collection of low-level libraries designed to make developing mobile apps easier)</li>
<li><a href="https://github.com/ReSwift/ReSwift" target="_blank" rel="external">ReSwift</a> 单向数据流写法库 （Unidirectional Data Flow in Swift – Inspired by Redux <a href="http://reswift.github.io/ReSwift/%EF%BC%89" target="_blank" rel="external">http://reswift.github.io/ReSwift/）</a></li>
<li><a href="https://github.com/AliSoftware/SwiftGen" target="_blank" rel="external">SwiftGen</a> Swift一些常用工具类 A collection of Swift tools to generate Swift code (enums for your assets, storyboards, Localizable.strings, …)</li>
<li><a href="https://github.com/100mango/SwiftTimer" target="_blank" rel="external">SwiftTimer</a> 以更简单的方式使用 Timer</li>
</ul>
<h4 id="开源项目-1"><a href="#开源项目-1" class="headerlink" title="开源项目"></a><em>开源项目</em></h4><ul>
<li><a href="https://github.com/apple/swift" target="_blank" rel="external">swift</a> swift</li>
<li><a href="https://github.com/allenwong/30DaysofSwift" target="_blank" rel="external">30DaysofSwift</a> 30 天 30 个 swift DEMO</li>
</ul>
<h4 id="Swift资源合集"><a href="#Swift资源合集" class="headerlink" title="Swift资源合集"></a><em>Swift资源合集</em></h4><ul>
<li><a href="https://github.com/ipader/SwiftGuide" target="_blank" rel="external">SwiftGuide</a> 这份指南汇集了Swift语言主流学习资源，并以开发者的视角整理编排。<a href="http://dev.swiftguide.cn/" target="_blank" rel="external">http://dev.swiftguide.cn</a></li>
<li><a href="https://github.com/hsavit1/Awesome-Swift-Education" target="_blank" rel="external">Awesome-Swift-Education</a> swift的教程合集，英文的哦</li>
<li><a href="https://github.com/matteocrippa/awesome-swift" target="_blank" rel="external">awesome-swift</a> swift不错的集合</li>
<li><a href="https://github.com/raywenderlich/swift-algorithm-club" target="_blank" rel="external">swift-algorithm-club</a> swift算法俱乐部，算法，算法</li>
<li><a href="https://github.com/ochococo/Design-Patterns-In-Swift" target="_blank" rel="external">Design-Patterns-In-Swift</a> swift版的设计模式</li>
<li><a href="https://github.com/jakarmy/swift-summary" target="_blank" rel="external">swift-summary</a> 一个swift语法的摘要集合，很不错。 A summary of Apple’s Swift language written on Playgrounds</li>
<li><a href="https://github.com/SwiftyBeaver/SwiftyBeaver" target="_blank" rel="external">SwiftyBeaver</a> 让你的日志输出充满色彩</li>
<li><a href="https://github.com/yagamis/swift2basic" target="_blank" rel="external">swift2basic</a> 3天学会Swift （3.0预览版）</li>
<li><a href="https://github.com/realm/SwiftLint" target="_blank" rel="external">SwiftLint</a> 让swift语法检查提示更加详细</li>
<li><a href="https://github.com/PerfectlySoft/Perfect" target="_blank" rel="external">Perfect</a> swift写的server端框架，快8000star了</li>
<li><a href="https://github.com/qutheory/vapor" target="_blank" rel="external">vapor</a> swift写的server端框架，快5000star了</li>
<li><a href="https://github.com/IBM-Swift/Kitura" target="_blank" rel="external">Kitura</a> IBM推出的swift写的server端框架</li>
<li><a href="https://github.com/socketio/socket.io-client-swift" target="_blank" rel="external">socket.io-client-swift</a> swift socket开发框架，虽然比较少接触，但是还是可以收藏的</li>
<li><a href="https://github.com/ReactiveX/RxSwift" target="_blank" rel="external">RxSwift</a> swift的函数式编程库</li>
</ul>
<hr>
<h3 id="IOS综合"><a href="#IOS综合" class="headerlink" title="IOS综合"></a>IOS综合</h3><ul>
<li><a href="https://github.com/Carthage/Carthage" target="_blank" rel="external">Carthage</a> Carthage的目标是用最简单的方式来管理Cocoa第三方框架， CocoaPods的劲敌，Carthage 是由 Swift 语言写的，只支持动态框架，只支持 iOS8+！！！ 值得研究！！！！！！值得研究！！！！！！值得研究！！！！！！</li>
<li><a href="https://github.com/ReactiveCocoa/ReactiveCocoa" target="_blank" rel="external">ReactiveCocoa</a> 函数式/响应式编程框架</li>
<li><a href="https://github.com/leichunfeng/MVVMReactiveCocoa" target="_blank" rel="external">MVVMReactiveCocoa</a> MVVM与ReactiveCocoa结合的架构</li>
<li><a href="https://github.com/mxcl/PromiseKit" target="_blank" rel="external">PromiseKit</a> PromiseKit 不仅仅是Promises的实现，它还是收集了一系列的有用的函数并且让他们异步化，让我们能愉快的进行IOS开发</li>
<li><a href="https://github.com/cjwirth/awesome-ios-ui" target="_blank" rel="external">awesome-ios-ui</a> 一些ios不错的UI，有oc，有swift</li>
<li><a href="https://github.com/vsouza/awesome-ios" target="_blank" rel="external">awesome-ios</a> ios不错的资源合集</li>
<li><a href="https://github.com/Draveness/iOS-Source-Code-Analyze" target="_blank" rel="external">iOS-Source-Code-Analyze</a> 关于 iOS 开源项目源代码解析的文章 <a href="http://draveness.me/" target="_blank" rel="external">http://draveness.me</a></li>
<li><a href="https://github.com/jobbole/awesome-ios-cn" target="_blank" rel="external">awesome-ios-cn</a> iOS 资源大全中文版，内容包括：框架、组件、测试、Apple Store、SDK、XCode、网站、书籍等</li>
<li><a href="https://github.com/sxyx2008/awesome-ios-animation" target="_blank" rel="external">awesome-ios-animation</a> iOS平台下比较主流炫酷的几款动画框架</li>
<li><a href="https://github.com/Jiar/awesome-dev-blog-article" target="_blank" rel="external">awesome-dev-blog-article</a> 学习与开发过程中，发现的比较好的一些博客和文章之类的内容，收集着，利人利己，持续更新</li>
<li><a href="https://github.com/sxyx2008/awesome-ios-chart" target="_blank" rel="external">awesome-ios-chart</a> ios图表框架大搜罗</li>
<li><a href="https://github.com/dkhamsing/open-source-ios-apps" target="_blank" rel="external">open-source-ios-apps</a> 开源项目大收藏</li>
<li><a href="https://github.com/tangqiaoboy/iOSBlogCN" target="_blank" rel="external">iOSBlogCN</a> 巧神收集和推荐的Blog</li>
<li><a href="https://github.com/Aufree/trip-to-iOS" target="_blank" rel="external">trip-to-iOS</a> 这份学习资料是为 iOS 初学者所准备的, 旨在帮助 iOS 初学者们快速找到适合自己的学习资料, 节省他们搜索资料的时间, 使他们更好的规划好自己的 iOS 学习路线, 更快的入门, 更准确的定位的目前所处的位置</li>
<li><a href="https://github.com/Tim9Liu9/TimLiu-iOS" target="_blank" rel="external">TimLiu-iOS</a> iOS、mac开源项目及库，持续更新。。。。</li>
<li><a href="https://github.com/ViccAlexander/Chameleon" target="_blank" rel="external">Chameleon</a> 颜色框架，让你的app更好看，别再考虑自己配色了 Flat Color Framework for iOS (Obj-C &amp; Swift)</li>
<li><a href="https://github.com/iamdaiyuan/ios_top_1000" target="_blank" rel="external">ios_top_1000</a> IOS项目集合前1000</li>
<li><a href="https://github.com/hackiftekhar/IQKeyboardManager" target="_blank" rel="external">IQKeyboardManager</a> 这个我就不用介绍了吧，有多少人用过大家心里有数，监听键盘的利器，oc和swift都有</li>
<li><a href="https://github.com/CocoaLumberjack/CocoaLumberjack" target="_blank" rel="external">CocoaLumberjack</a> IOS一款简单强大的日志框架</li>
<li><a href="https://github.com/jessesquires/JSQMessagesViewController" target="_blank" rel="external">JSQMessagesViewController</a> 聊天控制器视图，很好，很强大，值得有空学习学习，点进去看你就知道了 An elegant messages UI library for iOS <a href="http://jessesquires.com/JSQMessagesViewController/" target="_blank" rel="external">http://jessesquires.com/JSQMessagesViewController/</a></li>
<li><a href="https://github.com/mutualmobile/MMWormhole" target="_blank" rel="external">MMWormhole</a> IOS app以及扩展之间的消息通讯 Message passing between iOS apps and extensions</li>
<li><a href="https://github.com/AttackOnDobby/iOS-Core-Animation-Advanced-Techniques" target="_blank" rel="external">iOS-Core-Animation-Advanced-Techniques</a> IOS核心动画框架文档翻译</li>
<li><a href="https://github.com/robbiehanson/CocoaAsyncSocket" target="_blank" rel="external">CocoaAsyncSocket</a> 苹果socket（TCP、UDP）编程库，相当不错，支持oc、swift</li>
<li><a href="https://github.com/everettjf/TomatoRead" target="_blank" rel="external">TomatoRead</a> 番茄阅读 – 专注于精选 iOS / OS X 开发者博客，想法不错，值得收藏，里面也有作者收集的很多学习资料，与本人很多想法很像，值得关注</li>
<li><a href="https://github.com/onmyway133/fantastic-ios-animation" target="_blank" rel="external">fantastic-ios-animation</a> 动画效果的收藏合集，还分了类别，不错哦！</li>
<li><a href="https://github.com/realm/realm-cocoa" target="_blank" rel="external">realm-cocoa</a> iOS数据库操作首选，有OC和swift版，还有java版 <a href="https://realm.io/" target="_blank" rel="external">https://realm.io</a></li>
<li><a href="https://github.com/Quick/Quick" target="_blank" rel="external">Quick</a> OC和swift测试框架 The Swift (and Objective-C) testing framework.</li>
<li><a href="https://github.com/PureLayout/PureLayout" target="_blank" rel="external">PureLayout</a> 同时支持ios和OSX 以及oc和swift的一个自动布局框架 The ultimate API for iOS &amp; OS X Auto Layout — impressively simple, immensely powerful. Objective-C and Swift compatible.</li>
<li><a href="https://github.com/Bilibili/ijkplayer" target="_blank" rel="external">ijkplayer</a> B站提供的ios和安卓都可以用的视频播放框架 Android/iOS video player based on FFmpeg n3.1, with MediaCodec, VideoToolbox support.</li>
<li><a href="https://github.com/zhengmin1989/iOS_ICE_AND_FIRE" target="_blank" rel="external">iOS_ICE_AND_FIRE</a> iOS冰与火之歌</li>
<li><a href="https://github.com/netyouli/WHC_ScanUnreferenceImageTool" target="_blank" rel="external">WHC_ScanUnreferenceImageTool</a> 扫描项目里没有使用的图片工具，删除没有引用的图片以减小打包体积</li>
<li><a href="https://github.com/100mango/zen" target="_blank" rel="external">zen</a> iOS心得 iOS禅</li>
</ul>
<h3 id="xCode相关"><a href="#xCode相关" class="headerlink" title="xCode相关"></a>xCode相关</h3><ul>
<li><a href="https://github.com/alcatraz/Alcatraz" target="_blank" rel="external">Alcatraz</a> xcode插件管理工具，必装</li>
<li><a href="https://github.com/markohlebar/Peckham" target="_blank" rel="external">Peckham</a> xcode自动导入包插件</li>
<li><a href="https://github.com/EnjoySR/ESJsonFormat-Xcode" target="_blank" rel="external">ESJsonFormat-Xcode</a> 支持直接将json直接转换成oc对象的插件，MJ的扩展插件</li>
<li><a href="https://github.com/tomaz/appledoc" target="_blank" rel="external">appledoc</a> 将oc代码写的项目快速生成苹果格式的文档 Objective-c code Apple style documentation set generator. <a href="http://gentlebytes.com/" target="_blank" rel="external">http://gentlebytes.com</a></li>
<li><a href="https://github.com/EnjoySR/ESTranslate-Xcode" target="_blank" rel="external">ESTranslate-Xcode</a> Xcode代码单词快速翻译插件</li>
<li><a href="https://github.com/wangshengjia/VWInstantRun" target="_blank" rel="external">VWInstantRun</a> 可以运行选中的代码，不需要将项目运行起来，这个插件可以快速的帮你调试你写的东西 An Xcode plugin let you build &amp; run your selected lines of code in Xcode without running the whole project, you’ll have the output instantly in your Xcode console.</li>
<li><a href="https://github.com/music4kid/FastStub-Xcode" target="_blank" rel="external">FastStub-Xcode</a> 快速插入头文件，协议，父类可实现的方法的插件 Xcode Plugin helps you find missing methods in your class header, protocols, and super class, also makes fast inserting.</li>
<li><a href="https://github.com/cyanzhong/xTextHandler" target="_blank" rel="external">xTextHandler</a> 一个xcode编辑扩展 提高 Xcode 8 的文本处理的体验，你可以通过简单的几行代码扩展它</li>
<li><a href="https://github.com/zats/AdjustFontSize-Xcode-Plugin" target="_blank" rel="external">AdjustFontSize-Xcode-Plugin</a> 一个xcode可随意放大字体的插件</li>
<li><a href="https://github.com/bang590/JSPatchX" target="_blank" rel="external">JSPatchX</a> JSPatch代码自动提示的插件 A XCode plugin that provides autocompletion for JSPatch</li>
<li><a href="https://github.com/tib/awesome-xcode-extensions" target="_blank" rel="external">awesome-xcode-extensions</a> xCode8 扩展合集</li>
<li><a href="https://github.com/nomad/shenzhen" target="_blank" rel="external">shenzhen</a> iOS APP命令打包参考</li>
</ul>
<hr>
<h2 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h2><h4 id="动画-2"><a href="#动画-2" class="headerlink" title="动画"></a><em>动画</em></h4><h4 id="UI-2"><a href="#UI-2" class="headerlink" title="UI"></a><em>UI</em></h4><ul>
<li><a href="https://github.com/chrisbanes/Android-PullToRefresh" target="_blank" rel="external">Android-PullToRefresh</a> 安卓最经典最多人使用的上下拉加载数据</li>
<li><a href="https://github.com/hongyangAndroid/AndroidAutoLayout" target="_blank" rel="external">AndroidAutoLayout</a> Android屏幕适配方案，直接填写设计图上的像素尺寸即可完成适配，最大限度解决适配问题。 <a href="http://blog.csdn.net/lmj623565791/article/details/49990941" target="_blank" rel="external">http://blog.csdn.net/lmj623565791/article/details/49990941</a></li>
<li><a href="https://github.com/hongyangAndroid/baseAdapter" target="_blank" rel="external">baseAdapter</a> Android 万能的Adapter for ListView,RecyclerView,GridView等，支持多种Item类型的情况。</li>
<li><a href="https://github.com/JoanZapata/base-adapter-helper" target="_blank" rel="external">base-adapter-helper</a> Android 万能的Adapter 这是鼻祖，很多陆续的adapter都是都是参考这个为原型的</li>
<li><a href="https://github.com/cymcsg/UltimateRecyclerView" target="_blank" rel="external">UltimateRecyclerView</a> Android RecyclerView的封装，非常牛叉好用，以后有机会研究下</li>
<li><a href="https://github.com/hongyangAndroid/FlowLayout" target="_blank" rel="external">FlowLayout</a> Android流式布局，支持单选、多选等，适合用于产品标签等。</li>
<li><a href="https://github.com/liaoinstan/SpringView" target="_blank" rel="external">SpringView</a> A custom view can pull up and down,support ScrollView,ListView,RecyclerView,WebView and all another views, easy to use（这么简单的英文应该看得懂吧）</li>
<li><a href="https://github.com/wdullaer/MaterialDateTimePicker" target="_blank" rel="external">MaterialDateTimePicker</a> 安卓的materia风格的日历时间选择控件</li>
<li><a href="https://github.com/DevLight-Mobile-Agency/NavigationTabBar" target="_blank" rel="external">NavigationTabBar</a> Android的NavigationTabBar，效果不错，实用漂亮</li>
<li><a href="https://github.com/huazhiyuan2008/RecyclerViewCardGallery" target="_blank" rel="external">RecyclerViewCardGallery</a> RecyclerView实现Card Gallery效果，替代ViewPager方案。能够快速滑动并最终定位到居中位置</li>
</ul>
<h4 id="视频-图像-2"><a href="#视频-图像-2" class="headerlink" title="视频/图像"></a><em>视频/图像</em></h4><ul>
<li><a href="https://github.com/square/picasso" target="_blank" rel="external">picasso</a> Android强大的图片处理工具框架</li>
<li><a href="https://github.com/pengjianbo/GalleryFinal" target="_blank" rel="external">GalleryFinal</a> Android自定义相册，实现了拍照、图片选择（单选/多选）、 裁剪（单/多裁剪）、旋转、ImageLoader无绑定任由开发者选择、功能可配置、主题样式可配置。GalleryFinal为你定制相册</li>
</ul>
<h4 id="开源项目-2"><a href="#开源项目-2" class="headerlink" title="开源项目"></a><em>开源项目</em></h4><ul>
<li><a href="https://github.com/square/okhttp" target="_blank" rel="external">okhttp</a> android的网络请求框架</li>
<li><a href="https://github.com/wyouflf/xUtils3" target="_blank" rel="external">xUtils3</a> android orm, bitmap, http, view inject…等工具框架合集</li>
<li><a href="https://github.com/greenrobot/EventBus" target="_blank" rel="external">EventBus</a> EventBus是一款针对Android优化的发布/订阅事件总线。主要功能是替代Intent,Handler,BroadCast在Fragment，Activity，Service，线程之间传递消息.优点是开销小，代码更优雅。以及将发送者和接收者解耦。</li>
<li><a href="https://github.com/PhilJay/MPAndroidChart" target="_blank" rel="external">MPAndroidChart</a> 安卓图表框架，好漂亮，也有ios版 A powerful Android chart view / graph view library, supporting line- bar- pie- radar- bubble- and candlestick charts as well as scaling, dragging and animations.</li>
<li><a href="https://github.com/barteksc/AndroidPdfViewer" target="_blank" rel="external">AndroidPdfViewer</a> android的pdf阅读框架</li>
<li><a href="https://github.com/ryanhoo/StylishMusicPlayer" target="_blank" rel="external">StylishMusicPlayer</a> Android一款美得想哭的音乐播放器项目</li>
</ul>
<h4 id="Android资源合集"><a href="#Android资源合集" class="headerlink" title="Android资源合集"></a><em>Android资源合集</em></h4><ul>
<li><a href="https://github.com/wasabeef/awesome-android-ui" target="_blank" rel="external">awesome-android-ui</a> android ui 合集</li>
<li><a href="https://github.com/Trinea/android-open-project" target="_blank" rel="external">android-open-project</a> Android开源项目大搜罗，不错，codekk推出的</li>
<li><a href="https://github.com/hehonghui/android-tech-frontier" target="_blank" rel="external">android-tech-frontier</a> 一个定期翻译国外Android优质的技术、开源库、软件架构设计、测试等文章的开源项目 <a href="http://www.devtf.cn/" target="_blank" rel="external">http://www.devtf.cn</a></li>
<li><a href="https://github.com/Tim9Liu9/TimLiu-Android" target="_blank" rel="external">TimLiu-Android</a> Android开源项目及库</li>
<li><a href="https://github.com/iamdaiyuan/android_top_1000" target="_blank" rel="external">android_top_1000</a> Android开源项目及库前1000名</li>
<li><a href="https://github.com/android-quick-dev/NonViewUtils" target="_blank" rel="external">NonViewUtils</a> 不涉及视图的工具类，逻辑类的集合 <a href="http://android-quick-dev.github.io/NonViewUtils/" target="_blank" rel="external">http://android-quick-dev.github.io/NonViewUtils/</a></li>
</ul>
<hr>
<h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h2><h3 id="数据相关"><a href="#数据相关" class="headerlink" title="数据相关"></a><em>数据相关</em></h3><ul>
<li><a href="https://github.com/alibaba/fastjson" target="_blank" rel="external">fastjson</a> 阿里巴巴的json解析库，速度很快很好用，有安卓版的，用过的都说好</li>
</ul>
<h3 id="框架-1"><a href="#框架-1" class="headerlink" title="框架"></a><em>框架</em></h3><ul>
<li><a href="https://github.com/zhangkaitao/es" target="_blank" rel="external">es</a> javaEE开发脚手架，也就是一套别人搭好的现成框架，写的不错，可以参考学习。springMVC+mybaitis+spring</li>
<li><a href="https://github.com/iluwatar/java-design-patterns" target="_blank" rel="external">java-design-patterns</a> java设计模式</li>
<li><a href="https://github.com/Vedenin/useful-java-links" target="_blank" rel="external">useful-java-links</a> 非常有用的java相关资料和框架的链接，什么都有，对于java开发者来说不得不看啊！！</li>
<li><a href="https://github.com/enamor/SSM" target="_blank" rel="external">SSM框架</a> intellij idea 使用gradle搭建 SpringMVC + Spring + MyBatis 详细步骤 </li>
</ul>
<hr>
<h2 id="前端开发"><a href="#前端开发" class="headerlink" title="前端开发"></a>前端开发</h2><h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a><em>JavaScript</em></h3><ul>
<li><a href="https://github.com/getify/You-Dont-Know-JS" target="_blank" rel="external">You-Dont-Know-JS</a> JavaScript 的书 A book series on JavaScript. @YDKJS on twitter. <a href="http://www.kickstarter.com/projects/getify/you-dont-know-js-book-series" target="_blank" rel="external">http://www.kickstarter.com/projects/getify/you-dont-know-js-book-series</a></li>
<li><a href="https://github.com/mozilla/pdf.js" target="_blank" rel="external">pdf.js</a> 一款js读取pdf的框架 PDF Reader in JavaScript</li>
<li><a href="https://github.com/moment/moment" target="_blank" rel="external">moment</a> JavaScript日期时间操作框架</li>
<li><a href="https://github.com/algolia/places" target="_blank" rel="external">places</a> 输入地址自动完成的input</li>
<li><a href="https://github.com/VincentGarreau/particles.js" target="_blank" rel="external">particles.js</a> 一个轻量简洁的例子效果</li>
<li><a href="https://github.com/impress/impress.js" target="_blank" rel="external">impress.js</a> 让你实现目瞪口呆在线演示效果！！！！！！</li>
<li><a href="https://github.com/jayphelps/core-decorators.js" target="_blank" rel="external">core-decorators.js</a> 让你的js支持像java那样的注解</li>
<li><a href="https://github.com/postaljs/postal.js" target="_blank" rel="external">postal.js</a> 事件订阅处理，类似安卓中的eventbus，iOS中的notification</li>
<li><a href="https://github.com/janl/mustache.js" target="_blank" rel="external">mustache.js</a> 胡子，是一个简单强大的Javascript模板引擎，使用它可以简化在js代码中的html编写，压缩后只有9KB，非常值得在项目中使用</li>
<li><a href="https://github.com/quilljs/quill" target="_blank" rel="external">quill</a> 非常强大的富文本编辑器 1w+ star</li>
</ul>
<h3 id="html"><a href="#html" class="headerlink" title="html"></a><em>html</em></h3><ul>
<li><a href="https://github.com/driftyco/ionic" target="_blank" rel="external">ionic</a> webApp,用于开发web版手机app的超级框架 Ionic is the open source HTML5 Mobile Framework for building amazing, cross-platform hybrid native apps and mobile websites with HTML, JavaScript, and CSS. If you know how to build or design websites, you will be able to build a real mobile app with Ionic</li>
<li><a href="https://github.com/google/material-design-lite" target="_blank" rel="external">material-design-lite</a> Material Design的html组件 Material Design Components in HTML/CSS/JS <a href="http://getmdl.io/" target="_blank" rel="external">http://getmdl.io</a></li>
<li><a href="https://github.com/Ranks/emojione" target="_blank" rel="external">emojione</a> emoji表情</li>
<li><a href="https://github.com/mattvh/jekyllthemes" target="_blank" rel="external">jekyllthemes</a> 博客主题集合站</li>
<li><a href="https://github.com/christabor/flask_jsondash" target="_blank" rel="external">flask_jsondash</a> 漂亮的表格</li>
</ul>
<h3 id="css"><a href="#css" class="headerlink" title="css"></a><em>css</em></h3><ul>
<li><a href="https://github.com/twbs/bootstrap" target="_blank" rel="external">bootstrap</a> 这个我就不想多介绍了，太好的东西了！！！！！！！！！！！</li>
<li><a href="https://github.com/uikit/uikit" target="_blank" rel="external">uikit</a> 又一套前段UI，漂亮</li>
<li><a href="https://github.com/ConnorAtherton/loaders.css" target="_blank" rel="external">loaders.css</a> 一款css的loading动画框架</li>
<li><a href="https://github.com/daneden/animate.css" target="_blank" rel="external">animate.css</a> 一款css的动画框架，可以基于这上面做很多效果，真不错！！！支持所有的基础动画效果 bounce shake 等等</li>
<li><a href="https://github.com/thomaspark/bootswatch" target="_blank" rel="external">bootswatch</a> bootstrap的一些主题 Themes for Bootstrap <a href="http://bootswatch.com/" target="_blank" rel="external">http://bootswatch.com</a></li>
<li><a href="https://github.com/FortAwesome/Font-Awesome" target="_blank" rel="external">Font-Awesome</a> css字体集 The iconic font and CSS toolkit</li>
<li><a href="https://github.com/necolas/normalize.css" target="_blank" rel="external">normalize.css</a> Normalize.css 是一个可以定制的CSS文件，它让不同的浏览器在渲染网页元素的时候形式更统一，Normalize.css现在已经被用于Twitter Bootstrap、HTML5 Boilerplate、GOV.UK、Rdio、CSS Tricks 以及许许多多其他框架、工具和网站上</li>
</ul>
<h3 id="开源控件"><a href="#开源控件" class="headerlink" title="开源控件"></a><em>开源控件</em></h3><ul>
<li><a href="https://github.com/wenzhixin/bootstrap-table" target="_blank" rel="external">bootstrap-table</a> 基于bootstrap的一个表格控件，相当不错，用它来做后台管理系统非常好</li>
<li><a href="https://github.com/almasaeed2010/AdminLTE" target="_blank" rel="external">AdminLTE</a> 一套漂亮吊炸天的后台管理系统UI模板</li>
<li><a href="https://github.com/dangrossman/bootstrap-daterangepicker" target="_blank" rel="external">bootstrap-daterangepicker</a> 基于bootstrap的日期选择控件，漂亮简单强大</li>
<li><a href="https://github.com/Eonasdan/bootstrap-datetimepicker" target="_blank" rel="external">bootstrap-daterangepicker2</a> 基于bootstrap的日期选择控件，漂亮简单强大2</li>
<li><a href="https://github.com/puikinsh/gentelella" target="_blank" rel="external">gentelella</a> 有一款免费漂亮的后台管理模板 Free Bootstrap 3 Admin Template <a href="https://colorlib.com/polygon/gentelella/index.html" target="_blank" rel="external">https://colorlib.com/polygon/gentelella/index.html</a></li>
</ul>
<h3 id="前端开发综合"><a href="#前端开发综合" class="headerlink" title="前端开发综合"></a><em>前端开发综合</em></h3><ul>
<li><a href="https://github.com/facebook/react" target="_blank" rel="external">react</a> react，这个是FB的拿手项目，react-native就是从这里衍生出来的</li>
<li><a href="https://github.com/ruanyf/react-demos" target="_blank" rel="external">react-demos</a> 这里是react的简单demo，可供学习</li>
<li><a href="https://github.com/facebook/react-native" target="_blank" rel="external">react-native</a> FB的react-native</li>
<li><a href="https://github.com/aerofs/react-native-auto-updater" target="_blank" rel="external">react-native-auto-updater</a> react-native自动升级</li>
<li><a href="https://github.com/mulgore/Front-End-Develop-Guide" target="_blank" rel="external">Front-End-Develop-Guide</a> 这份指南汇集了前端开发所使用语言的主流学习资源，并以开发者的视角进行整理编排而成</li>
<li><a href="https://github.com/jondot/awesome-react-native" target="_blank" rel="external">awesome-react-native</a> react-native资料大搜罗</li>
<li><a href="https://github.com/ctripcorp/moles-packer" target="_blank" rel="external">moles-packer</a> moles-packer 是由携程框架团队研发的，与携程moles框架配套使用的React Native 打包和拆包工具，同时支持原生的 React Native 项目。</li>
<li><a href="https://github.com/alibaba/weex" target="_blank" rel="external">weex</a> 阿里打造的一款与react-native类似的玩意</li>
</ul>
<hr>
<h2 id="python"><a href="#python" class="headerlink" title="python"></a>python</h2><ul>
<li><a href="https://github.com/jobbole/awesome-python-cn" target="_blank" rel="external">awesome-python-cn</a> Python资源大全中文版，内容包括：Web框架、网络爬虫、网络内容提取、模板引擎、数据库、数据可视化、图片处理、文本处理、自然语言处理、机器学习、日志、代码分析等</li>
<li><a href="https://github.com/faif/python-patterns" target="_blank" rel="external">python-patterns</a> Python的设计模式</li>
<li><a href="https://github.com/sylnsfar/qrcode" target="_blank" rel="external">qrcode</a> 可生成普通二维码、带图片的艺术二维码（黑白与彩色）、动态二维码（黑白与彩色）</li>
</ul>
<hr>
<h2 id="游戏开发"><a href="#游戏开发" class="headerlink" title="游戏开发"></a>游戏开发</h2><ul>
<li><a href="https://github.com/fusijie/Cocos-Resource" target="_blank" rel="external">Cocos-Resource</a> Cocos 资料大全</li>
</ul>
<hr>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h3><ul>
<li><a href="https://github.com/gztchan/awesome-design" target="_blank" rel="external">awesome-design</a> 设计资源集合，总有你想要的！！！！</li>
<li><a href="https://github.com/sketchplugins/plugin-directory" target="_blank" rel="external">sketch-plugin-directory</a> Sketch草图大师的插件合集</li>
</ul>
<h3 id="好东西"><a href="#好东西" class="headerlink" title="好东西"></a>好东西</h3><ul>
<li><a href="https://github.com/open-power-workgroup/Hospital" target="_blank" rel="external">Hospital</a> OpenPower工作组收集汇总的医院开放数据 <a href="http://open-power-workgroup.github.io/Hospital" target="_blank" rel="external">http://open-power-workgroup.github.io/Hospital</a></li>
<li><a href="https://github.com/braydie/HowToBeAProgrammer" target="_blank" rel="external">HowToBeAProgrammer</a> 如何成为程序员！/(ㄒoㄒ)/~~</li>
<li><a href="https://github.com/phodal" target="_blank" rel="external">phodal大神主页</a> phodal大大写的东西得好好看看，分析的不错，写的也很不错，值得学习</li>
<li><a href="https://github.com/phodal/growth-ebook" target="_blank" rel="external">growth-ebook</a> 全栈增长工程师指南</li>
<li><a href="https://github.com/sindresorhus/awesome" target="_blank" rel="external">awesome</a> github里面所有awesome的东西，哇哈哈，不错！不错！不错！awesome！awesome！awesome！</li>
<li><a href="https://github.com/vhf/free-programming-books" target="_blank" rel="external">free-programming-books</a> 免费的计算机编程类书籍，好多好多</li>
<li><a href="https://github.com/justjavac/free-programming-books-zh_CN" target="_blank" rel="external">free-programming-books-zh_CN</a> 免费的计算机编程类中文书籍，好多好多</li>
<li><a href="https://github.com/AntBranch/awesome-github" target="_blank" rel="external">awesome-github</a> 收集这个列表，只是为了更好地使用亲爱的GitHub</li>
<li><a href="https://github.com/Gazler/githug" target="_blank" rel="external">githug</a> 游戏方式学习github</li>
<li><a href="https://github.com/git-tips/tips" target="_blank" rel="external">git-tips</a> 非常多的git的使用技巧和命令 Most commonly used git tips and tricks</li>
<li><a href="https://github.com/phodal/github-roam" target="_blank" rel="external">github-roam</a> GitHub 漫游指南</li>
<li><a href="https://github.com/buunguyen/octotree" target="_blank" rel="external">octotree</a> 各大浏览器支持在右侧树菜单方式查看github的代码</li>
<li><a href="https://github.com/getlantern/lantern-binaries" target="_blank" rel="external">lantern-binaries</a> FQ神器,去国外看看</li>
<li><a href="https://github.com/racaljk/hosts" target="_blank" rel="external">hosts</a> 最新可用的google hosts文件。镜像： <a href="https://coding.net/u/scaffrey/p/hosts/git" target="_blank" rel="external">https://coding.net/u/scaffrey/p/hosts/git</a></li>
<li><a href="https://github.com/gongjianhui/AppleDNS" target="_blank" rel="external">AppleDNS</a> Apple 网络服务加速配置。真的快，快出声！（少数派、Appinn、Mac玩儿法 推荐）</li>
<li><a href="https://github.com/LFL2018/XcodePluginUpgradeCompatible-LFL" target="_blank" rel="external">XcodePluginUpgradeCompatible-LFL</a> Xcode升级插件兼容一键解决命令工程</li>
<li><a href="https://github.com/Itseez/opencv" target="_blank" rel="external">opencv</a> 全平台openCV图形算法解析库，估计以后研究图形方面能用得着</li>
<li><a href="https://github.com/Ahmed-Ali/JSONExport" target="_blank" rel="external">JSONExport</a> 一款json转对象的软件，支持json转 java、oc、swift</li>
<li><a href="https://github.com/zenorocha/alfred-workflows" target="_blank" rel="external">alfred-workflows</a> alfred常用好用的插件集合</li>
<li><a href="https://github.com/atom/atom" target="_blank" rel="external">atom</a> atom github出品的开源编辑器</li>
<li><a href="https://github.com/producthunt/producthunt-osx" target="_blank" rel="external">producthunt-osx</a> 每天分享最好，最新的mac应用 The best new products, every day on Mac.</li>
<li><a href="https://github.com/hujiaweibujidao/Gank-for-Mac" target="_blank" rel="external">Gank-for-Mac</a> Gank for Mac是一个小巧的干货集中营Mac端应用</li>
<li><a href="https://github.com/listen1/listen1_chrome_extension" target="_blank" rel="external">listen1_chrome_extension</a> chrome上的一个插件，听歌必备， 妈妈再也不用担心我找不到我想听的歌了。这里包含了网易云音乐，虾米，QQ音乐的曲库，够全够大了吧。</li>
<li><a href="https://github.com/OpenEmu/OpenEmu" target="_blank" rel="external">OpenEmu</a> 模拟器游戏，赶快去找回儿时的记忆吧！！！Retro video game emulation for macOS <a href="http://openemu.org/" target="_blank" rel="external">http://openemu.org</a></li>
<li><a href="https://github.com/typcn/bilibili-mac-client" target="_blank" rel="external">bilibili-mac-client</a> B站提供的 Mac 必备的在线视频播放器</li>
<li><a href="https://github.com/gnachman/iTerm2" target="_blank" rel="external">iTerm2</a> iTerm2 是 MAC 下最好的终端工具。可以简单的认为，iTerm2 是配置完毕开箱即用的 tmux</li>
<li><a href="https://github.com/Clipy/Clipy" target="_blank" rel="external">Clipy</a> 强大的变态Mac 剪贴板开源应用</li>
<li><a href="https://github.com/insidegui/WWDC" target="_blank" rel="external">WWDC</a> 在Mac上看wwdc的一款app The unofficial WWDC app for macOS</li>
<li><a href="https://github.com/MacDownApp/macdown" target="_blank" rel="external">macdown</a> 非常好用的markdown编写软件，本人就一直用的这个，简单，小巧</li>
<li><a href="https://github.com/javaliker/SQLiteApp" target="_blank" rel="external">SQLiteApp</a> mac上操作SQLite数据库的app，简单好用</li>
<li><a href="https://github.com/aria2/aria2" target="_blank" rel="external">aria2</a> 把这玩意配置好吧，你会觉得你可以不用迅雷、百度云盘等客户端了 <a href="http://sspai.com/32167" target="_blank" rel="external">参考链接</a></li>
<li><a href="https://github.com/judasn/IntelliJ-IDEA-Tutorial" target="_blank" rel="external">IntelliJ-IDEA-Tutorial</a> IntelliJ IDEA 简体中文专题教程 玩IDEA的朋友可以看看</li>
<li><a href="https://github.com/kyleduo/TinyPNG4Mac" target="_blank" rel="external">TinyPNG4Mac</a> 这是TinyPNG的Mac客户端。TinyPNG提供了PNG图片的“几乎无损”压缩服务。使用TinyPNG4Mac，你可以通过简单的拖拽完成对PNG图片的压缩，无需打开浏览器，无需手动下载图片</li>
<li><a href="https://github.com/equinusocio/material-theme" target="_blank" rel="external">material-theme</a> 这个sublime的material风格的主题，我爱的不要不要的！！！！</li>
<li><a href="https://github.com/kahopoon/Pokemon-Go-Controller" target="_blank" rel="external">Pokemon-Go-Controller</a> 让你安全或则无法到达的区域畅玩Pokemon</li>
<li><a href="https://github.com/AHAAAAAAA/PokemonGo-Map" target="_blank" rel="external">PokemonGo-Map</a> PokemonGo 的地图，让你更清楚知道你附近的小精灵在哪里</li>
<li><a href="https://github.com/jaywcjlove/awesome-mac" target="_blank" rel="external">awesome-mac</a> 用mac的人非star不可！！！！！star star star</li>
<li><a href="https://github.com/FallibleInc/security-guide-for-developers" target="_blank" rel="external">security-guide-for-developers</a> 开发人员的安全指南，快1W star了 （Security Guide for Developers）！！！！！</li>
<li><a href="https://github.com/xitu/gold-miner" target="_blank" rel="external">gold-miner</a> 掘金翻译计划，翻译掘金上优质的英文文章 <a href="http://gold.xitu.io/" target="_blank" rel="external">http://gold.xitu.io</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      github优秀资源推荐
    
    </summary>
    
      <category term="iOS" scheme="http://oxy.pub/categories/iOS/"/>
    
    
      <category term="github" scheme="http://oxy.pub/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>iOS状态栏旋转问题</title>
    <link href="http://oxy.pub/2016/06/08/autoRotate/"/>
    <id>http://oxy.pub/2016/06/08/autoRotate/</id>
    <published>2016-06-07T17:00:30.000Z</published>
    <updated>2018-03-15T13:08:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1、window.rootViewController 为VC的时候 下面两种情况改方法仍须在VC中重写</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">//控制器中重写</div><div class="line">- (BOOL)shouldAutorotate &#123;</div><div class="line">    return NO;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>2、window.rootViewController 为nav的时候</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">//UINavigationController 子类或者分类中重写一下方法</div><div class="line">- (BOOL)shouldAutorotate &#123;</div><div class="line">    return [self.visibleViewController shouldAutorotate];</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (UIInterfaceOrientationMask)supportedInterfaceOrientations &#123;</div><div class="line">    return [self.visibleViewController supportedInterfaceOrientations];</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">- (UIInterfaceOrientation)preferredInterfaceOrientationForPresentation &#123;</div><div class="line">    return [self.visibleViewController preferredInterfaceOrientationForPresentation];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>3、window.rootViewController 为tabBar的时候</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">//UITabBarController 子类或者分类中重写一下方法</div><div class="line">- (BOOL)shouldAutorotate &#123;</div><div class="line">    return self.selectedViewController.shouldAutorotate;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (UIInterfaceOrientationMask)supportedInterfaceOrientations &#123;</div><div class="line">    return self.selectedViewController.supportedInterfaceOrientations;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (UIInterfaceOrientation)preferredInterfaceOrientationForPresentation &#123;</div><div class="line">    return [self.selectedViewController preferredInterfaceOrientationForPresentation];</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (UIStatusBarStyle)preferredStatusBarStyle &#123;</div><div class="line">    return [self.selectedViewController preferredStatusBarStyle];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>如果想更改状态栏的颜色需要一下设置</strong></p>
<p>需要在info.Plist 添加 View controller-based status bar appearance 设置成No，默认为Yes</p>
]]></content>
    
    <summary type="html">
    
      iOS状态栏无法旋转解决方案
    
    </summary>
    
      <category term="iOS" scheme="http://oxy.pub/categories/iOS/"/>
    
    
      <category term="Objective-C" scheme="http://oxy.pub/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>Intellij IDEA 中结合 Gradle 使用 MyBatis Generator 逆向生成代码</title>
    <link href="http://oxy.pub/2016/04/26/Gradle-MyBatisGenerator/"/>
    <id>http://oxy.pub/2016/04/26/Gradle-MyBatisGenerator/</id>
    <published>2016-04-26T10:17:26.000Z</published>
    <updated>2018-03-15T13:12:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>在 Intellij IDEA 中结合 Gradle 使用 MyBatis Generator 逆向生成代码</p>
<ul>
<li>JDK 1.8</li>
<li>Gradle 3.5</li>
<li>Intellij IDEA 2017</li>
</ul>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Intellij IDEA 的教程较少，且 MyBatis Generator 不支持 Gradle 直接运行，因此这次是在自己折腾项目过程中，根据一些参考资料加上自己的实践得出的结论，并附上相应的 Demo 可供自己未来参考，也与大家分享。</p>
<p>本文的 Demo 也可以当作工具直接导入 IDEA，加上自己的数据库信息即可生成代码。</p>
<h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p>创建步骤可以参考<a href="http://oxy.pub/2016/04/22/ssm1/">intellij idea 2016 gradle搭建web工程</a>中。当创建完毕，需要等待 Gradle 联网构建，由于国内网络因素，可能需要稍作等待。当构建完成，目录结构应如下图一致：</p>
<p><img src="/2016/04/26/Gradle-MyBatisGenerator/step1.png" alt="step1"></p>
<h2 id="配置依赖"><a href="#配置依赖" class="headerlink" title="配置依赖"></a>配置依赖</h2><p>这里需要使用 MyBatis Generator，MySQL 驱动，以及 MyBatis Mapper。由于代码生成单独运行即可，不需要参与到整个项目的编译，因此在 build.gradle 中添加配置：</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">configurations &#123;</div><div class="line">mybatisGenerator</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">dependencies &#123;</div><div class="line">testCompile <span class="string">group:</span> <span class="string">'junit'</span>, <span class="string">name:</span> <span class="string">'junit'</span>, <span class="string">version:</span> <span class="string">'4.11'</span></div><div class="line"></div><div class="line">mybatisGenerator <span class="string">'org.mybatis.generator:mybatis-generator-core:1.3.5'</span></div><div class="line">mybatisGenerator <span class="string">'mysql:mysql-connector-java:5.1.40'</span></div><div class="line">mybatisGenerator <span class="string">'tk.mybatis:mapper:3.3.9'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="设置数据库信息"><a href="#设置数据库信息" class="headerlink" title="设置数据库信息"></a>设置数据库信息</h2><p>在 resources 下，新建 mybatis 文件夹，并新建 jdbc.properties 和 generatorConfig.xml，文件结构如下：</p>
<p><img src="/2016/04/26/Gradle-MyBatisGenerator/step2.png" alt="step1"></p>
<p>在 config.properties 中配置数据库和要生成的 Java 类的包：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">jdbc.driver=com.mysql.jdbc.Driver</div><div class="line">jdbc.url=jdbc:mysql://192.168.1.11:3306/ssmDemo?characterEncoding=utf8</div><div class="line">jdbc.username=root</div><div class="line">jdbc.password=111111</div><div class="line"></div><div class="line"></div><div class="line"># 生成实体类所在的包</div><div class="line">package.model=org.zn.user.entity</div><div class="line"># 生成 mapper 类所在的包</div><div class="line">package.mapper=org.zn.user.dao</div><div class="line"># 生成 mapper xml 文件所在的包，默认存储在 resources 目录下</div><div class="line">package.xml=mapping</div><div class="line"># 表名</div><div class="line">package.tableName=user</div><div class="line"># 生成实体类名称</div><div class="line">package.entityName=User</div></pre></td></tr></table></figure>
<h2 id="设置生成代码的配置文件"><a href="#设置生成代码的配置文件" class="headerlink" title="设置生成代码的配置文件"></a>设置生成代码的配置文件</h2><p>在 generatorConfig.xml 中配置数据库表信息，可以参考官方的文档（附在文末）来进行配置：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="meta">&lt;!DOCTYPE generatorConfiguration</span></div><div class="line">        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"</div><div class="line">        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"&gt;</div><div class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">"Mysql"</span> <span class="attr">targetRuntime</span>=<span class="string">"MyBatis3Simple"</span> <span class="attr">defaultModelType</span>=<span class="string">"flat"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suppressAllComments"</span> <span class="attr">value</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suppressDate"</span> <span class="attr">value</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"javaFileEncoding"</span> <span class="attr">value</span>=<span class="string">"utf-8"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">"$&#123;driverClass&#125;"</span></span></div><div class="line">                        <span class="attr">connectionURL</span>=<span class="string">"$&#123;connectionURL&#125;"</span></div><div class="line">                        <span class="attr">userId</span>=<span class="string">"$&#123;userId&#125;"</span></div><div class="line">                        <span class="attr">password</span>=<span class="string">"$&#123;password&#125;"</span>&gt;</div><div class="line">        <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">javaTypeResolver</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"forceBigDecimals"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">javaTypeResolver</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"$&#123;modelPackage&#125;"</span> <span class="attr">targetProject</span>=<span class="string">"$&#123;src_main_java&#125;"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"trimStrings"</span> <span class="attr">value</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"$&#123;sqlMapperPackage&#125;"</span> <span class="attr">targetProject</span>=<span class="string">"$&#123;src_main_resources&#125;"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象</span></div><div class="line">             type="MIXEDMAPPER",生成基于注解的JavaModel 和相应的Mapper对象</div><div class="line">             type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口  --&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"$&#123;mapperPackage&#125;"</span> <span class="attr">targetProject</span>=<span class="string">"$&#123;src_main_java&#125;"</span> <span class="attr">type</span>=<span class="string">"XMLMAPPER"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- 这种方式是所有的表逆向生成类 下面是单个表具体看情况使用</span></div><div class="line">        &lt;table tableName="%"&gt;</div><div class="line">            &lt;generatedKey column="epa_id" sqlStatement="Mysql" identity="true" /&gt;</div><div class="line">        &lt;/table&gt; --&gt;</div><div class="line"></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- 要生成的表 tableName是数据库中的表名或视图名 domainObjectName是实体类名--&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">"$&#123;tableName&#125;"</span> <span class="attr">domainObjectName</span>=<span class="string">"$&#123;entityName&#125;"</span></span></div><div class="line">               <span class="attr">enableCountByExample</span>=<span class="string">"false"</span> <span class="attr">enableUpdateByExample</span>=<span class="string">"false"</span></div><div class="line">               <span class="attr">enableDeleteByExample</span>=<span class="string">"false"</span> <span class="attr">enableSelectByExample</span>=<span class="string">"false"</span></div><div class="line">               <span class="attr">selectByExampleQueryId</span>=<span class="string">"false"</span>&gt;<span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="Gradle-设置-Ant-Task"><a href="#Gradle-设置-Ant-Task" class="headerlink" title="Gradle 设置 Ant Task"></a>Gradle 设置 Ant Task</h2><p>由于 MyBatis Generator 尚不支持 Gradle，所以只能使用 Gradle 来执行 Ant Task，达到相同的效果。</p>
<p>build.gradle:</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">def</span> getDbProperties = &#123;</div><div class="line"><span class="keyword">def</span> properties = <span class="keyword">new</span> Properties()</div><div class="line">file(<span class="string">"src/main/resources/jdbc.properties"</span>).withInputStream &#123; inputStream -&gt;</div><div class="line">properties.load(inputStream)</div><div class="line">&#125;</div><div class="line">properties</div><div class="line">&#125;</div><div class="line"></div><div class="line">task mybatisGenerate &lt;&lt; &#123;</div><div class="line">    <span class="keyword">def</span> properties = getDbProperties()</div><div class="line">    ant.properties[<span class="string">'targetProject'</span>] = projectDir.path</div><div class="line">    ant.properties[<span class="string">'driverClass'</span>] = properties.getProperty(<span class="string">"jdbc.driver"</span>)</div><div class="line">    ant.properties[<span class="string">'connectionURL'</span>] = properties.getProperty(<span class="string">"jdbc.url"</span>)</div><div class="line">    ant.properties[<span class="string">'userId'</span>] = properties.getProperty(<span class="string">"jdbc.username"</span>)</div><div class="line">    ant.properties[<span class="string">'password'</span>] = properties.getProperty(<span class="string">"jdbc.password"</span>)</div><div class="line">    ant.properties[<span class="string">'src_main_java'</span>] = sourceSets.main.java.srcDirs[<span class="number">0</span>].path</div><div class="line">    ant.properties[<span class="string">'src_main_resources'</span>] = sourceSets.main.resources.srcDirs[<span class="number">0</span>].path</div><div class="line">    ant.properties[<span class="string">'modelPackage'</span>] = properties.getProperty(<span class="string">"package.model"</span>)</div><div class="line">    ant.properties[<span class="string">'mapperPackage'</span>] = properties.getProperty(<span class="string">"package.mapper"</span>)</div><div class="line">    ant.properties[<span class="string">'sqlMapperPackage'</span>] = properties.getProperty(<span class="string">"package.xml"</span>)</div><div class="line">    ant.properties[<span class="string">'tableName'</span>] = properties.getProperty(<span class="string">"package.tableName"</span>)</div><div class="line">    ant.properties[<span class="string">'entityName'</span>] = properties.getProperty(<span class="string">"package.entityName"</span>)</div><div class="line">    ant.taskdef(</div><div class="line"><span class="symbol">            name:</span> <span class="string">'mbgenerator'</span>,</div><div class="line"><span class="symbol">            classname:</span> <span class="string">'org.mybatis.generator.ant.GeneratorAntTask'</span>,</div><div class="line"><span class="symbol">            classpath:</span> configurations.mybatisGenerator.asPath</div><div class="line">    )</div><div class="line">    ant.mbgenerator(<span class="string">overwrite:</span> <span class="literal">true</span>,</div><div class="line"><span class="symbol">            configfile:</span> <span class="string">'src/main/resources/generatorConfig.xml'</span>, <span class="string">verbose:</span> <span class="literal">true</span>) &#123;</div><div class="line">        propertyset &#123;</div><div class="line">            propertyref(<span class="string">name:</span> <span class="string">'targetProject'</span>)</div><div class="line">            propertyref(<span class="string">name:</span> <span class="string">'userId'</span>)</div><div class="line">            propertyref(<span class="string">name:</span> <span class="string">'driverClass'</span>)</div><div class="line">            propertyref(<span class="string">name:</span> <span class="string">'connectionURL'</span>)</div><div class="line">            propertyref(<span class="string">name:</span> <span class="string">'password'</span>)</div><div class="line">            propertyref(<span class="string">name:</span> <span class="string">'src_main_java'</span>)</div><div class="line">            propertyref(<span class="string">name:</span> <span class="string">'src_main_resources'</span>)</div><div class="line">            propertyref(<span class="string">name:</span> <span class="string">'modelPackage'</span>)</div><div class="line">            propertyref(<span class="string">name:</span> <span class="string">'mapperPackage'</span>)</div><div class="line">            propertyref(<span class="string">name:</span> <span class="string">'sqlMapperPackage'</span>)</div><div class="line">            propertyref(<span class="string">name:</span> <span class="string">'tableName'</span>)</div><div class="line">            propertyref(<span class="string">name:</span> <span class="string">'entityName'</span>)</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>配置好 build.gradle，就可以在 IDEA 的 Gradle 菜单中找到新的 Task：</p>
<p><img src="/2016/04/26/Gradle-MyBatisGenerator/step3.png" alt="step3"></p>
<p>如果这里没有，可能是 Gradle 没有 build，重新刷新即可：</p>
<p><img src="/2016/04/26/Gradle-MyBatisGenerator/step4.png" alt="step4"></p>
<p>双击「mybatisGenerate」即可运行，如果配置正确即可运行成功：</p>
<p><img src="/2016/04/26/Gradle-MyBatisGenerator/step5.png" alt="step5"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>感谢网上博友的无私奉献，参考你们的博文最终得以完成</p>
<p>Gradle+SSM+MyBatis Generator源码地址：<a href="https://github.com/enamor/ssm" target="_blank" rel="external">https://github.com/enamor/ssm</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在 Intellij IDEA 中结合 Gradle 使用 MyBatis Generator 逆向生成代码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JDK 1.8&lt;/li&gt;
&lt;li&gt;Gradle 3.5&lt;/li&gt;
&lt;li&gt;Intellij IDEA 2017&lt;/li&gt;
&lt;/ul&gt;
&lt;h
    
    </summary>
    
      <category term="Java" scheme="http://oxy.pub/categories/Java/"/>
    
    
      <category term="MyBatis" scheme="http://oxy.pub/tags/MyBatis/"/>
    
  </entry>
  
  <entry>
    <title>intellij idea 2016 gradle搭建 spring + springMVC + mybatis 框架</title>
    <link href="http://oxy.pub/2016/04/24/ssm2/"/>
    <id>http://oxy.pub/2016/04/24/ssm2/</id>
    <published>2016-04-23T16:00:00.000Z</published>
    <updated>2017-04-22T09:44:55.000Z</updated>
    
    <content type="html"><![CDATA[<p><em>操作系统：Mac OS</em></p>
<p><strong>在上一篇文章intellij idea 2016 gradle搭建 web工程基础上进行如下操作</strong></p>
<p><strong>demo源码已经迁移至Github</strong>    &lt;<a href="https://github.com/enamor/ssm" target="_blank" rel="external">https://github.com/enamor/ssm</a></p>
<p><strong>整体目录结构如下：</strong></p>
<p><img src="/2016/04/24/ssm2/directory.png" alt=""></p>
<p><strong>1、gradle进行项目jar包引入 bulid.gradle 文件dependencies 下加入</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line">testCompile group: <span class="string">'junit'</span>, name: <span class="string">'junit'</span>, version: <span class="string">'4.11'</span></div><div class="line"></div><div class="line">    def springVersion = <span class="string">"4.3.7.RELEASE"</span></div><div class="line">    def mybatisVersion = <span class="string">"3.2.6"</span></div><div class="line">    def log4jVersion = <span class="string">"1.2.17"</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">// Spring依赖</span></div><div class="line">    compile(<span class="string">"org.springframework:spring-aop:$springVersion"</span>,</div><div class="line">            <span class="string">"org.springframework:spring-orm:$springVersion"</span>,</div><div class="line">            <span class="string">"org.springframework:spring-jdbc:$springVersion"</span>,</div><div class="line">            <span class="string">"org.springframework:spring-instrument-tomcat:$springVersion"</span>,</div><div class="line">            <span class="string">"org.springframework:spring-instrument:$springVersion"</span>,</div><div class="line">            <span class="string">"org.springframework:spring-framework-bom:$springVersion"</span>,</div><div class="line">            <span class="string">"org.springframework:spring-expression:$springVersion"</span>,</div><div class="line">            <span class="string">"org.springframework:spring-core:$springVersion"</span>,</div><div class="line">            <span class="string">"org.springframework:spring-context-support:$springVersion"</span>,</div><div class="line">            <span class="string">"org.springframework:spring-context:$springVersion"</span>,</div><div class="line">            <span class="string">"org.springframework:spring-beans:$springVersion"</span>,</div><div class="line">            <span class="string">"org.springframework:spring-aspects:$springVersion"</span>,</div><div class="line">            <span class="string">"org.springframework:spring-test:$springVersion"</span>,</div><div class="line">            <span class="string">"org.springframework:spring-tx:$springVersion"</span>,</div><div class="line">            <span class="string">"org.springframework:spring-web:$springVersion"</span>,</div><div class="line">            <span class="string">"org.springframework:spring-webmvc:$springVersion"</span>,</div><div class="line">            <span class="string">"org.springframework:spring-webmvc-portlet:$springVersion"</span>)</div><div class="line"></div><div class="line">    <span class="comment">//mybaits</span></div><div class="line">    compile group: <span class="string">'org.mybatis'</span>, name: <span class="string">'mybatis'</span>, version: mybatisVersion</div><div class="line">    <span class="comment">//mybaits-spring</span></div><div class="line">    compile group: <span class="string">'org.mybatis'</span>, name: <span class="string">'mybatis-spring'</span>, version: <span class="string">'1.2.2'</span></div><div class="line"></div><div class="line">    <span class="comment">//java ee jar 包</span></div><div class="line">    compile group: <span class="string">'javax'</span>, name: <span class="string">'javaee-api'</span>, version: <span class="string">'7.0'</span></div><div class="line"></div><div class="line">    <span class="comment">//mysql</span></div><div class="line">    compile group: <span class="string">'mysql'</span>, name: <span class="string">'mysql-connector-java'</span>, version: <span class="string">'5.1.6'</span></div><div class="line">    compile group: <span class="string">'commons-dbcp'</span>, name: <span class="string">'commons-dbcp'</span>, version: <span class="string">'1.4'</span></div><div class="line"></div><div class="line">    <span class="comment">//阿里巴巴开源json处理</span></div><div class="line">    <span class="comment">//compile group: 'com.alibaba', name: 'fastjson', version: '1.2.7'</span></div><div class="line"></div><div class="line">    <span class="comment">//映入json</span></div><div class="line">    compile group: <span class="string">'com.fasterxml.jackson.core'</span>, name: <span class="string">'jackson-core'</span>, version: <span class="string">'2.7.3'</span></div><div class="line">    compile group: <span class="string">'com.fasterxml.jackson.core'</span>, name: <span class="string">'jackson-databind'</span>, version: <span class="string">'2.8.7'</span></div><div class="line">    <span class="comment">//compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.13'</span></div><div class="line"></div><div class="line">    <span class="comment">//jstl标签</span></div><div class="line">    compile group: <span class="string">'jstl'</span>, name: <span class="string">'jstl'</span>, version: <span class="string">'1.2'</span></div><div class="line"></div><div class="line">    <span class="comment">//日志</span></div><div class="line">    compile(<span class="string">"log4j:log4j:$log4jVersion"</span>,</div><div class="line">            <span class="string">"org.slf4j:slf4j-api:1.7.21"</span>,</div><div class="line">            <span class="string">"org.slf4j:slf4j-log4j12:1.7.21"</span>)</div><div class="line"></div><div class="line">    <span class="comment">//上传组建包</span></div><div class="line">    compile group: <span class="string">'commons-fileupload'</span>, name: <span class="string">'commons-fileupload'</span>, version: <span class="string">'1.3.1'</span></div><div class="line">    compile group: <span class="string">'commons-io'</span>, name: <span class="string">'commons-io'</span>, version: <span class="string">'2.4'</span></div><div class="line">    compile group: <span class="string">'commons-codec'</span>, name: <span class="string">'commons-codec'</span>, version: <span class="string">'1.10'</span></div><div class="line"></div><div class="line"></div><div class="line">    compile group: <span class="string">'junit'</span>, name: <span class="string">'junit'</span>, version: <span class="string">'4.12'</span></div></pre></td></tr></table></figure>
<p><strong>2、 建立jdbc.properties文件</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">driver=com.mysql.jdbc.Driver</div><div class="line">url=jdbc:mysql://192.168.1.6:3306/ssmDemo?characterEncoding=utf8</div><div class="line">username=root</div><div class="line">password=111111</div><div class="line">#定义初始连接数</div><div class="line">initialSize=0</div><div class="line">#定义最大连接数</div><div class="line">maxActive=20</div><div class="line">#定义最大空闲</div><div class="line">maxIdle=20</div><div class="line">#定义最小空闲</div><div class="line">minIdle=1</div><div class="line">#定义最长等待时间</div><div class="line">maxWait=60000</div></pre></td></tr></table></figure>
<p><strong>3、建立log4j.properties文件</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">#定义LOG输出级别</div><div class="line">log4j.rootLogger=INFO,Console,File</div><div class="line">#定义日志输出目的地为控制台</div><div class="line">log4j.appender.Console=org.apache.log4j.ConsoleAppender</div><div class="line">log4j.appender.Console.Target=System.out</div><div class="line">#可以灵活地指定日志输出格式，下面一行是指定具体的格式</div><div class="line">log4j.appender.Console.layout = org.apache.log4j.PatternLayout</div><div class="line">log4j.appender.Console.layout.ConversionPattern=[%c] - %m%n</div><div class="line"></div><div class="line">#文件大小到达指定尺寸的时候产生一个新的文件</div><div class="line">log4j.appender.File = org.apache.log4j.RollingFileAppender</div><div class="line">#指定输出目录</div><div class="line">log4j.appender.File.File = logs/ssm.log</div><div class="line">#定义文件最大大小</div><div class="line">log4j.appender.File.MaxFileSize = 10MB</div><div class="line"># 输出所以日志，如果换成DEBUG表示输出DEBUG以上级别日志</div><div class="line">log4j.appender.File.Threshold = ALL</div><div class="line">log4j.appender.File.layout = org.apache.log4j.PatternLayout</div><div class="line">log4j.appender.File.layo</div></pre></td></tr></table></figure>
<p><strong>4、建立spring-mvc.xml配置文件</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line">	<span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></div><div class="line">	<span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></div><div class="line">	<span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></div><div class="line">	<span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans  </span></div><div class="line">                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  </div><div class="line">                        http://www.springframework.org/schema/context  </div><div class="line">                        http://www.springframework.org/schema/context/spring-context-4.0.xsd  </div><div class="line">                        http://www.springframework.org/schema/mvc  </div><div class="line">                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd"&gt;</div><div class="line">	<span class="comment">&lt;!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"org.zn"</span> &gt;</span>    </div><div class="line">   		 <span class="tag">&lt;<span class="name">context:exclude-filter</span> <span class="attr">type</span>=<span class="string">"annotation"</span> <span class="attr">expression</span>=<span class="string">"org.springframework.stereotype.Service"</span> /&gt;</span>    </div><div class="line">	<span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span>  </div><div class="line">	</div><div class="line">	<span class="comment">&lt;!--避免IE执行AJAX时，返回JSON出现下载文件 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"mappingJacksonHttpMessageConverter"</span></span></div><div class="line">		  <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"</span>&gt;</div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"supportedMediaTypes"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">list</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">value</span>&gt;</span>text/html;charset=UTF-8<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">list</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">	<span class="comment">&lt;!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">bean</span></span></div><div class="line">		<span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"</span>&gt;</div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"messageConverters"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">list</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"mappingJacksonHttpMessageConverter"</span> /&gt;</span>	<span class="comment">&lt;!-- JSON转换器 --&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">list</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">	</div><div class="line">	<span class="comment">&lt;!-- 定义跳转的文件的前后缀 ，视图模式配置--&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></div><div class="line">		<span class="comment">&lt;!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 --&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/jsp/"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span> /&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">	</div><div class="line">	<span class="comment">&lt;!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"multipartResolver"</span>  </span></div><div class="line">        <span class="attr">class</span>=<span class="string">"org.springframework.web.multipart.commons.CommonsMultipartResolver"</span>&gt;  </div><div class="line">        <span class="comment">&lt;!-- 默认编码 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultEncoding"</span> <span class="attr">value</span>=<span class="string">"utf-8"</span> /&gt;</span>  </div><div class="line">        <span class="comment">&lt;!-- 文件大小最大值 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxUploadSize"</span> <span class="attr">value</span>=<span class="string">"10485760000"</span> /&gt;</span>  </div><div class="line">        <span class="comment">&lt;!-- 内存中的最大值 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxInMemorySize"</span> <span class="attr">value</span>=<span class="string">"40960"</span> /&gt;</span>  </div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span> </div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>5、建立spring-mybatis.xml （spring和mybatis整合配置）</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line">	&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line">	<span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></div><div class="line">	<span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></div><div class="line">    <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></div><div class="line">    <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></div><div class="line">	<span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></div><div class="line">	<span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans  </span></div><div class="line">                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  </div><div class="line">                        http://www.springframework.org/schema/context  </div><div class="line">                        http://www.springframework.org/schema/context/spring-context-4.0.xsd  </div><div class="line">                        http://www.springframework.org/schema/aop</div><div class="line">                        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd</div><div class="line">                        http://www.springframework.org/schema/tx</div><div class="line">                        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd</div><div class="line">                        http://www.springframework.org/schema/mvc  </div><div class="line">                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd"&gt;</div><div class="line">	<span class="comment">&lt;!-- 自动扫描 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"org.zn"</span> &gt;</span>    </div><div class="line">	    <span class="tag">&lt;<span class="name">context:exclude-filter</span> <span class="attr">type</span>=<span class="string">"annotation"</span> <span class="attr">expression</span>=<span class="string">"org.springframework.stereotype.Controller"</span> /&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span>  </div><div class="line">	</div><div class="line">	<span class="comment">&lt;!-- 引入配置文件 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"propertyConfigurer"</span></span></div><div class="line">		<span class="attr">class</span>=<span class="string">"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"</span>&gt;</div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"location"</span> <span class="attr">value</span>=<span class="string">"classpath:jdbc.properties"</span> /&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"org.apache.commons.dbcp.BasicDataSource"</span></span></div><div class="line">		<span class="attr">destroy-method</span>=<span class="string">"close"</span>&gt;</div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"$&#123;driver&#125;"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;url&#125;"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;username&#125;"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;password&#125;"</span> /&gt;</span></div><div class="line">		<span class="comment">&lt;!-- 初始化连接大小 --&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"initialSize"</span> <span class="attr">value</span>=<span class="string">"$&#123;initialSize&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">		<span class="comment">&lt;!-- 连接池最大数量 --&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxActive"</span> <span class="attr">value</span>=<span class="string">"$&#123;maxActive&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">		<span class="comment">&lt;!-- 连接池最大空闲 --&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxIdle"</span> <span class="attr">value</span>=<span class="string">"$&#123;maxIdle&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">		<span class="comment">&lt;!-- 连接池最小空闲 --&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minIdle"</span> <span class="attr">value</span>=<span class="string">"$&#123;minIdle&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">		<span class="comment">&lt;!-- 获取连接最大等待时间 --&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxWait"</span> <span class="attr">value</span>=<span class="string">"$&#123;maxWait&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="comment">&lt;!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span> /&gt;</span></div><div class="line">		<span class="comment">&lt;!-- 自动扫描mapping.xml文件 --&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mapperLocations"</span> <span class="attr">value</span>=<span class="string">"classpath:mapping/*.xml"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">	</div><div class="line"></div><div class="line">	<span class="comment">&lt;!-- DAO接口所在包名，Spring会自动查找其下的类 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.mapper.MapperScannerConfigurer"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"basePackage"</span> <span class="attr">value</span>=<span class="string">"org.zn.**.dao"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sqlSessionFactoryBeanName"</span> <span class="attr">value</span>=<span class="string">"sqlSessionFactory"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">	</div><div class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"jdbcTemplate"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.core.JdbcTemplate"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="comment">&lt;!-- (事务管理)transaction manager, use JtaTransactionManager for global tx --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span></span></div><div class="line">		<span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span> /&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>6、web.xml配置文件</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;  </div><div class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span>  </span></div><div class="line">    <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span>  </div><div class="line">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"</span>  </div><div class="line">    <span class="attr">version</span>=<span class="string">"3.0"</span>&gt;  </div><div class="line">    <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span>  </div><div class="line">    <span class="comment">&lt;!-- Spring和mybatis的配置文件 --&gt;</span>  </div><div class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span>  </div><div class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span>  </div><div class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring-mybatis.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span>  </div><div class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>log4jConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:log4j.properties<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></div><div class="line">    </div><div class="line">    <span class="comment">&lt;!-- 编码过滤器 --&gt;</span>  </div><div class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span>  </div><div class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span>  </div><div class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span>  </div><div class="line">        <span class="tag">&lt;<span class="name">async-supported</span>&gt;</span>true<span class="tag">&lt;/<span class="name">async-supported</span>&gt;</span>  </div><div class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span>  </div><div class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span>  </div><div class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span>  </div><div class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span>  </div><div class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span>  </div><div class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span>  </div><div class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span>  </div><div class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span>  </div><div class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span>  </div><div class="line">    <span class="comment">&lt;!-- Spring监听器 --&gt;</span>  </div><div class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span>  </div><div class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span>  </div><div class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span>  </div><div class="line">    <span class="comment">&lt;!-- 防止Spring内存溢出监听器 --&gt;</span>  </div><div class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span>  </div><div class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.util.IntrospectorCleanupListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span>  </div><div class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span>  </div><div class="line">  </div><div class="line">    <span class="comment">&lt;!-- Spring MVC servlet --&gt;</span>  </div><div class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span>  </div><div class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span>  </div><div class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span>  </div><div class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span>  </div><div class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span>  </div><div class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring-mvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span>  </div><div class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span>  </div><div class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span>  </div><div class="line">        <span class="tag">&lt;<span class="name">async-supported</span>&gt;</span>true<span class="tag">&lt;/<span class="name">async-supported</span>&gt;</span>  </div><div class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span>  </div><div class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span>  </div><div class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span>  </div><div class="line">        <span class="comment">&lt;!-- 此处可以可以配置成*.do，对应struts的后缀习惯 --&gt;</span>  </div><div class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span>  </div><div class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span>  </div><div class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span>  </div><div class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>/index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span>  </div><div class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span>  </div><div class="line">  </div><div class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></div></pre></td></tr></table></figure>
<p><em>以上配置文件已经配置完成</em></p>
<hr>
<p><em>以下进行数据库创建及测试</em></p>
<p><strong>1、表创建 及数据添加</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line"> Navicat Premium Data Transfer</div><div class="line"></div><div class="line"> Source Server         : zhouen</div><div class="line"> Source Server Type    : MySQL</div><div class="line"> Source Server Version : 50630</div><div class="line"> Source Host           : localhost</div><div class="line"> Source Database       : ssmDemo</div><div class="line"></div><div class="line"> Target Server Type    : MySQL</div><div class="line"> Target Server Version : 50630</div><div class="line"> File Encoding         : utf-8</div><div class="line"></div><div class="line"> Date: 04/12/2016 10:56:27 AM</div><div class="line">*/</div><div class="line"></div><div class="line">SET NAMES utf8;</div><div class="line">SET FOREIGN_KEY_CHECKS = 0;</div><div class="line"></div><div class="line">-- ----------------------------</div><div class="line">--  Table structure for `user`</div><div class="line">-- ----------------------------</div><div class="line">DROP TABLE IF EXISTS `user`;</div><div class="line">CREATE TABLE `user` (</div><div class="line">  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT &apos;用户id,自增长&apos;,</div><div class="line">  `name` char(40) COLLATE utf8mb4_bin DEFAULT NULL COMMENT &apos;用户名&apos;,</div><div class="line">  `password` char(50) COLLATE utf8mb4_bin DEFAULT NULL COMMENT &apos;密码&apos;,</div><div class="line">  PRIMARY KEY (`id`)</div><div class="line">) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin COMMENT=&apos;用户表&apos;;</div><div class="line"></div><div class="line">-- ----------------------------</div><div class="line">--  Records of `user`</div><div class="line">-- ----------------------------</div><div class="line">BEGIN;</div><div class="line">INSERT INTO `user` VALUES (&apos;1&apos;, &apos;张三&apos;, &apos;zhangsan&apos;), (&apos;2&apos;, &apos;里斯&apos;, &apos;lisi&apos;), (&apos;3&apos;, &apos;王五&apos;, &apos;wangwu&apos;), (&apos;6&apos;, &apos;二麻子&apos;, &apos;111111&apos;), (&apos;7&apos;, &apos;霸道&apos;, &apos;333333&apos;);</div><div class="line">COMMIT;</div><div class="line"></div><div class="line">SET FOREIGN_KEY_CHECKS = 1;</div></pre></td></tr></table></figure>
<p><strong>2、类创建UserController</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> org.zn.user.controller;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</div><div class="line"><span class="keyword">import</span> org.springframework.ui.Model;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class="line"><span class="keyword">import</span> org.zn.user.entity.User;</div><div class="line"><span class="keyword">import</span> org.zn.user.service.UserService;</div><div class="line"></div><div class="line"><span class="keyword">import</span> javax.annotation.Resource;</div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by zn on 2016/4/11.</div><div class="line"> */</div><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/user"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</div><div class="line">    <span class="meta">@Resource</span></div><div class="line">    <span class="keyword">private</span> UserService userService;</div><div class="line"></div><div class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/showUser"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">showUser</span><span class="params">(HttpServletRequest request, Model model)</span></span>&#123;</div><div class="line"></div><div class="line">        List&lt;User&gt; userList = userService.selectAll();</div><div class="line">        model.addAttribute(<span class="string">"userList"</span>,userList);</div><div class="line">        <span class="keyword">return</span> <span class="string">"showUser"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>3、UserMapper.xml创建</strong> <em>数据库映射自动构建后期会写一篇文章专门讲解</em></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="meta">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"org.zn.user.dao.UserDao"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"BaseResultMap"</span> <span class="attr">type</span>=<span class="string">"org.zn.user.entity.User"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">jdbcType</span>=<span class="string">"INTEGER"</span> <span class="attr">property</span>=<span class="string">"id"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"name"</span> <span class="attr">jdbcType</span>=<span class="string">"CHAR"</span> <span class="attr">property</span>=<span class="string">"name"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"password"</span> <span class="attr">jdbcType</span>=<span class="string">"CHAR"</span> <span class="attr">property</span>=<span class="string">"password"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectAll"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMap"</span> &gt;</span></div><div class="line">    select *from user</div><div class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>4、实体类User的创建</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> org.zn.user.entity;</div><div class="line"></div><div class="line"><span class="keyword">import</span> javax.persistence.GeneratedValue;</div><div class="line"><span class="keyword">import</span> javax.persistence.GenerationType;</div><div class="line"><span class="keyword">import</span> javax.persistence.Id;</div><div class="line"><span class="keyword">import</span> javax.persistence.Table;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Integer id;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> String name;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> String password;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@return</span> id</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@param</span> id</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.id = id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@return</span> name</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@param</span> name</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.name = name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@return</span> password</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> password;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@param</span> password</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.password = password;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">"User&#123;"</span> +</div><div class="line">                <span class="string">"id="</span> + id +</div><div class="line">                <span class="string">", name='"</span> + name + <span class="string">'\''</span> +</div><div class="line">                <span class="string">", password='"</span> + password + <span class="string">'\''</span> +</div><div class="line">                <span class="string">'&#125;'</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>5、showUser.jsp创建</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">&lt;%--</div><div class="line">  Created by IntelliJ IDEA.</div><div class="line">  User: Zhangxq</div><div class="line">  Date: 2016/7/16</div><div class="line">  Time: 0:07</div><div class="line">  To change this template use File | Settings | File Templates.</div><div class="line">--%&gt;</div><div class="line">&lt;%@ page contentType="text/html;charset=UTF-8" language="java" %&gt;</div><div class="line">&lt;%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %&gt;</div><div class="line">&lt;%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;title&gt;用户信息列表&lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">    &lt;c:if test="$&#123;!empty userList&#125;"&gt;</div><div class="line">        &lt;c:forEach var="user" items="$&#123;userList&#125;"&gt;</div><div class="line">            姓名：$&#123;user.name&#125; &amp;nbsp;&amp;nbsp;手机号：$&#123;user.password&#125; &amp;nbsp;&amp;nbsp;邮箱：$&#123;user.id&#125; &amp;nbsp;&amp;nbsp;&lt;br&gt;</div><div class="line">        &lt;/c:forEach&gt;</div><div class="line">    &lt;/c:if&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<p><strong>6、service层 和 dao层 自行创建  可下载demo参考</strong></p>
<p><strong>demo源码已经迁移至Github</strong>    <a href="https://github.com/enamor/ssm" target="_blank" rel="external">https://github.com/enamor/ssm</a></p>
<hr>
<p><strong>小注</strong></p>
<p><strong>IDEA的maven 、gradle项目中，默认源代码目录下的xml等资源文件并不会在编译的时候一块打包进classes文件夹，而是直接舍弃掉。</strong></p>
<p><strong>解决办法：将xml或properties等配置文件放到resource下，并修改获取配置文件的代码，比如注册mapper.xml的位置等</strong></p>
<p><em>如下图：</em><br><img src="/2016/04/24/ssm2/warning.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      Mac本 intellij + Cradle 搭建 ssm项目详细步骤
    
    </summary>
    
      <category term="Java" scheme="http://oxy.pub/categories/Java/"/>
    
    
      <category term="SSM" scheme="http://oxy.pub/tags/SSM/"/>
    
  </entry>
  
  <entry>
    <title>intellij idea 2016 gradle搭建web工程</title>
    <link href="http://oxy.pub/2016/04/22/ssm1/"/>
    <id>http://oxy.pub/2016/04/22/ssm1/</id>
    <published>2016-04-21T16:00:00.000Z</published>
    <updated>2017-04-14T09:59:41.000Z</updated>
    
    <content type="html"><![CDATA[<p><em>前言：以前做java web 开发一直用eclipse 之后用了intellij idea之后就爱不释手。intellij idea搭建SSM框架过程中也颇费了一写功夫、现写篇文章来供大家参考。以求共同进步</em><br><em>操作系统：Mac OS</em></p>
<p><strong>首先用gradle 创建java web 应用、之后再进行SSM的配置</strong></p>
<p><strong>1、如下图，第一步新建gradle工程，file-&gt;new-&gt;project </strong></p>
<p><img src="/2016/04/22/ssm1/step1.png" alt=""></p>
<p><strong>2、勾选如图所示 点击next</strong></p>
<p><img src="/2016/04/22/ssm1/step2.png" alt=""></p>
<p><strong>3、如下图，到了输入groupId和acrtifactId窗口了，GroupID是项目组织唯一的标识符，实际对应JAVA的包的结构，是main目录里java的目录结构。 ArtifactID就是项目的唯一的标识符，实际对应项目的名称，就是项目根目录的名称。填写完成然后 next。 </strong></p>
<p><img src="/2016/04/22/ssm1/step3.png" alt=""></p>
<p><strong>4、如下图详细标注 </strong></p>
<p><img src="/2016/04/22/ssm1/step4.png" alt=""></p>
<p><em>Gradle手动安装方式 通过sdkman</em></p>
<p><em>1.sdkman安装<a href="http:/sdkman.io/install.html" target="_blank" rel="external">http:/sdkman.io/install.html</a></em></p>
<p><em>2.安装cradle <a href="https:/gradle.org/install" target="_blank" rel="external">https:/gradle.org/install</a>  只需执行 $ sdk install gradle 3.5</em></p>
<p><strong>5、如下图 默认不用管直接finish</strong></p>
<p><img src="/2016/04/22/ssm1/step5.png" alt=""></p>
<p><strong>6、web项目创建完成 目录结构如下才为正确创建</strong></p>
<p><img src="/2016/04/22/ssm1/step6.png" alt=""></p>
<p><img src="/2016/04/22/ssm1/step7.png" alt=""></p>
<p><strong>7、如下系列图 部署到tomcat</strong></p>
<p><img src="/2016/04/22/ssm1/step8.png" alt=""></p>
<p><img src="/2016/04/22/ssm1/step9.png" alt=""></p>
<p><img src="/2016/04/22/ssm1/step10.png" alt=""></p>
<p><img src="/2016/04/22/ssm1/step11.png" alt=""></p>
<p><img src="/2016/04/22/ssm1/step12.png" alt=""></p>
<p><img src="/2016/04/22/ssm1/step13.png" alt=""></p>
<p><img src="/2016/04/22/ssm1/step14.png" alt=""></p>
<p><img src="/2016/04/22/ssm1/step15.png" alt=""></p>
<p><em>至此第一步gradle的web项目创建完成</em></p>
]]></content>
    
    <summary type="html">
    
      intellij + Cradle 搭建 web工程
    
    </summary>
    
      <category term="Java" scheme="http://oxy.pub/categories/Java/"/>
    
    
      <category term="SSM" scheme="http://oxy.pub/tags/SSM/"/>
    
  </entry>
  
  <entry>
    <title>iOS音视频学习</title>
    <link href="http://oxy.pub/2016/03/15/iOSVideoBlog/"/>
    <id>http://oxy.pub/2016/03/15/iOSVideoBlog/</id>
    <published>2016-03-15T12:50:41.000Z</published>
    <updated>2018-03-15T13:18:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>音视频学习资料整理—–编码篇（VideoToolBox）</strong></p>
<p>由于项目是直播项目所以闲暇之余需要学习一下音视频编解码相关的知识。</p>
<p>目前iOS音视频编解码主要有两种编解码框架FFmpeg和苹果原生框架VideoToolBox 自iOS8以后开放，FFmpeg是基于CPU进行编解码的，俗称软编码，而VideoToolBox是基于GPU进行编解码的，俗称硬编码。这里我主要研究的是苹果开放的VideoToolBox。<br>以下是对我学习视频编码学习博客做一个整理记录，技巧只有一个就是多看多写，不懂就查：</p>
<ol>
<li><a href="http://blog.csdn.net/leixiaohua1020/article/details/18893769" target="_blank" rel="external">雷神音视频基础入门</a></li>
<li><a href="http://blog.csdn.net/leixiaohua1020/article/details/28114081" target="_blank" rel="external">音频与视频基本原理</a></li>
<li><a href="http://www.cnblogs.com/yjg2014/p/6144977.html" target="_blank" rel="external">H264(NAL简介与I帧判断)</a></li>
<li><a href="http://www.cnblogs.com/yjg2014/p/6127454.html" target="_blank" rel="external">移动直播技术秒开优化经验</a></li>
<li><a href="http://www.cnblogs.com/Amoyios/p/5832953.html" target="_blank" rel="external">如何快速的开发一个完整的iOS直播app(原理篇)</a></li>
</ol>
<p>全都看一遍这样对视频编解码有了一个大概的了解</p>
<p>还有就是对一些关键字的了解<a href="http://blog.csdn.net/xiangjai/article/details/44238005" target="_blank" rel="external"> 码流 / 码率 / 比特率 / 帧速率 / 分辨率 / 高清的区别 </a></p>
<p>掌握了一定的基础知识后 就是理论结合实际啦，代码链接地址<a href="https://github.com/loyinglin/LearnVideoToolBox" target="_blank" rel="external">音视频编解码代码</a></p>
<p>以上都是纯理论只是现在进入真正的代码解析根据博客</p>
<ol>
<li><a href="http://www.jianshu.com/p/37784e363b8a" target="_blank" rel="external">使用VideoToolbox硬编码H.264</a></li>
<li><a href="http://www.tuicool.com/articles/22A7na3" target="_blank" rel="external">VideoToolBox基本函数使用</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;音视频学习资料整理—–编码篇（VideoToolBox）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于项目是直播项目所以闲暇之余需要学习一下音视频编解码相关的知识。&lt;/p&gt;
&lt;p&gt;目前iOS音视频编解码主要有两种编解码框架FFmpeg和苹果原生框架VideoTool
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CocoaPods安装流程</title>
    <link href="http://oxy.pub/2016/03/08/CocoaPods/"/>
    <id>http://oxy.pub/2016/03/08/CocoaPods/</id>
    <published>2016-03-07T16:00:00.000Z</published>
    <updated>2018-04-08T09:13:14.669Z</updated>
    
    <content type="html"><![CDATA[<p><em>2018-04-08 电脑格式化了重装CocoaPods、更新CocoaPods安装步骤，很多次安装pod setup很慢经以下步骤安装成功切安装速度可以</em></p>
<h2 id="如何下载和安装CocoaPods？"><a href="#如何下载和安装CocoaPods？" class="headerlink" title="如何下载和安装CocoaPods？"></a>如何下载和安装CocoaPods？</h2><ul>
<li><h4 id="第一步：安装ruby"><a href="#第一步：安装ruby" class="headerlink" title="第一步：安装ruby"></a>第一步：安装ruby</h4></li>
</ul>
<p>不能一上来就换ruby源，虽然mac自带了ruby，但是版本一般比较低，如果不进行更新会导致版本依赖问题。</p>
<p>这里使用rvm来管理ruby，它允许共存多个ruby。RVM：Ruby Version Manager，Ruby版本管理器，包括Ruby的版本管理和Gem库管理。</p>
<p>通过以下命令来安装rvm：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ curl -L get.rvm.io | bash -s stable  </div><div class="line">$ source ~/.bashrc  </div><div class="line">$ source ~/.bash_profile</div></pre></td></tr></table></figure>
<p>完成后就可以通过以下命令来查看rvm是否安装成功：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rvm -v</div></pre></td></tr></table></figure>
<p>然后就可以用rvm来安装或升级Ruby了，首先查看一下Ruby的版本：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ rvm list known</div><div class="line"># MRI Rubies</div><div class="line">[ruby-]1.8.6[-p420]</div><div class="line">[ruby-]1.8.7[-head] # security released on head</div><div class="line">[ruby-]1.9.1[-p431]</div><div class="line">[ruby-]1.9.2[-p330]</div><div class="line">[ruby-]1.9.3[-p551]</div><div class="line">[ruby-]2.0.0[-p648]</div><div class="line">[ruby-]2.1[.10]</div><div class="line">[ruby-]2.2[.7]</div><div class="line">[ruby-]2.3[.4]</div><div class="line">[ruby-]2.4[.1]</div><div class="line">ruby-head</div></pre></td></tr></table></figure>
<p>可以看到当前的最新版本，然后通过以下命令来安装它：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rvm install 2.4</div></pre></td></tr></table></figure>
<p>安装好后将它设为默认版本：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rvm use 2.4 --default</div></pre></td></tr></table></figure>
<ul>
<li><h4 id="第二步：更改ruby源"><a href="#第二步：更改ruby源" class="headerlink" title="第二步：更改ruby源"></a>第二步：更改ruby源</h4></li>
</ul>
<p>升级好最新的ruby之后就可以更改ruby源了。</p>
<p>首先移除原有的墙外的源：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gem sources --remove https://rubygems.org/</div></pre></td></tr></table></figure>
<p>然后添加目前最新的由ruby官方中国维护的源：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gem sources -a https://gems.ruby-china.org/</div></pre></td></tr></table></figure>
<p>然后确保当前只有这么一个源：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ gem sources -l</div><div class="line">*** CURRENT SOURCES ***  </div><div class="line"></div><div class="line">https://gems.ruby-china.org/</div></pre></td></tr></table></figure>
<p>然后进行ruby的组件更新：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo gem update --system</div></pre></td></tr></table></figure>
<p>以上是多数网上比较权威的步骤，如果你跟着弄下来没有问题就没有问题了。</p>
<p>我跟着做下来的时候在update里一直会报这样一个错误：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ERROR:  While executing gem ... (OpenSSL::SSL::SSLError)  </div><div class="line">hostname &quot;upyun.gems.ruby-china.org&quot; does not match the server certificate</div></pre></td></tr></table></figure>
<p>最后各种尝试。用以下方法成功继续下去，如果你也有同样的情况可以尝试以下。<br>先把刚添加的源去掉，在重新添加一个源，把原地址最后的斜杠去掉：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">gem sources --remove https://gems.ruby-china.org/  </div><div class="line">gem sources -a https://gems.ruby-china.org</div></pre></td></tr></table></figure>
<ul>
<li><h4 id="第三步：安装CocoaPods"><a href="#第三步：安装CocoaPods" class="headerlink" title="第三步：安装CocoaPods"></a>第三步：安装CocoaPods</h4></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo gem install -n /usr/local/bin cocoapods  </div><div class="line">sudo xcode-select --switch /Applications/Xcode.app</div></pre></td></tr></table></figure>
<p>在终端输入如下命令来完成安装：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pod setup</div></pre></td></tr></table></figure>
<p>这一步需要些时间，耐心等就是了。<br>如果安装失败，~/.cocoapods里面是空的，就需要重新setup</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pod repo remove master  </div><div class="line">pod setup</div></pre></td></tr></table></figure>
<p>最后如果出现Setup completed则说明安装完成了。</p>
<ul>
<li><h4 id="第四步：创建Podfile"><a href="#第四步：创建Podfile" class="headerlink" title="第四步：创建Podfile"></a>第四步：创建Podfile</h4></li>
</ul>
<p>1、新建工程，并cd到工程目录<br>2、新建Podfile文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim Podfile</div></pre></td></tr></table></figure>
<p>3、按 i （英文输入状态下）进入编辑状态<br>4、输入相应的第三方和版本，比如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">platform:ios,&apos;8.0&apos;  </div><div class="line">target &apos;你的项目名称&apos; do  </div><div class="line">pod &apos;类库名称&apos;  </div><div class="line">end</div></pre></td></tr></table></figure>
<p>为了确定第三方开源类库是否支持CocoaPods，可以用CocoaPods的搜索功能验证一下。在终端中输入：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ pod search 类库名称</div></pre></td></tr></table></figure>
<p>5、编辑好，先按esc键，再输入:wq（英文输入状态下）保存退出</p>
<p>6、导入第三方库</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pod install</div></pre></td></tr></table></figure>
<p>7、打开后缀为.xcworkspace的工程文件，以后编码也是在此文件中进行操作。</p>
<p>8、在需要使用第三方库的时候，导入头文件即可，比如：#import <afnetworking.h></afnetworking.h></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;2018-04-08 电脑格式化了重装CocoaPods、更新CocoaPods安装步骤，很多次安装pod setup很慢经以下步骤安装成功切安装速度可以&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;如何下载和安装CocoaPods？&quot;&gt;&lt;a href=&quot;#如何下载和安装Co
    
    </summary>
    
      <category term="iOS" scheme="http://oxy.pub/categories/iOS/"/>
    
    
      <category term="Objective-C" scheme="http://oxy.pub/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>安卓学习复习笔记</title>
    <link href="http://oxy.pub/2015/09/08/AndroidTinyPoint/"/>
    <id>http://oxy.pub/2015/09/08/AndroidTinyPoint/</id>
    <published>2015-09-07T16:02:02.000Z</published>
    <updated>2018-03-15T13:31:55.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="进入应用程序主界面"><a href="#进入应用程序主界面" class="headerlink" title="进入应用程序主界面"></a>进入应用程序主界面</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 进入应用程序主界面</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">enterHome</span><span class="params">()</span> </span>&#123;</div><div class="line">	Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>,HomeActivity.class);</div><div class="line">	startActivity(intent);</div><div class="line">	<span class="comment">//在开启一个新的界面后,将导航界面关闭(导航界面只可见一次)</span></div><div class="line">	finish();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="获取版本号版本名称"><a href="#获取版本号版本名称" class="headerlink" title="获取版本号版本名称"></a>获取版本号版本名称</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">	 * 返回版本号</div><div class="line">	 * <span class="doctag">@return</span>	</div><div class="line">	 * 			非0 则代表获取成功</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">getVersionCode</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="comment">//1,包管理者对象packageManager</span></div><div class="line">		PackageManager pm = getPackageManager();</div><div class="line">		<span class="comment">//2,从包的管理者对象中,获取指定包名的基本信息(版本名称,版本号),传0代表获取基本信息</span></div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			PackageInfo packageInfo = pm.getPackageInfo(getPackageName(), <span class="number">0</span>);</div><div class="line">			<span class="comment">//3,获取版本名称</span></div><div class="line">			<span class="keyword">return</span> packageInfo.versionCode;</div><div class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 获取版本名称:清单文件中</div><div class="line">	 * <span class="doctag">@return</span>	应用版本名称	返回null代表异常</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">private</span> String <span class="title">getVersionName</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="comment">//1,包管理者对象packageManager</span></div><div class="line">		PackageManager pm = getPackageManager();</div><div class="line">		<span class="comment">//2,从包的管理者对象中,获取指定包名的基本信息(版本名称,版本号),传0代表获取基本信息</span></div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			PackageInfo packageInfo = pm.getPackageInfo(getPackageName(), <span class="number">0</span>);</div><div class="line">			<span class="comment">//3,获取版本名称</span></div><div class="line">			<span class="keyword">return</span> packageInfo.versionName;</div><div class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<h3 id="系统弹窗的使用"><a href="#系统弹窗的使用" class="headerlink" title="系统弹窗的使用"></a>系统弹窗的使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">	 * 弹出对话框,提示用户更新</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">showUpdateDialog</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="comment">//对话框,是依赖于activity存在的</span></div><div class="line">		Builder builder = <span class="keyword">new</span> AlertDialog.Builder(<span class="keyword">this</span>);</div><div class="line">		<span class="comment">//设置左上角图标</span></div><div class="line">		builder.setIcon(R.drawable.ic_launcher);</div><div class="line">		builder.setTitle(<span class="string">"版本更新"</span>);</div><div class="line">		<span class="comment">//设置描述内容</span></div><div class="line">		builder.setMessage(mVersionDes);</div><div class="line">		</div><div class="line">		<span class="comment">//积极按钮,立即更新</span></div><div class="line">		builder.setPositiveButton(<span class="string">"立即更新"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</div><div class="line">			<span class="meta">@Override</span></div><div class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</div><div class="line">				<span class="comment">//下载apk,apk链接地址,downloadUrl</span></div><div class="line">				downloadApk();</div><div class="line">			&#125;</div><div class="line">		&#125;);</div><div class="line">		</div><div class="line">		builder.setNegativeButton(<span class="string">"稍后再说"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</div><div class="line">			<span class="meta">@Override</span></div><div class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</div><div class="line">				<span class="comment">//取消对话框,进入主界面</span></div><div class="line">				enterHome();</div><div class="line">			&#125;</div><div class="line">		&#125;);</div><div class="line">		</div><div class="line">		<span class="comment">//点击取消事件监听</span></div><div class="line">		builder.setOnCancelListener(<span class="keyword">new</span> DialogInterface.OnCancelListener() &#123;</div><div class="line">			<span class="meta">@Override</span></div><div class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCancel</span><span class="params">(DialogInterface dialog)</span> </span>&#123;</div><div class="line">				<span class="comment">//即使用户点击取消,也需要让其进入应用程序主界面</span></div><div class="line">				enterHome();</div><div class="line">				dialog.dismiss();</div><div class="line">			&#125;</div><div class="line">		&#125;);</div><div class="line">		</div><div class="line">		builder.show();</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<h3 id="判断sd卡是否可用，是否挂载上及SD卡路径"><a href="#判断sd卡是否可用，是否挂载上及SD卡路径" class="headerlink" title="判断sd卡是否可用，是否挂载上及SD卡路径"></a>判断sd卡是否可用，是否挂载上及SD卡路径</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//1,判断sd卡是否可用,是否挂在上</span></div><div class="line">		<span class="keyword">if</span>(Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED))&#123;</div><div class="line">			<span class="comment">//2,获取sd路径</span></div><div class="line">			String path = 			Environment.getExternalStorageDirectory().getAbsolutePath()</div><div class="line">					+File.separator+<span class="string">"xxx.apk"</span>;</div><div class="line">					&#125;</div></pre></td></tr></table></figure>
<h3 id="更新安装apk代码"><a href="#更新安装apk代码" class="headerlink" title="更新安装apk代码"></a>更新安装apk代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 安装对应apk</div><div class="line">	 * <span class="doctag">@param</span> file	安装文件</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">installApk</span><span class="params">(File file)</span> </span>&#123;</div><div class="line">		<span class="comment">//系统应用界面,源码,安装apk入口</span></div><div class="line">		Intent intent = <span class="keyword">new</span> Intent(<span class="string">"android.intent.action.VIEW"</span>);</div><div class="line">		intent.addCategory(<span class="string">"android.intent.category.DEFAULT"</span>);</div><div class="line">		<span class="comment">/*//文件作为数据源</span></div><div class="line">		intent.setData(Uri.fromFile(file));</div><div class="line">		//设置安装的类型</div><div class="line">		intent.setType("application/vnd.android.package-archive");*/</div><div class="line">		intent.setDataAndType(Uri.fromFile(file),<span class="string">"application/vnd.android.package-archive"</span>);</div><div class="line"><span class="comment">//		startActivity(intent);</span></div><div class="line">		startActivityForResult(intent, <span class="number">0</span>);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="comment">//开启一个activity后,返回结果调用的方法 取消安装的回掉</span></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent data)</span> </span>&#123;</div><div class="line">		enterHome();</div><div class="line">		<span class="keyword">super</span>.onActivityResult(requestCode, resultCode, data);</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<h3 id="获取SIM卡序列号"><a href="#获取SIM卡序列号" class="headerlink" title="获取SIM卡序列号"></a>获取SIM卡序列号</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//获取sim卡序列号TelephoneManager</span></div><div class="line">TelephonyManager manager = (TelephonyManager)</div><div class="line">								getSystemService(Context.TELEPHONY_SERVICE);</div><div class="line">		</div><div class="line">String simSerialNumber = manager.getSimSerialNumber();</div></pre></td></tr></table></figure>
<h3 id="获取联系人列表"><a href="#获取联系人列表" class="headerlink" title="获取联系人列表"></a>获取联系人列表</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.util.ArrayList;</div><div class="line"><span class="keyword">import</span> java.util.HashMap;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"><span class="keyword">import</span> android.app.Activity;</div><div class="line"><span class="keyword">import</span> android.content.ContentResolver;</div><div class="line"><span class="keyword">import</span> android.content.Intent;</div><div class="line"><span class="keyword">import</span> android.database.Cursor;</div><div class="line"><span class="keyword">import</span> android.net.Uri;</div><div class="line"><span class="keyword">import</span> android.os.Bundle;</div><div class="line"><span class="keyword">import</span> android.os.Handler;</div><div class="line"><span class="keyword">import</span> android.text.TextUtils;</div><div class="line"><span class="keyword">import</span> android.view.View;</div><div class="line"><span class="keyword">import</span> android.view.ViewGroup;</div><div class="line"><span class="keyword">import</span> android.widget.AdapterView;</div><div class="line"><span class="keyword">import</span> android.widget.AdapterView.OnItemClickListener;</div><div class="line"><span class="keyword">import</span> android.widget.BaseAdapter;</div><div class="line"><span class="keyword">import</span> android.widget.ListView;</div><div class="line"><span class="keyword">import</span> android.widget.TextView;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContactListActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</div><div class="line">	<span class="keyword">protected</span> <span class="keyword">static</span> <span class="keyword">final</span> String tag = <span class="string">"ContactListActivity"</span>;</div><div class="line">	<span class="keyword">private</span> ListView lv_contact;</div><div class="line">	<span class="keyword">private</span> List&lt;HashMap&lt;String,String&gt;&gt; contactList = <span class="keyword">new</span> ArrayList&lt;HashMap&lt;String,String&gt;&gt;();</div><div class="line">	<span class="keyword">private</span> MyAdapter mAdapter;</div><div class="line">	</div><div class="line">	<span class="keyword">private</span> Handler mHandler = <span class="keyword">new</span> Handler()&#123;</div><div class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(android.os.Message msg)</span> </span>&#123;</div><div class="line">			<span class="comment">//8,填充数据适配器</span></div><div class="line">			</div><div class="line">			mAdapter = <span class="keyword">new</span> MyAdapter();</div><div class="line">			lv_contact.setAdapter(mAdapter);</div><div class="line">		&#125;;</div><div class="line">	&#125;;</div><div class="line"></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">		<span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">		setContentView(R.layout.activity_contact_list);</div><div class="line">		</div><div class="line">		initUI();</div><div class="line">		initData();</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="class"><span class="keyword">class</span> <span class="title">MyAdapter</span> <span class="keyword">extends</span> <span class="title">BaseAdapter</span></span>&#123;</div><div class="line">		<span class="meta">@Override</span></div><div class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</div><div class="line">			<span class="keyword">return</span> contactList.size();</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="meta">@Override</span></div><div class="line">		<span class="function"><span class="keyword">public</span> HashMap&lt;String, String&gt; <span class="title">getItem</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">			<span class="keyword">return</span> contactList.get(position);</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="meta">@Override</span></div><div class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getItemId</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">			<span class="keyword">return</span> position;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="meta">@Override</span></div><div class="line">		<span class="function"><span class="keyword">public</span> View <span class="title">getView</span><span class="params">(<span class="keyword">int</span> position, View convertView, ViewGroup parent)</span> </span>&#123;</div><div class="line">			View view = View.inflate(getApplicationContext(), R.layout.listview_contact_item, <span class="keyword">null</span>);</div><div class="line">			</div><div class="line">			TextView tv_name = (TextView) view.findViewById(R.id.tv_name);</div><div class="line">			TextView tv_phone = (TextView) view.findViewById(R.id.tv_phone);</div><div class="line">			</div><div class="line">			tv_name.setText(getItem(position).get(<span class="string">"name"</span>));</div><div class="line">			tv_phone.setText(getItem(position).get(<span class="string">"phone"</span>));</div><div class="line">			</div><div class="line">			<span class="keyword">return</span> view;</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 获取系统联系人数据方法</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initData</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="comment">//因为读取系统联系人,可能是一个耗时操作,放置到子线程中处理</span></div><div class="line">		<span class="keyword">new</span> Thread()&#123;</div><div class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">				<span class="comment">//1,获取内容解析器对象</span></div><div class="line">				ContentResolver contentResolver = getContentResolver();</div><div class="line">				<span class="comment">//2,做查询系统联系人数据库表过程(读取联系人权限)</span></div><div class="line">				Cursor cursor = contentResolver.query(</div><div class="line">						Uri.parse(<span class="string">"content://com.android.contacts/raw_contacts"</span>),</div><div class="line">						<span class="keyword">new</span> String[]&#123;<span class="string">"contact_id"</span>&#125;, </div><div class="line">						<span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</div><div class="line">				contactList.clear();</div><div class="line">				<span class="comment">//3,循环游标,直到没有数据为止</span></div><div class="line">				<span class="keyword">while</span>(cursor.moveToNext())&#123;</div><div class="line">					String id = cursor.getString(<span class="number">0</span>);</div><div class="line"><span class="comment">//					Log.i(tag, "id = "+id);</span></div><div class="line">					<span class="comment">//4,根据用户唯一性id值,查询data表和mimetype表生成的视图,获取data以及mimetype字段</span></div><div class="line">					Cursor indexCursor = contentResolver.query(</div><div class="line">							Uri.parse(<span class="string">"content://com.android.contacts/data"</span>), </div><div class="line">							<span class="keyword">new</span> String[]&#123;<span class="string">"data1"</span>,<span class="string">"mimetype"</span>&#125;, </div><div class="line">							<span class="string">"raw_contact_id = ?"</span>, <span class="keyword">new</span> String[]&#123;id&#125;, <span class="keyword">null</span>);</div><div class="line">					<span class="comment">//5,循环获取每一个联系人的电话号码以及姓名,数据类型</span></div><div class="line">					HashMap&lt;String, String&gt; hashMap = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</div><div class="line">					<span class="keyword">while</span>(indexCursor.moveToNext())&#123;</div><div class="line">						String data = indexCursor.getString(<span class="number">0</span>);	</div><div class="line">						String type = indexCursor.getString(<span class="number">1</span>);</div><div class="line">						</div><div class="line">						<span class="comment">//6,区分类型去给hashMap填充数据</span></div><div class="line">						<span class="keyword">if</span>(type.equals(<span class="string">"vnd.android.cursor.item/phone_v2"</span>))&#123;</div><div class="line">							<span class="comment">//数据非空判断</span></div><div class="line">							<span class="keyword">if</span>(!TextUtils.isEmpty(data))&#123;</div><div class="line">								hashMap.put(<span class="string">"phone"</span>, data);</div><div class="line">							&#125;</div><div class="line">						&#125;<span class="keyword">else</span> <span class="keyword">if</span>(type.equals(<span class="string">"vnd.android.cursor.item/name"</span>))&#123;</div><div class="line">							<span class="keyword">if</span>(!TextUtils.isEmpty(data))&#123;</div><div class="line">								hashMap.put(<span class="string">"name"</span>, data);</div><div class="line">							&#125;</div><div class="line">						&#125;</div><div class="line">					&#125;</div><div class="line">					indexCursor.close();</div><div class="line">					contactList.add(hashMap);</div><div class="line">				&#125;</div><div class="line">				cursor.close();</div><div class="line">				<span class="comment">//7,消息机制,发送一个空的消息,告知主线程可以去使用子线程已经填充好的数据集合</span></div><div class="line">				mHandler.sendEmptyMessage(<span class="number">0</span>);</div><div class="line">			&#125;;</div><div class="line">		&#125;.start();</div><div class="line">		</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initUI</span><span class="params">()</span> </span>&#123;</div><div class="line">		lv_contact = (ListView) findViewById(R.id.lv_contact);</div><div class="line">		lv_contact.setOnItemClickListener(<span class="keyword">new</span> OnItemClickListener() &#123;</div><div class="line">			<span class="meta">@Override</span></div><div class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(AdapterView&lt;?&gt; parent, View view,<span class="keyword">int</span> position, <span class="keyword">long</span> id)</span> </span>&#123;</div><div class="line">				<span class="comment">//1,获取点中条目的索引指向集合中的对象</span></div><div class="line">				<span class="keyword">if</span>(mAdapter!=<span class="keyword">null</span>)&#123;</div><div class="line">					HashMap&lt;String, String&gt; hashMap = mAdapter.getItem(position);</div><div class="line">					<span class="comment">//2,获取当前条目指向集合对应的电话号码</span></div><div class="line">					String phone = hashMap.get(<span class="string">"phone"</span>);</div><div class="line">					<span class="comment">//3,此电话号码需要给第三个导航界面使用</span></div><div class="line">					</div><div class="line">					<span class="comment">//4,在结束此界面回到前一个导航界面的时候,需要将数据返回过去</span></div><div class="line">					Intent intent = <span class="keyword">new</span> Intent();</div><div class="line">					intent.putExtra(<span class="string">"phone"</span>, phone);</div><div class="line">					setResult(<span class="number">0</span>, intent);</div><div class="line">					</div><div class="line">					finish();</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="移入移出动画"><a href="#移入移出动画" class="headerlink" title="移入移出动画"></a>移入移出动画</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">//动画XML创建 res/anim/xxx.xml</div><div class="line">//next_in_anim.xml</div><div class="line">&lt;translate</div><div class="line">    xmlns:android="http://schemas.android.com/apk/res/android"</div><div class="line">    android:fromXDelta="100%p"</div><div class="line">    android:toXDelta="0"</div><div class="line">    android:duration="500"&gt;</div><div class="line">&lt;/translate&gt;</div><div class="line"></div><div class="line">//next_out_anim.xml</div><div class="line">&lt;translate</div><div class="line">    xmlns:android="http://schemas.android.com/apk/res/android"</div><div class="line">    android:fromXDelta="0"</div><div class="line">    android:toXDelta="-100%p"</div><div class="line">    android:duration="500"&gt;</div><div class="line">&lt;/translate&gt;</div><div class="line"></div><div class="line">//pre_in_anim.xml</div><div class="line">&lt;!-- -100%p 负一屏幕的宽度大小值 --&gt;</div><div class="line">&lt;translate</div><div class="line">    xmlns:android="http://schemas.android.com/apk/res/android"</div><div class="line">    android:fromXDelta="-100%p"</div><div class="line">    android:toXDelta="0"</div><div class="line">    android:duration="500"&gt;</div><div class="line">&lt;/translate&gt;</div><div class="line"></div><div class="line">//pre_out_anim.xml</div><div class="line">&lt;translate</div><div class="line">    xmlns:android="http://schemas.android.com/apk/res/android"</div><div class="line">    android:fromXDelta="0"</div><div class="line">    android:toXDelta="100%p"</div><div class="line">    android:duration="500"&gt;</div><div class="line">&lt;/translate&gt;</div><div class="line"></div><div class="line">overridePendingTransition(R.anim.next_in_anim, R.anim.next_out_anim);</div></pre></td></tr></table></figure>
<h3 id="图片选择器（普通、高亮）"><a href="#图片选择器（普通、高亮）" class="headerlink" title="图片选择器（普通、高亮）"></a>图片选择器（普通、高亮）</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">//selector xml 创建res/drawable/selector_xxx_xxx.xml</div><div class="line">&lt;selector xmlns:android="http://schemas.android.com/apk/res/android" &gt;</div><div class="line">    &lt;!-- 选中深绿色图片 --&gt;</div><div class="line">	&lt;item android:state_pressed="true"	android:drawable="@drawable/function_greenbutton_pressed"/&gt;</div><div class="line">	&lt;!-- 浅绿色的图片 --&gt;</div><div class="line">	&lt;item android:drawable="@drawable/function_greenbutton_normal"/&gt;</div><div class="line">&lt;/selector&gt;</div></pre></td></tr></table></figure>
<h3 id="自定义控件属性的添加"><a href="#自定义控件属性的添加" class="headerlink" title="自定义控件属性的添加"></a>自定义控件属性的添加</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">//attrs.xml创建  res/values/attrs.xml</div><div class="line">&lt;resources&gt;</div><div class="line">    &lt;declare-styleable name="com.xxx.view.SettingItemView"&gt;</div><div class="line">		&lt;attr name="destitle" format="string"/&gt;</div><div class="line">		&lt;attr name="desoff" format="string"/&gt;</div><div class="line">		&lt;attr name="deson" format="string"/&gt;</div><div class="line">	&lt;/declare-styleable&gt;</div><div class="line">&lt;/resources&gt;</div></pre></td></tr></table></figure>
<h3 id="获取可用空间的大小"><a href="#获取可用空间的大小" class="headerlink" title="获取可用空间的大小"></a>获取可用空间的大小</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//1,获取磁盘(内存,区分于手机运行内存)可用大小,磁盘路径</span></div><div class="line">		String path = Environment.getDataDirectory().getAbsolutePath();</div><div class="line">		<span class="comment">//2,获取sd卡可用大小,sd卡路径</span></div><div class="line">		String sdPath = Environment.getExternalStorageDirectory().getAbsolutePath();</div><div class="line">		<span class="comment">//3,获取以上两个路径下文件夹的可用大小</span></div><div class="line">		String memoryAvailSpace = Formatter.formatFileSize(<span class="keyword">this</span>, getAvailSpace(path));</div><div class="line">		String sdMemoryAvailSpace = Formatter.formatFileSize(<span class="keyword">this</span>,getAvailSpace(sdPath));</div><div class="line"></div><div class="line"><span class="comment">//int代表多少个G	</span></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 返回值结果单位为byte = 8bit,最大结果为2147483647 bytes</div><div class="line">	 * <span class="doctag">@param</span> path</div><div class="line">	 * <span class="doctag">@return</span>	返回指定路径可用区域的byte类型值</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">long</span> <span class="title">getAvailSpace</span><span class="params">(String path)</span> </span>&#123;</div><div class="line">		<span class="comment">//获取可用磁盘大小类</span></div><div class="line">		StatFs statFs = <span class="keyword">new</span> StatFs(path);</div><div class="line">		<span class="comment">//获取可用区块的个数</span></div><div class="line">		<span class="keyword">long</span> count = statFs.getAvailableBlocks();</div><div class="line">		<span class="comment">//获取区块的大小</span></div><div class="line">		<span class="keyword">long</span> size = statFs.getBlockSize();</div><div class="line">		<span class="comment">//区块大小*可用区块个数 == 可用空间大小</span></div><div class="line">		<span class="keyword">return</span> count*size;</div><div class="line"><span class="comment">//		Integer.MAX_VALUE	代表int类型数据的最大大小</span></div><div class="line"><span class="comment">//		0x7FFFFFFF</span></div><div class="line"><span class="comment">//		</span></div><div class="line"><span class="comment">//		2147483647bytes/1024 =  2096128 KB</span></div><div class="line"><span class="comment">//		2096128KB/1024 = 2047	MB</span></div><div class="line"><span class="comment">//		2047MB = 2G</span></div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<h3 id="卸载应用"><a href="#卸载应用" class="headerlink" title="卸载应用"></a>卸载应用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="string">"android.intent.action.DELETE"</span>);</div><div class="line">intent.addCategory(<span class="string">"android.intent.category.DEFAULT"</span>);</div><div class="line">intent.setData(Uri.parse(<span class="string">"package:"</span>+mAppInfo.getPackageName()));</div><div class="line">startActivity(intent);</div></pre></td></tr></table></figure>
<h3 id="开启应用"><a href="#开启应用" class="headerlink" title="开启应用"></a>开启应用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//通过桌面去启动指定包名应用</span></div><div class="line">PackageManager pm = getPackageManager();</div><div class="line"><span class="comment">//通过Launch开启制定包名的意图,去开启应用</span></div><div class="line">Intent launchIntentForPackage = pm.getLaunchIntentForPackage(mAppInfo.getPackageName());</div><div class="line"><span class="keyword">if</span>(launchIntentForPackage!=<span class="keyword">null</span>)&#123;</div><div class="line">    startActivity(launchIntentForPackage);</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">    ToastUtil.show(getApplicationContext(), <span class="string">"此应用不能被开启"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="发送短信"><a href="#发送短信" class="headerlink" title="发送短信"></a>发送短信</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_SEND);</div><div class="line">intent.putExtra(Intent.EXTRA_TEXT,<span class="string">"分享一个应用,应用名称为"</span>+mAppInfo.getName());</div><div class="line">intent.setType(<span class="string">"text/plain"</span>);</div><div class="line">startActivity(intent);</div></pre></td></tr></table></figure>
<h3 id="动画集合（缩放，透明）"><a href="#动画集合（缩放，透明）" class="headerlink" title="动画集合（缩放，透明）"></a>动画集合（缩放，透明）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//透明动画(透明---&gt;不透明)</span></div><div class="line">AlphaAnimation alphaAnimation = <span class="keyword">new</span> AlphaAnimation(<span class="number">0</span>, <span class="number">1</span>);</div><div class="line">alphaAnimation.setDuration(<span class="number">1000</span>);</div><div class="line">alphaAnimation.setFillAfter(<span class="keyword">true</span>);</div><div class="line"></div><div class="line"><span class="comment">//缩放动画</span></div><div class="line">ScaleAnimation scaleAnimation = <span class="keyword">new</span> ScaleAnimation(</div><div class="line">      <span class="number">0</span>, <span class="number">1</span>, </div><div class="line">      <span class="number">0</span>, <span class="number">1</span>, </div><div class="line">      Animation.RELATIVE_TO_SELF, <span class="number">0.5f</span>, </div><div class="line">      Animation.RELATIVE_TO_SELF, <span class="number">0.5f</span>);</div><div class="line">scaleAnimation.setDuration(<span class="number">1000</span>);</div><div class="line">alphaAnimation.setFillAfter(<span class="keyword">true</span>);</div><div class="line"><span class="comment">//动画集合Set</span></div><div class="line">AnimationSet animationSet = <span class="keyword">new</span> AnimationSet(<span class="keyword">true</span>);</div><div class="line"><span class="comment">//添加两个动画</span></div><div class="line">animationSet.addAnimation(alphaAnimation);</div><div class="line">animationSet.addAnimation(scaleAnimation);</div><div class="line"></div><div class="line"><span class="comment">//view执行动画</span></div><div class="line">view.startAnimation(animationSet);</div></pre></td></tr></table></figure>
<h3 id="ListView的使用（复用）"><a href="#ListView的使用（复用）" class="headerlink" title="ListView的使用（复用）"></a>ListView的使用（复用）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//1,复用convertView</span></div><div class="line"><span class="comment">//2,对findViewById次数的优化,使用ViewHolder</span></div><div class="line"><span class="comment">//3,将ViewHolder定义成静态,不会去创建多个对象</span></div><div class="line"><span class="comment">//4,listView如果有多个条目的时候,可以做分页算法,每一次加载20条,逆序返回</span></div><div class="line"></div><div class="line"><span class="keyword">private</span> Handler mHandler = <span class="keyword">new</span> Handler()&#123;</div><div class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(android.os.Message msg)</span> </span>&#123;</div><div class="line">			mAdapter = <span class="keyword">new</span> MyAdapter();</div><div class="line">			lv_app_list.setAdapter(mAdapter);</div><div class="line">		&#125;;</div><div class="line">	&#125;;</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyAdapter</span> <span class="keyword">extends</span> <span class="title">BaseAdapter</span></span>&#123;</div><div class="line">   </div><div class="line">   <span class="comment">//获取数据适配器中条目类型的总数,修改成两种(纯文本,图片+文字)</span></div><div class="line">   <span class="meta">@Override</span></div><div class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getViewTypeCount</span><span class="params">()</span> </span>&#123;</div><div class="line">      <span class="keyword">return</span> <span class="keyword">super</span>.getViewTypeCount()+<span class="number">1</span>;</div><div class="line">   &#125;</div><div class="line">   </div><div class="line">   <span class="comment">//指定索引指向的条目类型,条目类型状态码指定(0(复用系统),1)</span></div><div class="line">   <span class="meta">@Override</span></div><div class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemViewType</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">      <span class="keyword">if</span>(position == <span class="number">0</span> || position == mCustomerList.size()+<span class="number">1</span>)&#123;</div><div class="line">         <span class="comment">//返回0,代表纯文本条目的状态码</span></div><div class="line">         <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">      &#125;<span class="keyword">else</span>&#123;</div><div class="line">         <span class="comment">//返回1,代表图片+文本条目状态码</span></div><div class="line">         <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">      &#125;</div><div class="line">   &#125;</div><div class="line">   </div><div class="line">   <span class="comment">//listView中添加两个描述条目</span></div><div class="line">   <span class="meta">@Override</span></div><div class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</div><div class="line">      <span class="keyword">return</span> mCustomerList.size()+mSystemList.size()+<span class="number">2</span>;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   <span class="meta">@Override</span></div><div class="line">   <span class="function"><span class="keyword">public</span> AppInfo <span class="title">getItem</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">      <span class="keyword">if</span>(position == <span class="number">0</span> || position == mCustomerList.size()+<span class="number">1</span>)&#123;</div><div class="line">         <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">      &#125;<span class="keyword">else</span>&#123;</div><div class="line">         <span class="keyword">if</span>(position&lt;mCustomerList.size()+<span class="number">1</span>)&#123;</div><div class="line">            <span class="keyword">return</span> mCustomerList.get(position-<span class="number">1</span>);</div><div class="line">         &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="comment">//返回系统应用对应条目的对象</span></div><div class="line">            <span class="keyword">return</span> mSystemList.get(position - mCustomerList.size()-<span class="number">2</span>);</div><div class="line">         &#125;</div><div class="line">      &#125;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   <span class="meta">@Override</span></div><div class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getItemId</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">      <span class="keyword">return</span> position;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   <span class="meta">@Override</span></div><div class="line">   <span class="function"><span class="keyword">public</span> View <span class="title">getView</span><span class="params">(<span class="keyword">int</span> position, View convertView, ViewGroup parent)</span> </span>&#123;</div><div class="line">      <span class="keyword">int</span> type = getItemViewType(position);</div><div class="line">      </div><div class="line">      <span class="keyword">if</span>(type == <span class="number">0</span>)&#123;</div><div class="line">         <span class="comment">//展示灰色纯文本条目</span></div><div class="line">         ViewTitleHolder holder = <span class="keyword">null</span>;</div><div class="line">         <span class="keyword">if</span>(convertView == <span class="keyword">null</span>)&#123;</div><div class="line">            convertView = View.inflate(getApplicationContext(), R.layout.listview_app_item_title, <span class="keyword">null</span>);</div><div class="line">            holder = <span class="keyword">new</span> ViewTitleHolder();</div><div class="line">            holder.tv_title = (TextView)convertView.findViewById(R.id.tv_title);</div><div class="line">            convertView.setTag(holder);</div><div class="line">         &#125;<span class="keyword">else</span>&#123;</div><div class="line">            holder = (ViewTitleHolder) convertView.getTag();</div><div class="line">         &#125;</div><div class="line">         <span class="keyword">if</span>(position == <span class="number">0</span>)&#123;</div><div class="line">            holder.tv_title.setText(<span class="string">"用户应用("</span>+mCustomerList.size()+<span class="string">")"</span>);</div><div class="line">         &#125;<span class="keyword">else</span>&#123;</div><div class="line">            holder.tv_title.setText(<span class="string">"系统应用("</span>+mSystemList.size()+<span class="string">")"</span>);</div><div class="line">         &#125;</div><div class="line">         <span class="keyword">return</span> convertView;</div><div class="line">      &#125;<span class="keyword">else</span>&#123;</div><div class="line">         <span class="comment">//展示图片+文字条目</span></div><div class="line">         ViewHolder holder = <span class="keyword">null</span>;</div><div class="line">         <span class="keyword">if</span>(convertView == <span class="keyword">null</span>)&#123;</div><div class="line">            convertView = View.inflate(getApplicationContext(), R.layout.listview_app_item, <span class="keyword">null</span>);</div><div class="line">            holder = <span class="keyword">new</span> ViewHolder();</div><div class="line">            holder.iv_icon = (ImageView)convertView.findViewById(R.id.iv_icon);</div><div class="line">            holder.tv_name = (TextView)convertView.findViewById(R.id.tv_name);</div><div class="line">            holder.tv_path = (TextView) convertView.findViewById(R.id.tv_path);</div><div class="line">            convertView.setTag(holder);</div><div class="line">         &#125;<span class="keyword">else</span>&#123;</div><div class="line">            holder = (ViewHolder) convertView.getTag();</div><div class="line">         &#125;</div><div class="line">         holder.iv_icon.setBackgroundDrawable(getItem(position).icon);</div><div class="line">         holder.tv_name.setText(getItem(position).name);</div><div class="line">         <span class="keyword">if</span>(getItem(position).isSdCard)&#123;</div><div class="line">            holder.tv_path.setText(<span class="string">"sd卡应用"</span>);</div><div class="line">         &#125;<span class="keyword">else</span>&#123;</div><div class="line">            holder.tv_path.setText(<span class="string">"手机应用"</span>);</div><div class="line">         &#125;</div><div class="line">         <span class="keyword">return</span> convertView;</div><div class="line">      &#125;</div><div class="line">   &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span></span>&#123;</div><div class="line">   ImageView iv_icon;</div><div class="line">   TextView tv_name;</div><div class="line">   TextView tv_path;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewTitleHolder</span></span>&#123;</div><div class="line">   TextView tv_title;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initList</span><span class="params">()</span> </span>&#123;</div><div class="line">		lv_app_list = (ListView) findViewById(R.id.lv_app_list);</div><div class="line">		tv_des = (TextView) findViewById(R.id.tv_des);</div><div class="line"></div><div class="line">  		<span class="comment">//悬浮设置</span></div><div class="line">  		lv_app_list.setOnScrollListener(<span class="keyword">new</span> OnScrollListener() &#123;</div><div class="line">			<span class="meta">@Override</span></div><div class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onScrollStateChanged</span><span class="params">(AbsListView view, <span class="keyword">int</span> scrollState)</span> </span>&#123;</div><div class="line">				</div><div class="line">			&#125;</div><div class="line">			</div><div class="line">			<span class="meta">@Override</span></div><div class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onScroll</span><span class="params">(AbsListView view, <span class="keyword">int</span> firstVisibleItem,</span></span></div><div class="line">					<span class="keyword">int</span> visibleItemCount, <span class="keyword">int</span> totalItemCount) &#123;</div><div class="line">				<span class="comment">//滚动过程中调用方法</span></div><div class="line">				<span class="comment">//AbsListView中view就是listView对象</span></div><div class="line">				<span class="comment">//firstVisibleItem第一个可见条目索引值</span></div><div class="line">				<span class="comment">//visibleItemCount当前一个屏幕的可见条目数</span></div><div class="line">				<span class="comment">//总共条目总数</span></div><div class="line">				<span class="keyword">if</span>(mCustomerList!=<span class="keyword">null</span> &amp;&amp; mSystemList!=<span class="keyword">null</span>)&#123;</div><div class="line">					<span class="keyword">if</span>(firstVisibleItem&gt;=mCustomerList.size()+<span class="number">1</span>)&#123;</div><div class="line">						<span class="comment">//滚动到了系统条目</span></div><div class="line">						tv_des.setText(<span class="string">"系统应用("</span>+mSystemList.size()+<span class="string">")"</span>);</div><div class="line">					&#125;<span class="keyword">else</span>&#123;</div><div class="line">						<span class="comment">//滚动到了用户应用条目</span></div><div class="line">						tv_des.setText(<span class="string">"用户应用("</span>+mCustomerList.size()+<span class="string">")"</span>);</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">				</div><div class="line">			&#125;</div><div class="line">		&#125;);</div><div class="line">		</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>###拖拽跟随移动的处理</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//监听某一个控件的拖拽过程(按下(1),移动(多次),抬起(1))</span></div><div class="line">iv_drag.setOnTouchListener(<span class="keyword">new</span> OnTouchListener() &#123;</div><div class="line">   <span class="keyword">private</span> <span class="keyword">int</span> startX;</div><div class="line">   <span class="keyword">private</span> <span class="keyword">int</span> startY;</div><div class="line">   <span class="comment">//对不同的事件做不同的逻辑处理</span></div><div class="line">   <span class="meta">@Override</span></div><div class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouch</span><span class="params">(View v, MotionEvent event)</span> </span>&#123;</div><div class="line">      <span class="keyword">switch</span> (event.getAction()) &#123;</div><div class="line">      <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</div><div class="line">         startX = (<span class="keyword">int</span>) event.getRawX();</div><div class="line">         startY = (<span class="keyword">int</span>) event.getRawY();</div><div class="line">         <span class="keyword">break</span>;</div><div class="line">      <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</div><div class="line">         <span class="keyword">int</span> moveX = (<span class="keyword">int</span>) event.getRawX();</div><div class="line">         <span class="keyword">int</span> moveY = (<span class="keyword">int</span>) event.getRawY();</div><div class="line">         </div><div class="line">         <span class="keyword">int</span> disX = moveX-startX;</div><div class="line">         <span class="keyword">int</span> disY = moveY-startY;</div><div class="line">         </div><div class="line">         <span class="comment">//1,当前控件所在屏幕的(左,上)角的位置</span></div><div class="line">         <span class="keyword">int</span> left = iv_drag.getLeft()+disX;<span class="comment">//左侧坐标</span></div><div class="line">         <span class="keyword">int</span> top = iv_drag.getTop()+disY;<span class="comment">//顶端坐标</span></div><div class="line">         <span class="keyword">int</span> right = iv_drag.getRight()+disX;<span class="comment">//右侧坐标</span></div><div class="line">         <span class="keyword">int</span> bottom = iv_drag.getBottom()+disY;<span class="comment">//底部坐标</span></div><div class="line">         </div><div class="line">         <span class="comment">//容错处理(iv_drag不能拖拽出手机屏幕)</span></div><div class="line">         <span class="comment">//左边缘不能超出屏幕</span></div><div class="line">         <span class="keyword">if</span>(left&lt;<span class="number">0</span>)&#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">         &#125;</div><div class="line">         </div><div class="line">         <span class="comment">//右边边缘不能超出屏幕</span></div><div class="line">         <span class="keyword">if</span>(right&gt;mScreenWidth)&#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">         &#125;</div><div class="line">         </div><div class="line">         <span class="comment">//上边缘不能超出屏幕可现实区域</span></div><div class="line">         <span class="keyword">if</span>(top&lt;<span class="number">0</span>)&#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">         &#125;</div><div class="line">         </div><div class="line">         <span class="comment">//下边缘(屏幕的高度-22 = 底边缘显示最大值)</span></div><div class="line">         <span class="keyword">if</span>(bottom&gt;mScreenHeight - <span class="number">22</span>)&#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">         &#125;</div><div class="line">         </div><div class="line">         <span class="keyword">if</span>(top&gt;mScreenHeight/<span class="number">2</span>)&#123;</div><div class="line">            bt_bottom.setVisibility(View.INVISIBLE);</div><div class="line">            bt_top.setVisibility(View.VISIBLE);</div><div class="line">         &#125;<span class="keyword">else</span>&#123;</div><div class="line">            bt_bottom.setVisibility(View.VISIBLE);</div><div class="line">            bt_top.setVisibility(View.INVISIBLE);</div><div class="line">         &#125;</div><div class="line">         </div><div class="line">         <span class="comment">//2,告知移动的控件,按计算出来的坐标去做展示</span></div><div class="line">         iv_drag.layout(left, top, right, bottom);</div><div class="line">         </div><div class="line">         <span class="comment">//3,重置一次其实坐标</span></div><div class="line">         startX = (<span class="keyword">int</span>) event.getRawX();</div><div class="line">         startY = (<span class="keyword">int</span>) event.getRawY();</div><div class="line">         </div><div class="line">         <span class="keyword">break</span>;</div><div class="line">      <span class="keyword">case</span> MotionEvent.ACTION_UP:</div><div class="line">         <span class="comment">//4,存储移动到的位置</span></div><div class="line">         SpUtil.putInt(getApplicationContext(), ConstantValue.LOCATION_X, iv_drag.getLeft());</div><div class="line">         SpUtil.putInt(getApplicationContext(), ConstantValue.LOCATION_Y, iv_drag.getTop());</div><div class="line">         <span class="keyword">break</span>;</div><div class="line">      &#125;</div><div class="line">      <span class="comment">//在当前的情况下返回false不响应事件,返回true才会响应事件</span></div><div class="line">      </div><div class="line">      <span class="comment">//既要响应点击事件,又要响应拖拽过程,则此返回值结果需要修改为false</span></div><div class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">   &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="代码更改布局位置处理"><a href="#代码更改布局位置处理" class="headerlink" title="代码更改布局位置处理"></a>代码更改布局位置处理</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//获取屏幕宽高</span></div><div class="line">mWM = (WindowManager) getSystemService(WINDOW_SERVICE);</div><div class="line">mScreenHeight = mWM.getDefaultDisplay().getHeight();</div><div class="line">mScreenWidth = mWM.getDefaultDisplay().getWidth();</div><div class="line"></div><div class="line"><span class="comment">//左上角坐标作用在iv_drag上</span></div><div class="line"><span class="comment">//iv_drag在相对布局中,所以其所在位置的规则需要由相对布局提供</span></div><div class="line"></div><div class="line"><span class="comment">//指定宽高都为WRAP_CONTENT</span></div><div class="line">LayoutParams layoutParams = <span class="keyword">new</span> RelativeLayout.LayoutParams(</div><div class="line">      RelativeLayout.LayoutParams.WRAP_CONTENT, </div><div class="line">      RelativeLayout.LayoutParams.WRAP_CONTENT);</div><div class="line"><span class="comment">//将左上角的坐标作用在iv_drag对应规则参数上</span></div><div class="line">layoutParams.leftMargin = locationX;</div><div class="line">layoutParams.topMargin = locationY;</div><div class="line"><span class="comment">//将以上规则作用在iv_drag上</span></div><div class="line">iv_drag.setLayoutParams(layoutParams);</div></pre></td></tr></table></figure>
<h3 id="获取系统联系人"><a href="#获取系统联系人" class="headerlink" title="获取系统联系人"></a>获取系统联系人</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line">    <span class="comment">/**</span></div><div class="line">    * 获取系统联系人数据方法</div><div class="line">    */</div><div class="line">   <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initData</span><span class="params">()</span> </span>&#123;</div><div class="line">      <span class="comment">//因为读取系统联系人,可能是一个耗时操作,放置到子线程中处理</span></div><div class="line">      <span class="keyword">new</span> Thread()&#123;</div><div class="line">         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">            <span class="comment">//1,获取内容解析器对象</span></div><div class="line">            ContentResolver contentResolver = getContentResolver();</div><div class="line">            <span class="comment">//2,做查询系统联系人数据库表过程(读取联系人权限)</span></div><div class="line">            Cursor cursor = contentResolver.query(</div><div class="line">                  Uri.parse(<span class="string">"content://com.android.contacts/raw_contacts"</span>),</div><div class="line">                  <span class="keyword">new</span> String[]&#123;<span class="string">"contact_id"</span>&#125;, </div><div class="line">                  <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</div><div class="line">            contactList.clear();</div><div class="line">            <span class="comment">//3,循环游标,直到没有数据为止</span></div><div class="line">            <span class="keyword">while</span>(cursor.moveToNext())&#123;</div><div class="line">               String id = cursor.getString(<span class="number">0</span>);</div><div class="line"><span class="comment">//             Log.i(tag, "id = "+id);</span></div><div class="line">               <span class="comment">//4,根据用户唯一性id值,查询data表和mimetype表生成的视图,获取data以及mimetype字段</span></div><div class="line">               Cursor indexCursor = contentResolver.query(</div><div class="line">                     Uri.parse(<span class="string">"content://com.android.contacts/data"</span>), </div><div class="line">                     <span class="keyword">new</span> String[]&#123;<span class="string">"data1"</span>,<span class="string">"mimetype"</span>&#125;, </div><div class="line">                     <span class="string">"raw_contact_id = ?"</span>, <span class="keyword">new</span> String[]&#123;id&#125;, <span class="keyword">null</span>);</div><div class="line">               <span class="comment">//5,循环获取每一个联系人的电话号码以及姓名,数据类型</span></div><div class="line">               HashMap&lt;String, String&gt; hashMap = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</div><div class="line">               <span class="keyword">while</span>(indexCursor.moveToNext())&#123;</div><div class="line">                  String data = indexCursor.getString(<span class="number">0</span>);    </div><div class="line">                  String type = indexCursor.getString(<span class="number">1</span>);</div><div class="line">                  </div><div class="line">                  <span class="comment">//6,区分类型去给hashMap填充数据</span></div><div class="line">                  <span class="keyword">if</span>(type.equals(<span class="string">"vnd.android.cursor.item/phone_v2"</span>))&#123;</div><div class="line">                     <span class="comment">//数据非空判断</span></div><div class="line">                     <span class="keyword">if</span>(!TextUtils.isEmpty(data))&#123;</div><div class="line">                        hashMap.put(<span class="string">"phone"</span>, data);</div><div class="line">                     &#125;</div><div class="line">                  &#125;<span class="keyword">else</span> <span class="keyword">if</span>(type.equals(<span class="string">"vnd.android.cursor.item/name"</span>))&#123;</div><div class="line">                     <span class="keyword">if</span>(!TextUtils.isEmpty(data))&#123;</div><div class="line">                        hashMap.put(<span class="string">"name"</span>, data);</div><div class="line">                     &#125;</div><div class="line">                  &#125;</div><div class="line">               &#125;</div><div class="line">               indexCursor.close();</div><div class="line">               contactList.add(hashMap);</div><div class="line">            &#125;</div><div class="line">            cursor.close();</div><div class="line">            <span class="comment">//7,消息机制,发送一个空的消息,告知主线程可以去使用子线程已经填充好的数据集合</span></div><div class="line">            mHandler.sendEmptyMessage(<span class="number">0</span>);</div><div class="line">         &#125;;</div><div class="line">      &#125;.start();</div><div class="line">      </div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<h3 id="基类手势控制-上一页下一页"><a href="#基类手势控制-上一页下一页" class="headerlink" title="基类手势控制 上一页下一页"></a>基类手势控制 上一页下一页</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">   <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">   </div><div class="line">   <span class="comment">//2,创建手势管理的对象,用作管理在onTouchEvent(event)传递过来的手势动作</span></div><div class="line">   gestureDetector = <span class="keyword">new</span> GestureDetector(<span class="keyword">this</span>, <span class="keyword">new</span> GestureDetector.SimpleOnGestureListener()&#123;</div><div class="line">      <span class="meta">@Override</span></div><div class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onFling</span><span class="params">(MotionEvent e1, MotionEvent e2,</span></span></div><div class="line">            <span class="keyword">float</span> velocityX, <span class="keyword">float</span> velocityY) &#123;</div><div class="line">         <span class="comment">//监听手势的移动</span></div><div class="line">         <span class="keyword">if</span>(e1.getX()-e2.getX()&gt;<span class="number">0</span>)&#123;</div><div class="line">            <span class="comment">//调用子类的下一页方法,抽象方法</span></div><div class="line">            </div><div class="line">            <span class="comment">//在第一个界面上的时候,跳转到第二个界面</span></div><div class="line">            <span class="comment">//在第二个界面上的时候,跳转到第三个界面</span></div><div class="line">            <span class="comment">//.......</span></div><div class="line">            showNextPage();</div><div class="line">         &#125;</div><div class="line">         </div><div class="line">         <span class="keyword">if</span>(e1.getX()-e2.getX()&lt;<span class="number">0</span>)&#123;</div><div class="line">            <span class="comment">//调用子类的上一页方法</span></div><div class="line">            <span class="comment">//在第一个界面上的时候,无响应,空实现</span></div><div class="line">            <span class="comment">//在第二个界面上的时候,跳转到第1个界面</span></div><div class="line">            <span class="comment">//.......</span></div><div class="line">            showPrePage();</div><div class="line">         &#125;</div><div class="line">         </div><div class="line">         <span class="keyword">return</span> <span class="keyword">super</span>.onFling(e1, e2, velocityX, velocityY);</div><div class="line">      &#125;</div><div class="line">   &#125;);</div><div class="line">&#125;</div><div class="line"> </div><div class="line"><span class="comment">//1,监听屏幕上响应的事件类型(按下(1次),移动(多次),抬起(1次))</span></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</div><div class="line">   <span class="comment">//3,通过手势处理类,接收多种类型的事件,用作处理</span></div><div class="line">   gestureDetector.onTouchEvent(event);</div><div class="line">   <span class="keyword">return</span> <span class="keyword">super</span>.onTouchEvent(event);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//下一页的抽象方法,由子类决定具体跳转到那个界面</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">showNextPage</span><span class="params">()</span></span>;</div><div class="line"><span class="comment">//上一页的抽象方法,由子类决定具体跳转到那个界面</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">showPrePage</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//点击下一页按钮的时候,根据子类的showNextPage方法做相应跳转</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">nextPage</span><span class="params">(View view)</span></span>&#123;</div><div class="line">   showNextPage();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//点击上一页按钮的时候,根据子类的showPrePage方法做相应跳转</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">prePage</span><span class="params">(View view)</span></span>&#123;</div><div class="line">   showPrePage();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="手机震动"><a href="#手机震动" class="headerlink" title="手机震动"></a>手机震动</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//手机震动效果(vibrator 震动)</span></div><div class="line">Vibrator vibrator = (Vibrator) getSystemService(Context.VIBRATOR_SERVICE);</div><div class="line"><span class="comment">//震动毫秒值</span></div><div class="line">vibrator.vibrate(<span class="number">2000</span>);</div><div class="line"><span class="comment">//规律震动(震动规则(不震动时间,震动时间,不震动时间,震动时间.......),重复次数)</span></div><div class="line">vibrator.vibrate(<span class="keyword">new</span> <span class="keyword">long</span>[]&#123;<span class="number">2000</span>,<span class="number">5000</span>,<span class="number">2000</span>,<span class="number">5000</span>&#125;, -<span class="number">1</span>);</div></pre></td></tr></table></figure>
<h3 id="播放声音"><a href="#播放声音" class="headerlink" title="播放声音"></a>播放声音</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//7,播放音乐(准备音乐,MediaPlayer)</span></div><div class="line">MediaPlayer mediaPlayer = MediaPlayer.create(context, R.raw.ylzs);</div><div class="line">mediaPlayer.setLooping(<span class="keyword">true</span>);</div><div class="line">mediaPlayer.start();</div></pre></td></tr></table></figure>
<h3 id="文本抖动效果"><a href="#文本抖动效果" class="headerlink" title="文本抖动效果"></a>文本抖动效果</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//res/anim/shake.xml</span></div><div class="line">&lt;translate xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span> </div><div class="line">    android:fromXDelta=<span class="string">"0"</span> </div><div class="line">    android:toXDelta=<span class="string">"10"</span> </div><div class="line">    android:duration=<span class="string">"1000"</span> </div><div class="line">    android:interpolator=<span class="string">"@anim/cycle_7"</span> /&gt;</div><div class="line">     </div><div class="line"><span class="comment">//cycle_7.xml</span></div><div class="line">&lt;cycleInterpolator xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span> android:cycles=<span class="string">"7"</span> /&gt;</div><div class="line">   </div><div class="line">Animation shake = AnimationUtils.loadAnimation(</div><div class="line">        getApplicationContext(), R.anim.shake);</div><div class="line">et_phone.startAnimation(shake);</div></pre></td></tr></table></figure>
<h3 id="获取手机所有应用相关信息"><a href="#获取手机所有应用相关信息" class="headerlink" title="获取手机所有应用相关信息"></a>获取手机所有应用相关信息</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 返回当前手机所有的应用的相关信息(名称,包名,图标,(手机内存,sd卡),(系统,用户));</div><div class="line"> * <span class="doctag">@param</span> ctx  获取包管理者的上下文环境</div><div class="line"> * <span class="doctag">@return</span> 包含手机安装应用相关信息的集合</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;AppInfo&gt; <span class="title">getAppInfoList</span><span class="params">(Context ctx)</span></span>&#123;</div><div class="line">   <span class="comment">//1,包的管理者对象</span></div><div class="line">   PackageManager pm = ctx.getPackageManager();</div><div class="line">   <span class="comment">//2,获取安装在手机上应用相关信息的集合</span></div><div class="line">   List&lt;PackageInfo&gt; packageInfoList = pm.getInstalledPackages(<span class="number">0</span>);</div><div class="line">   List&lt;AppInfo&gt; appInfoList = <span class="keyword">new</span> ArrayList&lt;AppInfo&gt;();</div><div class="line">   <span class="comment">//3,循环遍历应用信息的集合</span></div><div class="line">   <span class="keyword">for</span> (PackageInfo packageInfo : packageInfoList) &#123;</div><div class="line">      AppInfo appInfo = <span class="keyword">new</span> AppInfo();</div><div class="line">      <span class="comment">//4,获取应用的包名</span></div><div class="line">      appInfo.packageName = packageInfo.packageName;</div><div class="line">      <span class="comment">//5,应用名称</span></div><div class="line">      ApplicationInfo applicationInfo = packageInfo.applicationInfo;</div><div class="line">      appInfo.name = applicationInfo.loadLabel(pm).toString();</div><div class="line">      <span class="comment">//6,获取图标</span></div><div class="line">      appInfo.icon = applicationInfo.loadIcon(pm);</div><div class="line">      <span class="comment">//7,判断是否为系统应用(每一个手机上的应用对应的flag都不一致)</span></div><div class="line">      <span class="keyword">if</span>((applicationInfo.flags &amp; ApplicationInfo.FLAG_SYSTEM)==ApplicationInfo.FLAG_SYSTEM)&#123;</div><div class="line">         <span class="comment">//系统应用</span></div><div class="line">         appInfo.isSystem = <span class="keyword">true</span>;</div><div class="line">      &#125;<span class="keyword">else</span>&#123;</div><div class="line">         <span class="comment">//非系统应用</span></div><div class="line">         appInfo.isSystem = <span class="keyword">false</span>;</div><div class="line">      &#125;</div><div class="line">      <span class="comment">//8,是否为sd卡中安装应用</span></div><div class="line">      <span class="keyword">if</span>((applicationInfo.flags &amp; ApplicationInfo.FLAG_EXTERNAL_STORAGE)==ApplicationInfo.FLAG_EXTERNAL_STORAGE)&#123;</div><div class="line">         <span class="comment">//系统应用</span></div><div class="line">         appInfo.isSdCard = <span class="keyword">true</span>;</div><div class="line">      &#125;<span class="keyword">else</span>&#123;</div><div class="line">         <span class="comment">//非系统应用</span></div><div class="line">         appInfo.isSdCard = <span class="keyword">false</span>;</div><div class="line">      &#125;</div><div class="line">      appInfoList.add(appInfo);</div><div class="line">   &#125;</div><div class="line">   <span class="keyword">return</span> appInfoList;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="九宫格GridView"><a href="#九宫格GridView" class="headerlink" title="九宫格GridView"></a>九宫格GridView</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//GridView</span></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initData</span><span class="params">()</span> </span>&#123;</div><div class="line">   <span class="comment">//准备数据(文字(9组),图片(9张))</span></div><div class="line">   mTitleStrs = <span class="keyword">new</span> String[]&#123;</div><div class="line">         <span class="string">"手机防盗"</span>,<span class="string">"通信卫士"</span>,<span class="string">"软件管理"</span>,<span class="string">"进程管理"</span>,<span class="string">"流量统计"</span>,<span class="string">"手机杀毒"</span>,<span class="string">"缓存清理"</span>,<span class="string">"高级工具"</span>,<span class="string">"设置中心"</span></div><div class="line">   &#125;;</div><div class="line">   </div><div class="line">   mDrawableIds = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;</div><div class="line">         R.drawable.home_safe,R.drawable.home_callmsgsafe,</div><div class="line">         R.drawable.home_apps,R.drawable.home_taskmanager,</div><div class="line">         R.drawable.home_netmanager,R.drawable.home_trojan,</div><div class="line">         R.drawable.home_sysoptimize,R.drawable.home_tools,R.drawable.home_settings</div><div class="line">   &#125;;</div><div class="line">   <span class="comment">//九宫格控件设置数据适配器(等同ListView数据适配器)</span></div><div class="line">   gv_home.setAdapter(<span class="keyword">new</span> MyAdapter());</div><div class="line">   <span class="comment">//注册九宫格单个条目点击事件</span></div><div class="line">   gv_home.setOnItemClickListener(<span class="keyword">new</span> OnItemClickListener() &#123;</div><div class="line">      <span class="comment">//点中列表条目索引position</span></div><div class="line">      <span class="meta">@Override</span></div><div class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(AdapterView&lt;?&gt; parent, View view,<span class="keyword">int</span> position, <span class="keyword">long</span> id)</span> </span>&#123;</div><div class="line">         </div><div class="line">      &#125;</div><div class="line">   &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="获取空间内存（运存）大小"><a href="#获取空间内存（运存）大小" class="headerlink" title="获取空间内存（运存）大小"></a>获取空间内存（运存）大小</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@param</span> ctx  </div><div class="line"> * <span class="doctag">@return</span> 返回可用的内存数    bytes</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">getAvailSpace</span><span class="params">(Context ctx)</span></span>&#123;</div><div class="line">   <span class="comment">//1,获取activityManager</span></div><div class="line">   ActivityManager am = (ActivityManager) ctx.getSystemService(Context.ACTIVITY_SERVICE);</div><div class="line">   <span class="comment">//2,构建存储可用内存的对象</span></div><div class="line">   MemoryInfo memoryInfo = <span class="keyword">new</span> MemoryInfo();</div><div class="line">   <span class="comment">//3,给memoryInfo对象赋(可用内存)值</span></div><div class="line">   am.getMemoryInfo(memoryInfo);</div><div class="line">   <span class="comment">//4,获取memoryInfo中相应可用内存大小</span></div><div class="line">   <span class="keyword">return</span> memoryInfo.availMem;</div><div class="line">&#125;   </div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@param</span> ctx  </div><div class="line"> * <span class="doctag">@return</span> 返回总的内存数 单位为bytes 返回0说明异常</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">getTotalSpace</span><span class="params">(Context ctx)</span></span>&#123;</div><div class="line">   <span class="comment">/*//1,获取activityManager</span></div><div class="line">   ActivityManager am = (ActivityManager) ctx.getSystemService(Context.ACTIVITY_SERVICE);</div><div class="line">   //2,构建存储可用内存的对象</div><div class="line">   MemoryInfo memoryInfo = new MemoryInfo();</div><div class="line">   //3,给memoryInfo对象赋(可用内存)值</div><div class="line">   am.getMemoryInfo(memoryInfo);</div><div class="line">   //4,获取memoryInfo中相应可用内存大小</div><div class="line">   return memoryInfo.totalMem;*/</div><div class="line">   </div><div class="line">   <span class="comment">//内存大小写入文件中,读取proc/meminfo文件,读取第一行,获取数字字符,转换成bytes返回</span></div><div class="line">   FileReader fileReader  = <span class="keyword">null</span>;</div><div class="line">   BufferedReader bufferedReader = <span class="keyword">null</span>;</div><div class="line">   <span class="keyword">try</span> &#123;</div><div class="line">      fileReader= <span class="keyword">new</span> FileReader(<span class="string">"proc/meminfo"</span>);</div><div class="line">      bufferedReader = <span class="keyword">new</span> BufferedReader(fileReader);</div><div class="line">      String lineOne = bufferedReader.readLine();</div><div class="line">      <span class="comment">//将字符串转换成字符的数组</span></div><div class="line">      <span class="keyword">char</span>[] charArray = lineOne.toCharArray();</div><div class="line">      <span class="comment">//循环遍历每一个字符,如果此字符的ASCII码在0到9的区域内,说明此字符有效</span></div><div class="line">      StringBuffer stringBuffer = <span class="keyword">new</span> StringBuffer();</div><div class="line">      <span class="keyword">for</span> (<span class="keyword">char</span> c : charArray) &#123;</div><div class="line">         <span class="keyword">if</span>(c&gt;=<span class="string">'0'</span> &amp;&amp; c&lt;=<span class="string">'9'</span>)&#123;</div><div class="line">            stringBuffer.append(c);</div><div class="line">         &#125;</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">return</span> Long.parseLong(stringBuffer.toString())*<span class="number">1024</span>;</div><div class="line">   &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">      e.printStackTrace();</div><div class="line">   &#125;<span class="keyword">finally</span>&#123;</div><div class="line">      <span class="keyword">try</span> &#123;</div><div class="line">         <span class="keyword">if</span>(fileReader!=<span class="keyword">null</span> &amp;&amp; bufferedReader!=<span class="keyword">null</span>)&#123;</div><div class="line">            fileReader.close();</div><div class="line">            bufferedReader.close();</div><div class="line">         &#125;</div><div class="line">      &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">         e.printStackTrace();</div><div class="line">      &#125;</div><div class="line">   &#125;</div><div class="line">   <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="判断服务是否开启"><a href="#判断服务是否开启" class="headerlink" title="判断服务是否开启"></a>判断服务是否开启</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@param</span> ctx  上下文环境</div><div class="line"> * <span class="doctag">@param</span> serviceName 判断是否正在运行的服务</div><div class="line"> * <span class="doctag">@return</span> true 运行 false 没有运行</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isRunning</span><span class="params">(Context ctx,String serviceName)</span></span>&#123;</div><div class="line">   <span class="comment">//1,获取activityMananger管理者对象,可以去获取当前手机正在运行的所有服务</span></div><div class="line">   ActivityManager mAM = (ActivityManager) ctx.getSystemService(Context.ACTIVITY_SERVICE);</div><div class="line">   <span class="comment">//2,获取手机中正在运行的服务集合(多少个服务)</span></div><div class="line">   List&lt;RunningServiceInfo&gt; runningServices = mAM.getRunningServices(<span class="number">1000</span>);</div><div class="line">   <span class="comment">//3,遍历获取的所有的服务集合,拿到每一个服务的类的名称,和传递进来的类的名称作比对,如果一致,说明服务正在运行</span></div><div class="line">   <span class="keyword">for</span> (RunningServiceInfo runningServiceInfo : runningServices) &#123;</div><div class="line">      Log.i(tag, <span class="string">"runningServiceInfo.service.getClassName() = "</span>+runningServiceInfo.service.getClassName());</div><div class="line">      <span class="comment">//4,获取每一个真正运行服务的名称</span></div><div class="line">      <span class="keyword">if</span>(serviceName.equals(runningServiceInfo.service.getClassName()))&#123;</div><div class="line">         <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">      &#125;</div><div class="line">   &#125;</div><div class="line">   <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="多击事件"><a href="#多击事件" class="headerlink" title="多击事件"></a>多击事件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">long</span>[] mHits = <span class="keyword">new</span> <span class="keyword">long</span>[<span class="number">3</span>];<span class="comment">//数组长度为点击次数</span></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 多次点击</div><div class="line"> * </div><div class="line"> * <span class="doctag">@param</span> view</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">	<span class="comment">//		src 源数组</span></div><div class="line">	<span class="comment">//		srcPos 开始拷贝的位置</span></div><div class="line">	<span class="comment">//		dst 目标数组</span></div><div class="line">	<span class="comment">//		dstPos 目标数组的起始拷贝位置</span></div><div class="line">	<span class="comment">//		length 拷贝的数组长度</span></div><div class="line">	System.arraycopy(mHits, <span class="number">1</span>, mHits, <span class="number">0</span>, mHits.length - <span class="number">1</span>);<span class="comment">//拷贝数组</span></div><div class="line">	mHits[mHits.length - <span class="number">1</span>] = SystemClock.uptimeMillis();</div><div class="line">	<span class="keyword">if</span> (mHits[<span class="number">0</span>] &gt;= (SystemClock.uptimeMillis() - <span class="number">500</span>)) &#123;</div><div class="line">		System.out.println(<span class="string">"是男人!!!"</span>);</div><div class="line">		mHits = <span class="keyword">new</span> <span class="keyword">long</span>[<span class="number">3</span>];</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      安卓学习记录以供后期复习
    
    </summary>
    
      <category term="Android" scheme="http://oxy.pub/categories/Android/"/>
    
    
      <category term="Android" scheme="http://oxy.pub/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>iOS小知识点集锦</title>
    <link href="http://oxy.pub/2015/06/01/iOSTinyPoint/"/>
    <id>http://oxy.pub/2015/06/01/iOSTinyPoint/</id>
    <published>2015-06-01T07:28:57.000Z</published>
    <updated>2018-03-15T13:25:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p>
<p>###iOS10 AVPlayer有时播放失败的处理</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">//如果你的视频使用的是HLS(m3u8)协议的，是不会由于升级ios10出现这个播放问题的。 如果不是基于HLS协议的，解决方法如下</div><div class="line">if([[UIDevice currentDevice] systemVersion].intValue&gt;=10)&#123;</div><div class="line">//      增加下面这行可以解决iOS10兼容性问题了</div><div class="line">      self.player.automaticallyWaitsToMinimizeStalling = NO;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/*ios10中AVPlayer增加了多个属性，其中有几个需要注意一下</div><div class="line">	1、timeControlStatus</div><div class="line">	2、automaticallyWaitsToMinimizeStalling</div><div class="line">	</div><div class="line">	正是第二个属性的默认值导致了不使用HLS的方式（比如使用localhttpserver间接实现在线播放、或者下载到本地再播放的方式）就会播放不了的问题。</div><div class="line">*/</div><div class="line"></div><div class="line">//在之前的版本中，我们通过rate来判断avplayer是否处于播放中</div><div class="line">- (Boolean)isPlaying &#123;</div><div class="line">    return self.player.rate==1;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//在iOS10中，AVPlayer多了一个timeControlStatus，我们就应该这么实现</div><div class="line">- (Boolean)isPlaying &#123;</div><div class="line">    if([[UIDevice currentDevice] systemVersion].intValue&gt;=10)&#123;</div><div class="line">        return self.player.timeControlStatus == AVPlayerTimeControlStatusPlaying;</div><div class="line">    &#125;else&#123;</div><div class="line">        return self.player.rate==1;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="字符串去除空格"><a href="#字符串去除空格" class="headerlink" title="字符串去除空格"></a>字符串去除空格</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">//去除首尾空格：  </div><div class="line">NSString * content = [textView.text stringByTrimmingCharactersInSet:</div><div class="line">                      [NSCharacterSet whitespaceCharacterSet]];</div><div class="line"></div><div class="line">//去除首尾空格和换行：</div><div class="line">NSString *content = [textView.text stringByTrimmingCharactersInSet:</div><div class="line">                     [NSCharacterSet whitespaceAndNewlineCharacterSet]];</div></pre></td></tr></table></figure>
<h3 id="控制器禁用左侧手势返回功能"><a href="#控制器禁用左侧手势返回功能" class="headerlink" title="控制器禁用左侧手势返回功能"></a>控制器禁用左侧手势返回功能</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">//关闭手势返回</div><div class="line">- (void)viewDidAppear:(BOOL)animated  </div><div class="line">&#123;  </div><div class="line">    [super viewDidAppear:animated];  </div><div class="line">    // 禁用返回手势  </div><div class="line">    if ([self.navigationController respondsToSelector:@selector(interactivePopGestureRecognizer)]) &#123;  </div><div class="line">        self.navigationController.interactivePopGestureRecognizer.enabled = NO;  </div><div class="line">    &#125;  </div><div class="line">&#125;  </div><div class="line">//重新开启手势返回</div><div class="line">- (void)viewWillDisappear:(BOOL)animated  </div><div class="line">&#123;  </div><div class="line">    [super viewWillDisappear:animated];  </div><div class="line">    // 开启返回手势  </div><div class="line">    if ([self.navigationController respondsToSelector:@selector(interactivePopGestureRecognizer)]) &#123;  </div><div class="line">        self.navigationController.interactivePopGestureRecognizer.enabled = YES;  </div><div class="line">    &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="UIView-视频全屏-masonry-约束设置"><a href="#UIView-视频全屏-masonry-约束设置" class="headerlink" title="UIView 视频全屏 masonry 约束设置"></a>UIView 视频全屏 masonry 约束设置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">UIView *player = [[UIView alloc] init];</div><div class="line">[self.view addSubview:player];</div><div class="line"></div><div class="line">CGFloat wid = [UIScreen mainScreen].bounds.size.width;</div><div class="line">CGFloat hei = [UIScreen mainScreen].bounds.size.height;</div><div class="line">CGFloat rate = wid &lt; hei ? (wid/hei) : (hei/wid);</div><div class="line">[player mas_makeConstraints:^(MASConstraintMaker *make) &#123;</div><div class="line">    make.top.equalTo(self.view);</div><div class="line">    make.left.right.equalTo(self.view);</div><div class="line">    make.height.mas_equalTo(player.mas_width).multipliedBy(rate);</div><div class="line">&#125;];</div></pre></td></tr></table></figure>
<h3 id="Masonry实现动画更新约束"><a href="#Masonry实现动画更新约束" class="headerlink" title="Masonry实现动画更新约束"></a>Masonry实现动画更新约束</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">// 告诉self.view约束需要更新</div><div class="line">[self.view setNeedsUpdateConstraints];</div><div class="line">// 调用此方法告诉self.view检测是否需要更新约束，若需要则更新，下面添加动画效果才起作用</div><div class="line">[self.view updateConstraintsIfNeeded];</div><div class="line"></div><div class="line">[UIView animateWithDuration:0.3 animations:^&#123;</div><div class="line">  [self.view layoutIfNeeded];</div><div class="line">&#125;];</div></pre></td></tr></table></figure>
<h3 id="UISlider更改进度条的粗细-、修改圆点位置"><a href="#UISlider更改进度条的粗细-、修改圆点位置" class="headerlink" title="UISlider更改进度条的粗细 、修改圆点位置"></a>UISlider更改进度条的粗细 、修改圆点位置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">//需要重写UISlider的trackRectForBounds 方法</div><div class="line">- (CGRect)trackRectForBounds:(CGRect)bounds &#123;</div><div class="line">    bounds.origin.y = bounds.size.height / 2.0 - 2;</div><div class="line">    bounds.size.height = 4;</div><div class="line">    return bounds;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//小圆点Rect修改</div><div class="line">- (CGRect)thumbRectForBounds:(CGRect)bounds trackRect:(CGRect)rect value:(float)value</div><div class="line">&#123;</div><div class="line">    rect.origin.x = rect.origin.x - 3 ;</div><div class="line">    rect.size.width = rect.size.width +6;</div><div class="line">    return [super thumbRectForBounds:bounds trackRect:rect value:value];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="iOS获取View所在的控制器、导航控制器"><a href="#iOS获取View所在的控制器、导航控制器" class="headerlink" title="iOS获取View所在的控制器、导航控制器"></a>iOS获取View所在的控制器、导航控制器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">//获取控制器</div><div class="line">- (UIViewController*)viewController &#123;</div><div class="line">    for (UIView* next = [self superview]; next; next = next.superview) &#123;</div><div class="line">        UIResponder* nextResponder = [next nextResponder];</div><div class="line">        if ([nextResponder isKindOfClass:[UINavigationController class]]) &#123;</div><div class="line">            return (UIViewController*)nextResponder;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return nil;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//获取导航控制器</div><div class="line">- (UINavigationController*)navigationController &#123;</div><div class="line">    for (UIView* next = [self superview]; next; next = next.superview) &#123;</div><div class="line">        UIResponder* nextResponder = [next nextResponder];</div><div class="line">        if ([nextResponder isKindOfClass:[UINavigationController class]]) &#123;</div><div class="line">            return (UINavigationController*)nextResponder;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return nil;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="UILabel-设置行间距"><a href="#UILabel-设置行间距" class="headerlink" title="UILabel 设置行间距"></a>UILabel 设置行间距</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">- (NSAttributedString *)getParagraphText:(NSString*)text LineSpacing:(CGFloat)spacing&#123;</div><div class="line">    if(text == nil || text.length == 0)&#123;</div><div class="line">        return nil;</div><div class="line">    &#125;</div><div class="line">    NSMutableAttributedString *attributedString = [[NSMutableAttributedString alloc]initWithString:text];;</div><div class="line">    NSMutableParagraphStyle *paragraphStyle = [[NSMutableParagraphStyle alloc]init];</div><div class="line">    [paragraphStyle setLineSpacing:spacing];</div><div class="line">    [attributedString addAttribute:NSParagraphStyleAttributeName value:paragraphStyle range:NSMakeRange(0, text.length)];</div><div class="line">    return attributedString;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//使用</div><div class="line">self.titleLabel.attributedText = [self getParagraphText:infModel.title LineSpacing:7];</div></pre></td></tr></table></figure>
<h3 id="UIView获取父控制器／父导航控制器"><a href="#UIView获取父控制器／父导航控制器" class="headerlink" title="UIView获取父控制器／父导航控制器"></a>UIView获取父控制器／父导航控制器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">//创建UIView的分类</div><div class="line">//获取当前控制器</div><div class="line">- (UIViewController *)getCurrentVC &#123;</div><div class="line">    UIResponder *next = self.nextResponder;</div><div class="line">    do &#123;</div><div class="line">        //判断响应者是否为视图控制器</div><div class="line">        if ([next isKindOfClass:[UIViewController class]]) &#123;</div><div class="line">            return (UIViewController *)next;</div><div class="line">        &#125;</div><div class="line">        next = next.nextResponder;</div><div class="line">        </div><div class="line">    &#125; while (next != nil);</div><div class="line">    return nil;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//获取导航控制器</div><div class="line">- (UINavigationController *)getCurrentNavVC &#123;</div><div class="line">    UIResponder *next = self.nextResponder;</div><div class="line">    do &#123;</div><div class="line">        //判断响应者是否为视图控制器</div><div class="line">        if ([next isKindOfClass:[UINavigationController class]]) &#123;</div><div class="line">            return (UINavigationController *)next;</div><div class="line">        &#125;</div><div class="line">        next = next.nextResponder;</div><div class="line">        </div><div class="line">    &#125; while (next != nil);</div><div class="line">    return nil;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="拉伸图片"><a href="#拉伸图片" class="headerlink" title="拉伸图片"></a>拉伸图片</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">//拉伸图片</div><div class="line">+ (UIImage *)resizedImageWithName:(NSString *)name</div><div class="line">&#123;</div><div class="line">    return [self resizedImageWithName:name left:0.5 top:0.5];</div><div class="line">&#125;</div><div class="line"></div><div class="line">+ (UIImage *)resizedImageWithName:(NSString *)name left:(CGFloat)left top:(CGFloat)top</div><div class="line">&#123;</div><div class="line">    UIImage *image = [UIImage imageNamed:name];</div><div class="line">    return [image stretchableImageWithLeftCapWidth:image.size.width * left topCapHeight:image.size.height * top];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="判断当前控制器是push-还是present"><a href="#判断当前控制器是push-还是present" class="headerlink" title="判断当前控制器是push 还是present"></a>判断当前控制器是push 还是present</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">//方法一</div><div class="line">- (IBAction)dismiss:(id)sender &#123;</div><div class="line">    if (self.presentingViewController) &#123;</div><div class="line">        [self dismissViewControllerAnimated:YES completion:nil];</div><div class="line">    &#125; else &#123;</div><div class="line">        [self.navigationController popViewControllerAnimated:YES];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//方法二</div><div class="line">- (IBAction)dismiss:(id)sender &#123;</div><div class="line">    if (self.navigationController.topViewController == self) &#123;</div><div class="line">        [self.navigationController popViewControllerAnimated:YES];</div><div class="line">    &#125; else &#123;</div><div class="line">        [self dismissViewControllerAnimated:YES completion:nil];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="导航栏全透明-、去除黑线"><a href="#导航栏全透明-、去除黑线" class="headerlink" title="导航栏全透明 、去除黑线"></a>导航栏全透明 、去除黑线</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[self.navigationController.navigationBar setBackgroundImage:[UIImage new]</div><div class="line">                                                  forBarMetrics:UIBarMetricsDefault];</div><div class="line">    [self.navigationController.navigationBar setShadowImage:[UIImage new]];</div></pre></td></tr></table></figure>
<h3 id="获取文字字符数（汉字两个其他1个）"><a href="#获取文字字符数（汉字两个其他1个）" class="headerlink" title="获取文字字符数（汉字两个其他1个）"></a>获取文字字符数（汉字两个其他1个）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">//返回字符个数 汉字两个字符</div><div class="line">- (NSInteger)getStrLength:(NSString*)strtemp &#123;</div><div class="line">    NSStringEncoding enc = CFStringConvertEncodingToNSStringEncoding(kCFStringEncodingGB_18030_2000);</div><div class="line">    NSData* da = [strtemp dataUsingEncoding:enc];</div><div class="line">    return [da length];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="判断iPhone尺寸-iPad尺寸是跟随iPhone的"><a href="#判断iPhone尺寸-iPad尺寸是跟随iPhone的" class="headerlink" title="判断iPhone尺寸(iPad尺寸是跟随iPhone的)"></a>判断iPhone尺寸(iPad尺寸是跟随iPhone的)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">//这么比较好（可以避免考虑iPad的问题）</div><div class="line">#define iPhone4Size (CGSizeEqualToSize(CGSizeMake(320, 480), [[UIScreen mainScreen] bounds].size))</div><div class="line">#define iPhone5Size (CGSizeEqualToSize(CGSizeMake(320, 568), [[UIScreen mainScreen] bounds].size))</div><div class="line">#define iPhone6Size (CGSizeEqualToSize(CGSizeMake(375, 667), [[UIScreen mainScreen] bounds].size))</div><div class="line">#define iPhone6PlusSize (CGSizeEqualToSize(CGSizeMake(621,1104), [[UIScreen mainScreen] bounds].size))</div></pre></td></tr></table></figure>
<h3 id="直播聊天列表的实现"><a href="#直播聊天列表的实现" class="headerlink" title="直播聊天列表的实现"></a>直播聊天列表的实现</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">- (void) addMessageWithStr:(NSString *)str &#123;</div><div class="line">    __weak typeof(self) weakSelf = self;</div><div class="line">    if ([NSThread isMainThread]) &#123;</div><div class="line">        dispatch_async(dispatch_get_global_queue(0, 0), ^&#123;</div><div class="line">            [weakSelf insertChatView:str];</div><div class="line">        &#125;);</div><div class="line">    &#125; else &#123;</div><div class="line">        [self insertChatView:str];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (void)insertChatView:(NSString *)str &#123;</div><div class="line">    dispatch_sync(dispatch_get_main_queue(), ^&#123;</div><div class="line">        if (self.array.count &gt; 50) &#123;</div><div class="line">            </div><div class="line">            for (int i = 0; i&lt; 20; i++) &#123;</div><div class="line">                [_array removeObjectAtIndex:i];</div><div class="line">                NSIndexPath *indexPath = [NSIndexPath indexPathForRow:i inSection:0];</div><div class="line">                [self.tableView beginUpdates];</div><div class="line">                [_tableView deleteRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationNone];</div><div class="line">                [self.tableView endUpdates];</div><div class="line">                </div><div class="line">                NSInteger row = self.array.count&gt;0 ? (self.array.count -1): 0 ;</div><div class="line">                NSIndexPath *inde = [NSIndexPath indexPathForRow:row inSection:0];</div><div class="line">                [self.tableView scrollToRowAtIndexPath:[NSIndexPath indexPathForRow:inde.row inSection:0]</div><div class="line">                                      atScrollPosition:UITableViewScrollPositionTop</div><div class="line">                                              animated:NO];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        [_array addObject:str];</div><div class="line">        NSInteger row = self.array.count&gt;0 ? (self.array.count -1): 0 ;</div><div class="line">        NSIndexPath *indexPath = [NSIndexPath indexPathForRow:row inSection:0];</div><div class="line">        [self.tableView beginUpdates];</div><div class="line">        [self.tableView insertRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationNone];</div><div class="line">        [self.tableView endUpdates];</div><div class="line">        if (indexPath.row &gt;0) &#123;</div><div class="line">            [self.tableView scrollToRowAtIndexPath:[NSIndexPath indexPathForRow:indexPath.row inSection:0]</div><div class="line">                                  atScrollPosition:UITableViewScrollPositionBottom</div><div class="line">                                          animated:YES];</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">    &#125;);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      自己平时的小知识点笔记
    
    </summary>
    
      <category term="iOS" scheme="http://oxy.pub/categories/iOS/"/>
    
    
      <category term="Objective-C" scheme="http://oxy.pub/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>iOS block、NSString之copy 探究</title>
    <link href="http://oxy.pub/2014/06/13/oc-block/"/>
    <id>http://oxy.pub/2014/06/13/oc-block/</id>
    <published>2014-06-13T03:13:19.000Z</published>
    <updated>2018-03-15T13:29:41.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="block为啥用copy修饰"><a href="#block为啥用copy修饰" class="headerlink" title="block为啥用copy修饰"></a>block为啥用copy修饰</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">  通俗理解, MRC下不使用copy修饰, block存储在栈区, 作用域结束, block这个局部变量被销毁, 而一个 strong指针还指向了这个被回收的地址.所以使用copy,把block拷贝到堆区, 并且指向堆区的block. 但是在ARC下无论copy,还是stong都无所谓, 因为系统已经在创建block的时候, 已经拷贝到堆区了.</div><div class="line"></div><div class="line">   在 Objective-C 语言中，一共有 3 种类型的 block：</div><div class="line">  __NSGlobalBlock__ 全局的静态 block，不会访问外部局部变量。</div><div class="line">  __NSStackBlock__  保存在栈中的 block，访问外部局部变量，当函数返回时会被销毁。</div><div class="line">  __NSMallocBlock__ 保存在堆中的 block，当引用计数为 0 时会被销毁。</div><div class="line"></div><div class="line">*/</div><div class="line"></div><div class="line">@interface Test ()  </div><div class="line">@property (nonatomic, copy) void(^block)(); </div><div class="line">@end  </div><div class="line">  </div><div class="line">@implementation Test  </div><div class="line">  </div><div class="line">- (void)viewDidLoad &#123;  </div><div class="line">    [super viewDidLoad]; </div><div class="line">  </div><div class="line">    //1 __NSGlobalBlock__  全局block   存储在代码区（存储方法或者函数）  </div><div class="line">    void(^block1)() = ^() &#123;  </div><div class="line">        NSLog(@&quot;一探究竟block1&quot;);  </div><div class="line">    &#125;;  </div><div class="line">    NSLog(@&quot;block1 %@&quot;,block1);  </div><div class="line">      </div><div class="line">      </div><div class="line">    //2 __NSStackBlock__  栈block  存储在栈区  </div><div class="line">    //block内部访问外部变量   </div><div class="line">    int n = 5;  </div><div class="line">    void(^block2)() = ^() &#123;  </div><div class="line">        NSLog(@&quot;一探究竟block2 %d&quot;, n);  </div><div class="line">    &#125;;  </div><div class="line">    NSLog(@&quot;block2 %@&quot;, block2);  </div><div class="line">      </div><div class="line">      </div><div class="line">      </div><div class="line">      </div><div class="line">     //3 __NSMallocBlock__  堆block 存储在堆区  对栈block做一次copy操作  </div><div class="line">    void(^block3)() = ^() &#123;  </div><div class="line">        NSLog(@&quot;一探究竟 block3%d&quot;, n);  </div><div class="line">    &#125;;  </div><div class="line">    NSLog(@&quot;block3 %@&quot;, [block3 copy]);  </div><div class="line">      </div><div class="line">      </div><div class="line">      </div><div class="line">    /* </div><div class="line">       由以上可以看出当block没有访问外界的变量时,是存储在代码区,  </div><div class="line">       当block访问外界变量时时存储在栈区, </div><div class="line">       而此时的block出了作用域就会被释放 </div><div class="line">       以下示例: </div><div class="line">     */  </div><div class="line">    [self test];</div><div class="line">  	//当此代码结束时,test函数中的所有存储在栈区的变量都会被系统释放, 因此如果属性的block是用assign修饰时  当再次访问时就会出现野指针访问. </div><div class="line">  </div><div class="line">    self.block();  </div><div class="line">  </div><div class="line">      </div><div class="line">&#125;  </div><div class="line">  </div><div class="line">- (void)test &#123;  </div><div class="line">    int n = 5;  </div><div class="line">    [self setBlock:^&#123;  </div><div class="line">        NSLog(@&quot;block %d&quot;,n);  </div><div class="line">    &#125;];  </div><div class="line">     NSLog(@&quot;test--%@&quot;,self.block);   </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="NSString-为啥用copy-修饰"><a href="#NSString-为啥用copy-修饰" class="headerlink" title="NSString 为啥用copy 修饰"></a>NSString 为啥用copy 修饰</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">	对于NSString类型，使用copy修饰，不会改变它原有的类型，strong会指向引用的对象，有可能改变属性的值，所以copy能增强NSString的健壮性  同理 NSArray  NSDictionary</div><div class="line">	</div><div class="line">	当原字符串是NSMutableString类型时，strong特性对象只是增加了原字符串的引用计数，但是copy特性对象则是对原字符串进行了深拷贝，创建了一个新对象，并且指向了这个新对象。此时，copy特性对象是NSString类型的不可变的,strong特性对象是NSMutableString类型的可变的</div><div class="line">*/</div><div class="line"></div><div class="line">@interface ViewController ()</div><div class="line"></div><div class="line">@property (nonatomic, strong)   NSString *str;</div><div class="line">@property (nonatomic, copy)     NSString *strCopy;</div><div class="line"></div><div class="line">@end</div><div class="line"></div><div class="line">@implementation ViewController</div><div class="line"></div><div class="line">- (void)viewDidLoad &#123;</div><div class="line">    [super viewDidLoad];</div><div class="line">    </div><div class="line">    NSString *str = [NSString stringWithFormat:@&quot;%@&quot;,@&quot;a&quot;];</div><div class="line">    NSLog(@&quot;str内存地址： %p&quot;,str); //0xa000000000000611</div><div class="line">    self.str = str;</div><div class="line">    </div><div class="line">    NSLog(@&quot;self.str 内存地址： %p&quot;,self.str);//0xa000000000000611   浅拷贝</div><div class="line">    </div><div class="line">    self.strCopy = str;</div><div class="line">    </div><div class="line">    NSLog(@&quot;self.strCopy内存地址： %p&quot;,self.strCopy);//0xa000000000000611  浅拷贝</div><div class="line">    </div><div class="line">    NSMutableString *mutStr = [NSMutableString stringWithFormat:@&quot;%@&quot;,@&quot;xxx&quot;];</div><div class="line">    </div><div class="line">    NSLog(@&quot;mutStr内存地址： %p&quot;,mutStr);  //0x60800007d800</div><div class="line">    </div><div class="line">    self.str = mutStr;</div><div class="line">    </div><div class="line">    NSLog(@&quot;str == %@ \n mutStr = %@&quot;,self.str,mutStr);</div><div class="line">    [mutStr appendString:@&quot;--------&quot;];</div><div class="line">    NSLog(@&quot;str == %@ \n mutStr = %@&quot;,self.str,mutStr); //str值发生改变</div><div class="line">    </div><div class="line">    NSLog(@&quot;self.str内存地址： %p&quot;,self.str);//0x60800007d800 strong指向同一个地址</div><div class="line">    </div><div class="line">    self.strCopy = mutStr;</div><div class="line">    </div><div class="line">    NSLog(@&quot;strCopy == %@ \n mutStr = %@&quot;,self.strCopy,mutStr);</div><div class="line">    [mutStr appendString:@&quot;--------&quot;];</div><div class="line">    NSLog(@&quot;strCopy == %@ \n mutStr = %@&quot;,self.strCopy,mutStr); //strCopy值不会发生改变</div><div class="line">    </div><div class="line">    NSLog(@&quot;self.strCopy内存地址： %p&quot;,self.strCopy);//0xa000000007878783</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">@end</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      一探究竟
    
    </summary>
    
      <category term="iOS" scheme="http://oxy.pub/categories/iOS/"/>
    
    
      <category term="Objective-C" scheme="http://oxy.pub/tags/Objective-C/"/>
    
  </entry>
  
</feed>
